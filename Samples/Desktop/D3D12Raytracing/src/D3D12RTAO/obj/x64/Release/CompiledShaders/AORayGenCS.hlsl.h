#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb
; {
;
;   struct cb
;   {
;
;       struct struct.RayGenConstantBuffer
;       {
;
;           uint2 textureDim;                         ; Offset:    0
;           int doCheckerboardRayGeneration;          ; Offset:    8
;           int checkerboardGenerateRaysForEvenPixels;; Offset:   12
;           uint seed;                                ; Offset:   16
;           uint numSamplesPerSet;                    ; Offset:   20
;           uint numSampleSets;                       ; Offset:   24
;           uint numPixelsPerDimPerSet;               ; Offset:   28
;       
;       } cb                                          ; Offset:    0
;
;   
;   } cb                                              ; Offset:    0 Size:    32
;
; }
;
; Resource bind info for g_sampleSets
; {
;
;   struct struct.AlignedHemisphereSample3D
;   {
;
;       float3 value;                                 ; Offset:    0
;       uint padding;                                 ; Offset:   12
;   
;   } $Element;                                       ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb                                cbuffer      NA          NA     CB0            cb0     1
; g_texRayOriginSurfaceNormalDepth   texture     u32          2d      T0             t0     1
; g_texRayOriginPosition            texture     f32          2d      T1             t1     1
; g_sampleSets                      texture  struct         r/o      T2             t3     1
; g_rtRaysDirectionOriginDepth          UAV     u32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%"class.StructuredBuffer<AlignedHemisphereSample3D>" = type { %struct.AlignedHemisphereSample3D }
%struct.AlignedHemisphereSample3D = type { <3 x float>, i32 }
%cb = type { %struct.RayGenConstantBuffer }
%struct.RayGenConstantBuffer = type { <2 x i32>, i32, i32, i32, i32, i32, i32 }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A" = external constant %"class.Texture2D<unsigned int>", align 4
@"\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_rtRaysDirectionOriginDepth@@3V?$RWTexture2D@I@@A" = external constant %"class.RWTexture2D<unsigned int>", align 4
@"\01?g_sampleSets@@3V?$StructuredBuffer@UAlignedHemisphereSample3D@@@@A" = external constant %"class.StructuredBuffer<AlignedHemisphereSample3D>", align 4
@cb = external constant %cb

define void @main() {
  %g_rtRaysDirectionOriginDepth_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_sampleSets_texture_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_texRayOriginPosition_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_texRayOriginSurfaceNormalDepth_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %cb_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %3 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %4 = extractvalue %dx.types.CBufRet.i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

; <label>:6                                       ; preds = %0
  %7 = and i32 %2, 1
  %8 = xor i32 %7, 1
  %9 = extractvalue %dx.types.CBufRet.i32 %3, 3
  %10 = icmp ne i32 %8, %9
  %11 = zext i1 %10 to i32
  %12 = shl i32 %1, 1
  %13 = or i32 %11, %12
  br label %14

; <label>:14                                      ; preds = %6, %0
  %DTidFullRes.0.i0 = phi i32 [ %13, %6 ], [ %1, %0 ]
  %TextureLoad = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %g_texRayOriginSurfaceNormalDepth_texture_2d, i32 0, i32 %DTidFullRes.0.i0, i32 %2, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %15 = extractvalue %dx.types.ResRet.i32 %TextureLoad, 0
  %16 = and i32 %15, 255
  %17 = uitofp i32 %16 to float
  %18 = lshr i32 %15, 8
  %19 = and i32 %18, 255
  %20 = uitofp i32 %19 to float
  %21 = lshr i32 %15, 16
  %LegacyF16ToF32 = call float @dx.op.legacyF16ToF32(i32 131, i32 %21)  ; LegacyF16ToF32(value)
  %.i0 = fmul fast float %17, 0x3F80101020000000
  %.i1 = fmul fast float %20, 0x3F80101020000000
  %.i021 = fadd fast float %.i0, -1.000000e+00
  %.i122 = fadd fast float %.i1, -1.000000e+00
  %FAbs9 = call float @dx.op.unary.f32(i32 6, float %.i021)  ; FAbs(value)
  %22 = fsub fast float 1.000000e+00, %FAbs9
  %FAbs8 = call float @dx.op.unary.f32(i32 6, float %.i122)  ; FAbs(value)
  %23 = fsub fast float %22, %FAbs8
  %24 = fsub fast float -0.000000e+00, %23
  %Saturate = call float @dx.op.unary.f32(i32 7, float %24)  ; Saturate(value)
  %.i023 = fcmp fast oge float %.i021, 0.000000e+00
  %.i124 = fcmp fast oge float %.i122, 0.000000e+00
  %25 = fsub fast float -0.000000e+00, %Saturate
  %26 = select i1 %.i023, float %25, float %Saturate
  %27 = select i1 %.i124, float %25, float %Saturate
  %.i025 = fadd fast float %26, %.i021
  %.i126 = fadd fast float %27, %.i122
  %28 = call float @dx.op.dot3.f32(i32 55, float %.i025, float %.i126, float %23, float %.i025, float %.i126, float %23)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt14 = call float @dx.op.unary.f32(i32 25, float %28)  ; Rsqrt(value)
  %.i027 = fmul fast float %.i025, %Rsqrt14
  %.i128 = fmul fast float %.i126, %Rsqrt14
  %.i2 = fmul fast float %Rsqrt14, %23
  %29 = fcmp fast une float %LegacyF16ToF32, 0.000000e+00
  br i1 %29, label %30, label %119

; <label>:30                                      ; preds = %14
  %31 = extractvalue %dx.types.CBufRet.i32 %3, 0
  %.i029 = fmul fast float %.i027, 0x3FD3333340000000
  %.i130 = fmul fast float %.i128, 0x3FD3333340000000
  %.i231 = fmul fast float %.i2, 0x3FD3333340000000
  %.i032 = fadd fast float %.i029, 0xBFE70A3D80000000
  %.i133 = fadd fast float %.i130, 0x3FE1EB8520000000
  %.i234 = fadd fast float %.i231, 0xBFD5C28F60000000
  %32 = fmul fast float %.i128, %.i234
  %33 = fmul fast float %.i133, %.i2
  %34 = fsub fast float %32, %33
  %35 = fmul fast float %.i032, %.i2
  %36 = fmul fast float %.i027, %.i234
  %37 = fsub fast float %35, %36
  %38 = fmul fast float %.i133, %.i027
  %39 = fmul fast float %.i032, %.i128
  %40 = fsub fast float %38, %39
  %41 = call float @dx.op.dot3.f32(i32 55, float %34, float %37, float %40, float %34, float %37, float %40)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt13 = call float @dx.op.unary.f32(i32 25, float %41)  ; Rsqrt(value)
  %.i035 = fmul fast float %Rsqrt13, %34
  %.i136 = fmul fast float %Rsqrt13, %37
  %.i237 = fmul fast float %Rsqrt13, %40
  %42 = fmul fast float %.i136, %.i2
  %43 = fmul fast float %.i237, %.i128
  %44 = fsub fast float %42, %43
  %45 = fmul fast float %.i237, %.i027
  %46 = fmul fast float %.i035, %.i2
  %47 = fsub fast float %45, %46
  %48 = fmul fast float %.i035, %.i128
  %49 = fmul fast float %.i136, %.i027
  %50 = fsub fast float %48, %49
  %51 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.i32 %51, 3
  %53 = add i32 %31, -1
  %54 = add i32 %53, %52
  %55 = udiv i32 %54, %52
  %.i038 = sdiv i32 %1, %52
  %.i139 = sdiv i32 %2, %52
  %.i040 = mul i32 %52, %.i038
  %.i141 = mul i32 %52, %.i139
  %TextureLoad15 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_texRayOriginPosition_texture_2d, i32 0, i32 %.i040, i32 %.i141, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %56 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 0
  %57 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 1
  %58 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 2
  %59 = mul i32 %.i139, %55
  %60 = add i32 %59, %.i038
  %61 = uitofp i32 %60 to float
  %.i042 = fmul fast float %56, 0x3FD45F3080000000
  %.i143 = fmul fast float %57, 0x3FD45F3080000000
  %.i244 = fmul fast float %58, 0x3FD45F3080000000
  %.i045 = fadd fast float %.i042, 0x3FB99999A0000000
  %.i146 = fadd fast float %.i143, 0x3FB99999A0000000
  %.i247 = fadd fast float %.i244, 0x3FB99999A0000000
  %Frc10 = call float @dx.op.unary.f32(i32 22, float %.i045)  ; Frc(value)
  %Frc11 = call float @dx.op.unary.f32(i32 22, float %.i146)  ; Frc(value)
  %Frc12 = call float @dx.op.unary.f32(i32 22, float %.i247)  ; Frc(value)
  %62 = fadd fast float %Frc11, %Frc10
  %63 = fadd fast float %62, %Frc12
  %.i149 = fmul fast float %Frc10, 8.352100e+04
  %.i250 = fmul fast float %.i149, %Frc11
  %64 = fmul fast float %.i250, %Frc12
  %65 = fmul fast float %64, %63
  %Frc = call float @dx.op.unary.f32(i32 22, float %65)  ; Frc(value)
  %66 = fmul fast float %Frc, %61
  %67 = extractvalue %dx.types.CBufRet.i32 %51, 0
  %68 = uitofp i32 %67 to float
  %69 = fadd fast float %68, %66
  %70 = fptoui float %69 to i32
  %71 = xor i32 %70, 61
  %72 = lshr i32 %70, 16
  %73 = xor i32 %71, %72
  %74 = mul i32 %73, 9
  %75 = lshr i32 %74, 4
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 668265261
  %78 = lshr i32 %77, 15
  %79 = xor i32 %78, %77
  %80 = extractvalue %dx.types.CBufRet.i32 %51, 2
  %81 = uitofp i32 %80 to float
  %82 = shl i32 %79, 13
  %83 = xor i32 %82, %79
  %84 = lshr i32 %83, 17
  %85 = xor i32 %84, %83
  %86 = shl i32 %85, 5
  %87 = xor i32 %86, %85
  %88 = lshr i32 %87, 9
  %89 = or i32 %88, 1065353216
  %90 = bitcast i32 %89 to float
  %91 = fadd fast float %90, -1.000000e+00
  %92 = fmul fast float %91, %81
  %93 = fptoui float %92 to i32
  %94 = extractvalue %dx.types.CBufRet.i32 %51, 1
  %95 = mul i32 %93, %94
  %.i051 = srem i32 %1, %52
  %.i152 = srem i32 %2, %52
  %96 = mul i32 %52, %.i152
  %97 = add i32 %96, %.i051
  %98 = mul i32 %52, %52
  %99 = uitofp i32 %98 to float
  %100 = shl i32 %87, 13
  %101 = xor i32 %100, %87
  %102 = lshr i32 %101, 17
  %103 = xor i32 %102, %101
  %104 = shl i32 %103, 5
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 9
  %107 = or i32 %106, 1065353216
  %108 = bitcast i32 %107 to float
  %109 = fadd fast float %108, -1.000000e+00
  %110 = fmul fast float %109, %99
  %111 = fptoui float %110 to i32
  %112 = add i32 %97, %111
  %113 = urem i32 %112, %94
  %114 = add i32 %95, %113
  %RawBufferLoad = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %g_sampleSets_texture_structbuf, i32 %114, i32 0, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %115 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 0
  %116 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 1
  %117 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 2
  %.i053 = fmul fast float %115, %44
  %.i154 = fmul fast float %115, %47
  %.i255 = fmul fast float %115, %50
  %.i056 = fmul fast float %116, %.i035
  %.i157 = fmul fast float %116, %.i136
  %.i258 = fmul fast float %116, %.i237
  %.i059 = fadd fast float %.i053, %.i056
  %.i160 = fadd fast float %.i154, %.i157
  %.i261 = fadd fast float %.i255, %.i258
  %.i062 = fmul fast float %117, %.i027
  %.i163 = fmul fast float %117, %.i128
  %.i264 = fmul fast float %117, %.i2
  %.i065 = fadd fast float %.i059, %.i062
  %.i166 = fadd fast float %.i160, %.i163
  %.i267 = fadd fast float %.i261, %.i264
  %118 = call float @dx.op.dot3.f32(i32 55, float %.i065, float %.i166, float %.i267, float %.i065, float %.i166, float %.i267)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %118)  ; Rsqrt(value)
  %.i068 = fmul fast float %.i065, %Rsqrt
  %.i169 = fmul fast float %.i166, %Rsqrt
  %.i270 = fmul fast float %.i267, %Rsqrt
  br label %119

; <label>:119                                     ; preds = %30, %14
  %rayDirection.0.i0 = phi float [ %.i068, %30 ], [ 0.000000e+00, %14 ]
  %rayDirection.0.i1 = phi float [ %.i169, %30 ], [ 0.000000e+00, %14 ]
  %rayDirection.0.i2 = phi float [ %.i270, %30 ], [ 0.000000e+00, %14 ]
  %FAbs7 = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i0)  ; FAbs(value)
  %FAbs6 = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i1)  ; FAbs(value)
  %120 = fadd fast float %FAbs6, %FAbs7
  %FAbs = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i2)  ; FAbs(value)
  %121 = fadd fast float %120, %FAbs
  %.i071 = fdiv fast float %rayDirection.0.i0, %121
  %.i172 = fdiv fast float %rayDirection.0.i1, %121
  %.i273 = fdiv fast float %rayDirection.0.i2, %121
  %122 = fcmp fast oge float %.i273, 0.000000e+00
  %FAbs16 = call float @dx.op.unary.f32(i32 6, float %.i172)  ; FAbs(value)
  %FAbs17 = call float @dx.op.unary.f32(i32 6, float %.i071)  ; FAbs(value)
  %.i074 = fsub fast float 1.000000e+00, %FAbs16
  %.i175 = fsub fast float 1.000000e+00, %FAbs17
  %.i076 = fcmp fast oge float %.i071, 0.000000e+00
  %.i177 = fcmp fast oge float %.i172, 0.000000e+00
  %.i078 = select i1 %.i076, float 1.000000e+00, float -1.000000e+00
  %.i179 = select i1 %.i177, float 1.000000e+00, float -1.000000e+00
  %.i080 = fmul fast float %.i074, %.i078
  %.i181 = fmul fast float %.i175, %.i179
  %.i082 = select i1 %122, float %.i071, float %.i080
  %.i183 = select i1 %122, float %.i172, float %.i181
  %123 = fmul fast float %.i082, 1.275000e+02
  %124 = fadd fast float %123, 1.275000e+02
  %Round_ne5 = call float @dx.op.unary.f32(i32 26, float %124)  ; Round_ne(value)
  %FMax18 = call float @dx.op.binary.f32(i32 35, float %Round_ne5, float 0.000000e+00)  ; FMax(a,b)
  %FMin19 = call float @dx.op.binary.f32(i32 36, float %FMax18, float 2.550000e+02)  ; FMin(a,b)
  %125 = fptoui float %FMin19 to i32
  %126 = fmul fast float %.i183, 1.275000e+02
  %127 = fadd fast float %126, 1.275000e+02
  %Round_ne = call float @dx.op.unary.f32(i32 26, float %127)  ; Round_ne(value)
  %FMax = call float @dx.op.binary.f32(i32 35, float %Round_ne, float 0.000000e+00)  ; FMax(a,b)
  %FMin = call float @dx.op.binary.f32(i32 36, float %FMax, float 2.550000e+02)  ; FMin(a,b)
  %128 = fptoui float %FMin to i32
  %129 = shl i32 %128, 8
  %LegacyF32ToF16 = call i32 @dx.op.legacyF32ToF16(i32 130, float %LegacyF16ToF32)  ; LegacyF32ToF16(value)
  %130 = shl i32 %LegacyF32ToF16, 16
  %131 = or i32 %129, %125
  %132 = or i32 %131, %130
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %g_rtRaysDirectionOriginDepth_UAV_2d, i32 %1, i32 %2, i32 undef, i32 %132, i32 %132, i32 %132, i32 %132, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!16, !41}
!dx.entryPoints = !{!45}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"cs", i32 6, i32 3}
!4 = !{!5, !12, !14, null}
!5 = !{!6, !8, !10}
!6 = !{i32 0, %"class.Texture2D<unsigned int>"* undef, !"g_texRayOriginSurfaceNormalDepth", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 5}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"g_texRayOriginPosition", i32 0, i32 1, i32 1, i32 2, i32 0, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 2, %"class.StructuredBuffer<AlignedHemisphereSample3D>"* undef, !"g_sampleSets", i32 0, i32 3, i32 1, i32 12, i32 0, !11}
!11 = !{i32 1, i32 16}
!12 = !{!13}
!13 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"g_rtRaysDirectionOriginDepth", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!14 = !{!15}
!15 = !{i32 0, %cb* undef, !"cb", i32 0, i32 0, i32 1, i32 32, null}
!16 = !{i32 0, %"class.Texture2D<unsigned int>" undef, !17, %"class.Texture2D<unsigned int>::mips_type" undef, !20, %"class.Texture2D<vector<float, 4> >" undef, !22, %"class.Texture2D<vector<float, 4> >::mips_type" undef, !20, %"class.RWTexture2D<unsigned int>" undef, !25, %struct.RayGenConstantBuffer undef, !26, %"class.StructuredBuffer<AlignedHemisphereSample3D>" undef, !34, %struct.AlignedHemisphereSample3D undef, !36, %cb undef, !39}
!17 = !{i32 8, !18, !19}
!18 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!19 = !{i32 6, !"mips", i32 3, i32 4}
!20 = !{i32 4, !21}
!21 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!22 = !{i32 20, !23, !24}
!23 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!24 = !{i32 6, !"mips", i32 3, i32 16}
!25 = !{i32 4, !18}
!26 = !{i32 32, !27, !28, !29, !30, !31, !32, !33}
!27 = !{i32 6, !"textureDim", i32 3, i32 0, i32 7, i32 5}
!28 = !{i32 6, !"doCheckerboardRayGeneration", i32 3, i32 8, i32 7, i32 4}
!29 = !{i32 6, !"checkerboardGenerateRaysForEvenPixels", i32 3, i32 12, i32 7, i32 4}
!30 = !{i32 6, !"seed", i32 3, i32 16, i32 7, i32 5}
!31 = !{i32 6, !"numSamplesPerSet", i32 3, i32 20, i32 7, i32 5}
!32 = !{i32 6, !"numSampleSets", i32 3, i32 24, i32 7, i32 5}
!33 = !{i32 6, !"numPixelsPerDimPerSet", i32 3, i32 28, i32 7, i32 5}
!34 = !{i32 16, !35}
!35 = !{i32 6, !"h", i32 3, i32 0}
!36 = !{i32 16, !37, !38}
!37 = !{i32 6, !"value", i32 3, i32 0, i32 7, i32 9}
!38 = !{i32 6, !"padding", i32 3, i32 12, i32 7, i32 5}
!39 = !{i32 32, !40}
!40 = !{i32 6, !"cb", i32 3, i32 0}
!41 = !{i32 1, void ()* @main, !42}
!42 = !{!43}
!43 = !{i32 0, !44, !44}
!44 = !{}
!45 = !{void ()* @main, !"main", null, !4, !46}
!46 = !{i32 0, i64 16, i32 4, !47}
!47 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char g_pAORayGenCS[] = {
  0x44, 0x58, 0x42, 0x43, 0x44, 0x4a, 0x4e, 0x7f, 0x23, 0x03, 0x4d, 0x9f,
  0x0e, 0xc9, 0x4c, 0x76, 0x1d, 0x3b, 0xb4, 0x6f, 0x01, 0x00, 0x00, 0x00,
  0x58, 0x15, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x8c, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x58, 0x14, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00, 0x16, 0x05, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x40, 0x14, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x0d, 0x05, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe0, 0xc1, 0x1c,
  0x01, 0x18, 0xcc, 0x84, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf5, 0xe0, 0x0e, 0xf3, 0x90, 0x0e, 0xe7,
  0xe0, 0x0e, 0xe5, 0x40, 0x0e, 0x60, 0x90, 0x0e, 0xee, 0x40, 0x0f, 0x7e,
  0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0, 0x0b, 0xf4,
  0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x00, 0x66, 0xea, 0xc6, 0x81, 0x1d,
  0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e,
  0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xea, 0xc1, 0x1d,
  0xe6, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xc0, 0x20, 0x1d,
  0xdc, 0x81, 0x1e, 0xfc, 0x00, 0x09, 0x40, 0x40, 0xc2, 0x0c, 0xc0, 0x30,
  0x02, 0x41, 0xcc, 0xd4, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef,
  0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c,
  0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x7a, 0xa0, 0x07, 0xed,
  0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f, 0xe5,
  0x80, 0x02, 0x60, 0x26, 0x31, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98,
  0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28,
  0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78,
  0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60,
  0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0x40, 0x42, 0x61, 0xd0,
  0x31, 0xd3, 0x37, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x20,
  0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x50, 0x0f, 0xee, 0x30, 0x0f, 0xe9, 0x70,
  0x0e, 0xee, 0x50, 0x0e, 0xe4, 0x00, 0x06, 0xe9, 0xe0, 0x0e, 0xf4, 0xe0,
  0x07, 0x28, 0x00, 0x28, 0x19, 0x46, 0x18, 0x88, 0x03, 0x03, 0x69, 0x8a,
  0x28, 0x61, 0xf2, 0xb5, 0x05, 0x31, 0x1a, 0x62, 0x08, 0x09, 0x06, 0x91,
  0x9e, 0x83, 0x88, 0x08, 0x16, 0x60, 0x9e, 0x85, 0xb8, 0x3b, 0x24, 0x2c,
  0xc0, 0x4c, 0x71, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e,
  0x30, 0x0b, 0xf4, 0x20, 0x0f, 0xf5, 0x30, 0x0e, 0xf4, 0x50, 0x0f, 0xf2,
  0x50, 0x0e, 0xe4, 0x20, 0x0a, 0xf5, 0x60, 0x0e, 0xe6, 0x50, 0x0e, 0xf2,
  0xc0, 0x07, 0xa1, 0xc0, 0x0e, 0xe9, 0x70, 0x0e, 0xee, 0x50, 0x0e, 0xe4,
  0x80, 0x0a, 0xe5, 0xd0, 0x0e, 0xe9, 0x30, 0x0f, 0xf0, 0x80, 0x0e, 0xe5,
  0x20, 0x0f, 0xe5, 0x30, 0x0b, 0xe1, 0xd0, 0x0e, 0xf0, 0xc0, 0x0e, 0xe5,
  0x30, 0x07, 0xa4, 0xe0, 0x07, 0x28, 0x60, 0xa8, 0x19, 0x46, 0x10, 0x80,
  0xdb, 0xa4, 0x29, 0xa2, 0x84, 0xc9, 0x5f, 0x01, 0x0c, 0x24, 0x1a, 0xce,
  0x69, 0xa4, 0x09, 0x68, 0xa6, 0x8d, 0x2a, 0x0a, 0x22, 0x42, 0xc7, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x27, 0x08, 0x01, 0x0a, 0x20, 0x8a, 0x46, 0x00,
  0x4a, 0x30, 0x11, 0x55, 0x06, 0x00, 0x00, 0xc8, 0x3a, 0x6a, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x47, 0x6e,
  0x1b, 0x11, 0x00, 0x00, 0x00, 0x73, 0x04, 0x08, 0x65, 0xf7, 0x0c, 0x97,
  0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x02, 0xad,
  0x10, 0x18, 0xb0, 0x01, 0xc4, 0x95, 0x65, 0x02, 0x36, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x32, 0xf2, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0x57, 0x42, 0x5a, 0x89, 0xc9, 0x47, 0x6e, 0x1b, 0x15, 0x00, 0x00, 0x00,
  0x40, 0x51, 0x40, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc2, 0x32,
  0x10, 0x00, 0x40, 0x63, 0x19, 0x08, 0x80, 0xa0, 0xb2, 0x20, 0x04, 0x40,
  0x10, 0x04, 0x41, 0x10, 0x74, 0xde, 0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84,
  0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x2a, 0x08, 0x82,
  0x20, 0x80, 0xa2, 0xa4, 0xc0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa9,
  0xe5, 0x48, 0x81, 0x0d, 0x00, 0x32, 0x80, 0xd8, 0x32, 0x00, 0x00, 0x41,
  0x6e, 0x21, 0x08, 0x80, 0x20, 0x08, 0x9e, 0x23, 0x08, 0x8a, 0xb1, 0x01,
  0x19, 0x00, 0xc8, 0x34, 0x0f, 0x04, 0xcc, 0x11, 0x80, 0xc2, 0x14, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x8a, 0x01, 0x00, 0xf3, 0x0c,
  0x00, 0x98, 0x69, 0x00, 0xc0, 0x6c, 0x03, 0x00, 0x66, 0x1c, 0x00, 0xc0,
  0x90, 0x87, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0x8f, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x43, 0x1e, 0x0e, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc2, 0x00, 0x08, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x32, 0x00,
  0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf,
  0x19, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x90, 0x47, 0x0d, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xc3, 0x06, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0xe4, 0x71, 0x03, 0x20, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xc0, 0x01, 0x10, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xe6, 0x00, 0x08,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x0a,
  0xa1, 0x18, 0x46, 0x00, 0x8a, 0xa0, 0x14, 0x4a, 0xa2, 0x30, 0x0a, 0xa4,
  0x80, 0x0a, 0xa2, 0x1c, 0x0a, 0xa5, 0x60, 0x0a, 0x87, 0xec, 0x02, 0x21,
  0x79, 0x04, 0x80, 0x86, 0x19, 0x00, 0x32, 0x66, 0x00, 0xe8, 0x98, 0x01,
  0x20, 0x64, 0x06, 0x80, 0x92, 0x19, 0x00, 0x52, 0x66, 0x00, 0x88, 0x99,
  0x01, 0xa0, 0x66, 0x06, 0x80, 0x9c, 0x19, 0x00, 0x82, 0x66, 0x00, 0x28,
  0x9a, 0x01, 0x20, 0x69, 0x06, 0x80, 0x84, 0x19, 0x00, 0x0a, 0x66, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c,
  0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x00, 0x69, 0x82, 0x00,
  0x4c, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x00, 0xd4, 0x06, 0x61, 0x30, 0x28,
  0x8c, 0xcd, 0x4d, 0x10, 0x80, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01,
  0xb0, 0x26, 0x08, 0x03, 0x19, 0x10, 0x0c, 0xce, 0xbe, 0xe8, 0xca, 0xf0,
  0xa4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0xa6, 0xea, 0xe4,
  0xcc, 0xc2, 0xc6, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca,
  0xe0, 0xe8, 0xd0, 0x26, 0x08, 0xc0, 0x35, 0x41, 0x00, 0xb0, 0x0d, 0xc2,
  0xf2, 0x6c, 0x48, 0x16, 0xa6, 0x59, 0x96, 0xc1, 0x59, 0xa0, 0x09, 0x02,
  0x72, 0x06, 0xb4, 0xce, 0xbe, 0xe8, 0xca, 0xf0, 0xa4, 0xc2, 0xf2, 0x9e,
  0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0xa0, 0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde,
  0xdc, 0x26, 0x08, 0x40, 0xb6, 0x41, 0x58, 0xa8, 0x0d, 0xc9, 0x20, 0x4d,
  0xcb, 0x30, 0x38, 0x4b, 0x35, 0x41, 0x70, 0xd8, 0x80, 0xcc, 0xd9, 0xd7,
  0x5c, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x54, 0x19, 0xdd, 0xdc, 0x04, 0x01,
  0xd0, 0x26, 0x08, 0xc0, 0xb6, 0x41, 0x18, 0xb4, 0x0d, 0x89, 0x73, 0x61,
  0x0b, 0x31, 0x64, 0xcb, 0xb6, 0x61, 0x88, 0x2c, 0x6e, 0x82, 0xa0, 0xa4,
  0x01, 0xb9, 0xb3, 0x2f, 0x39, 0x3a, 0xa9, 0xb0, 0xbc, 0x39, 0xa2, 0x34,
  0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x27, 0xb9, 0xb4, 0xb3, 0x34,
  0x37, 0xa2, 0x32, 0x38, 0x3a, 0xb4, 0x09, 0x82, 0x1c, 0x8c, 0xc1, 0x86,
  0x65, 0xf1, 0xbe, 0x65, 0x19, 0x1c, 0x30, 0x00, 0x03, 0x30, 0x80, 0x36,
  0x04, 0x61, 0x30, 0x41, 0x90, 0xde, 0x80, 0xc2, 0x98, 0xd8, 0x04, 0x01,
  0xe0, 0x36, 0x20, 0xcb, 0x18, 0x90, 0xc1, 0xb2, 0x0c, 0x65, 0x00, 0x6c,
  0x08, 0xcc, 0x60, 0x03, 0xd1, 0x89, 0xc1, 0x19, 0x00, 0x13, 0x04, 0x01,
  0x0e, 0x26, 0x08, 0x40, 0xc7, 0x00, 0x6d, 0x82, 0x00, 0x78, 0x1b, 0x8c,
  0x64, 0x0d, 0x88, 0x85, 0x0d, 0x1e, 0x12, 0x6d, 0x69, 0x70, 0x73, 0x1b,
  0x88, 0xc4, 0x0d, 0x08, 0x63, 0xc3, 0xa0, 0x06, 0x6d, 0xf0, 0x06, 0x13,
  0x84, 0x20, 0x0e, 0x68, 0xa0, 0x85, 0xb9, 0x91, 0xb1, 0x95, 0x6d, 0x30,
  0x12, 0x39, 0x20, 0x16, 0x36, 0x78, 0x36, 0x08, 0xc6, 0x1c, 0x4c, 0x10,
  0x0e, 0x33, 0x98, 0x20, 0x00, 0xdf, 0x06, 0x23, 0x59, 0x03, 0x62, 0x61,
  0x03, 0x6a, 0x03, 0x91, 0xb8, 0x01, 0xa1, 0x6d, 0x18, 0xec, 0xe0, 0x0e,
  0xf0, 0x60, 0x82, 0x60, 0x94, 0xc1, 0x04, 0x21, 0x41, 0x83, 0x0d, 0x82,
  0xd1, 0x06, 0x13, 0x04, 0xa8, 0x0d, 0xa8, 0xd0, 0x95, 0xe1, 0xd1, 0xd5,
  0xc9, 0x95, 0x11, 0xa5, 0xb5, 0x6d, 0x30, 0x12, 0x3f, 0x20, 0x16, 0x36,
  0x78, 0xb8, 0x91, 0xbd, 0x0d, 0xa1, 0x95, 0x8d, 0xad, 0x95, 0xc9, 0x89,
  0xbd, 0x85, 0xc9, 0x91, 0x49, 0x85, 0xe5, 0x1d, 0x95, 0xb9, 0x95, 0xc9,
  0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0x6d, 0x30, 0x12, 0x50, 0x20, 0xd4, 0x80,
  0x0d, 0x0c, 0x96, 0xc1, 0x18, 0x5a, 0xd9, 0xd8, 0x5a, 0x99, 0x9c, 0xd8,
  0x5b, 0x98, 0x1c, 0xd9, 0x51, 0x99, 0x5b, 0x99, 0x5c, 0x18, 0x5d, 0x99,
  0x54, 0x58, 0xde, 0x9c, 0xd1, 0x9b, 0x5c, 0x91, 0x5d, 0x99, 0x1b, 0x54,
  0x1a, 0x5e, 0x19, 0xdb, 0xdc, 0x06, 0x23, 0x11, 0x05, 0x22, 0x63, 0x03,
  0x83, 0xc4, 0x5c, 0x59, 0x19, 0xd9, 0x06, 0x23, 0x21, 0x05, 0x42, 0x63,
  0x83, 0x87, 0x90, 0x5b, 0x5d, 0xdb, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9,
  0x1c, 0x54, 0x99, 0xdc, 0x54, 0x19, 0xdd, 0x06, 0x23, 0x31, 0x05, 0xc2,
  0x0e, 0xd8, 0xe0, 0x61, 0xe3, 0x56, 0xd7, 0x36, 0x15, 0xd6, 0x06, 0xc7,
  0x56, 0x36, 0x55, 0x46, 0x37, 0x37, 0x41, 0x00, 0xc0, 0x60, 0x83, 0x91,
  0xa0, 0x02, 0x91, 0x0a, 0x6c, 0xf0, 0xb0, 0x72, 0xab, 0x6b, 0x83, 0x4a,
  0xc3, 0x2b, 0x63, 0x9b, 0x83, 0x2a, 0x93, 0x23, 0x4a, 0x6b, 0x83, 0x2a,
  0x93, 0x9b, 0x2a, 0xa3, 0x9b, 0x20, 0x00, 0x61, 0xb0, 0xc1, 0x48, 0x56,
  0x81, 0x60, 0x05, 0x36, 0x78, 0x36, 0x20, 0x65, 0xf0, 0x07, 0xa1, 0x30,
  0x0a, 0xa5, 0x70, 0x0a, 0xaa, 0xd0, 0x0a, 0x13, 0x84, 0x66, 0x0d, 0x36,
  0x10, 0xc9, 0x1a, 0x10, 0xcb, 0x06, 0x41, 0x83, 0x85, 0x09, 0x02, 0xa3,
  0x06, 0x2c, 0xec, 0xc2, 0xd8, 0xea, 0xca, 0x36, 0x18, 0xc9, 0x2c, 0x10,
  0x0b, 0x1b, 0x50, 0x3c, 0xe0, 0xc2, 0xc8, 0xc8, 0xd2, 0xdc, 0xce, 0x36,
  0x18, 0x49, 0x2d, 0x10, 0x19, 0x1b, 0x3c, 0x1b, 0x06, 0x8d, 0x16, 0x6c,
  0x61, 0x82, 0x10, 0xb9, 0xc1, 0x06, 0x22, 0x21, 0x03, 0x62, 0xd9, 0x20,
  0x94, 0x41, 0x2e, 0x6c, 0x98, 0x96, 0x34, 0x80, 0x83, 0x38, 0xa0, 0x83,
  0x3a, 0xc8, 0x03, 0x3d, 0xa0, 0x83, 0x3d, 0xe0, 0x83, 0x3e, 0x70, 0x85,
  0x57, 0x88, 0x05, 0x59, 0xb8, 0x05, 0x5c, 0xd0, 0x85, 0x09, 0x42, 0x55,
  0x6c, 0x00, 0x36, 0x0c, 0x4b, 0x2f, 0xf4, 0xc2, 0x86, 0xc0, 0x17, 0x36,
  0x0c, 0x03, 0x2f, 0xfc, 0x02, 0x89, 0xb6, 0xb0, 0x34, 0xb7, 0x09, 0x82,
  0x1d, 0x88, 0xc1, 0x86, 0x41, 0x0d, 0xd4, 0x60, 0xd8, 0x40, 0x2c, 0xe2,
  0x60, 0x8c, 0xc3, 0x86, 0x82, 0x17, 0xc2, 0x01, 0x40, 0x03, 0x72, 0xa8,
  0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46, 0x37, 0x25,
  0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9,
  0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65,
  0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59,
  0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x20, 0x29, 0x43, 0x86,
  0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36, 0x37, 0x25,
  0x38, 0x83, 0x4a, 0x64, 0x78, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x41, 0x6e,
  0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x04, 0x5d,
  0xf8, 0x85, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50,
  0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x02, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0xb6, 0xf0, 0x0c, 0x97,
  0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x5d, 0x01, 0x7b,
  0x10, 0xf8, 0x9d, 0xbf, 0xf4, 0x32, 0x5e, 0x1a, 0xce, 0x3f, 0xe5, 0xe9,
  0x73, 0xda, 0x0d, 0x7d, 0xcf, 0xd3, 0xf4, 0xf4, 0xdb, 0x0d, 0x04, 0xce,
  0xac, 0x3f, 0x12, 0xb5, 0x8c, 0xa7, 0xd7, 0xe5, 0x65, 0x19, 0x11, 0x68,
  0xfd, 0x91, 0xec, 0xe5, 0x31, 0xfd, 0x2d, 0x07, 0x36, 0x49, 0xb0, 0x19,
  0x10, 0x08, 0x04, 0x06, 0x2d, 0x42, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x21,
  0x22, 0x80, 0x89, 0x08, 0x81, 0x66, 0x58, 0x08, 0x4b, 0xa8, 0x86, 0xcb,
  0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0x1f,
  0xb9, 0x6d, 0x23, 0x10, 0x84, 0xc0, 0x1e, 0xa8, 0xe1, 0xf2, 0x9d, 0xc7,
  0x5f, 0x08, 0x03, 0x10, 0xb0, 0xef, 0xb6, 0x5b, 0xe7, 0xab, 0x75, 0x3b,
  0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20, 0xa2, 0xd2,
  0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x91, 0xdb, 0x2e, 0x00, 0x3b,
  0x08, 0xfc, 0xce, 0x5f, 0x7a, 0x19, 0x2f, 0x0d, 0xe7, 0x9f, 0xf2, 0xf4,
  0x39, 0xed, 0x9e, 0xd6, 0xe5, 0xe6, 0xf0, 0xb8, 0xec, 0x7c, 0xcb, 0xdb,
  0x61, 0x36, 0xb1, 0x0c, 0xa7, 0xa3, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0xa2,
  0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0x02, 0x93, 0x40, 0x60, 0xb0,
  0x04, 0xe8, 0x20, 0xf0, 0x3b, 0x7f, 0xe5, 0x74, 0x69, 0x38, 0x3f, 0x27,
  0xa6, 0xe5, 0xe5, 0x31, 0x3d, 0xfd, 0x76, 0x3f, 0xe5, 0xe9, 0x73, 0xda,
  0x4d, 0x2c, 0xc3, 0xe9, 0x68, 0x20, 0x70, 0x66, 0xfd, 0x91, 0xa4, 0x57,
  0x6a, 0x19, 0x4f, 0xaf, 0xcb, 0xcb, 0x32, 0x22, 0x30, 0x09, 0x04, 0x06,
  0x0d, 0xc1, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22,
  0xd8, 0xc9, 0x89, 0x08, 0x1f, 0xb9, 0xed, 0x1a, 0x20, 0x85, 0xc0, 0xef,
  0xfc, 0x9d, 0x87, 0xdb, 0x70, 0x76, 0x79, 0x5a, 0xa6, 0xcf, 0x81, 0xc0,
  0x99, 0xf5, 0x47, 0x9a, 0xd2, 0xe5, 0xf5, 0x31, 0xbd, 0x2e, 0x2f, 0x93,
  0x85, 0x75, 0xb3, 0xb9, 0x2c, 0x07, 0x56, 0x83, 0xec, 0xf4, 0xd9, 0x5d,
  0x26, 0x23, 0xcb, 0xed, 0xf4, 0x1c, 0x8e, 0x2e, 0xcb, 0xcb, 0xd3, 0x70,
  0x1b, 0xce, 0x2e, 0xcf, 0x88, 0x40, 0x20, 0x10, 0x18, 0x34, 0x87, 0x6b,
  0xb8, 0x7c, 0xe7, 0xf1, 0x23, 0xc0, 0xda, 0xa8, 0xa2, 0x20, 0xa2, 0xd2,
  0x01, 0x06, 0xbf, 0xb8, 0x6d, 0x33, 0x90, 0x86, 0xcb, 0x77, 0x1e, 0x7f,
  0x3a, 0x22, 0x02, 0x18, 0xc4, 0xc1, 0x47, 0x6e, 0xdb, 0x1a, 0xaa, 0xe1,
  0xf2, 0x9d, 0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1,
  0x2f, 0x6e, 0xdb, 0x0a, 0x08, 0x06, 0x40, 0x1a, 0x53, 0xa0, 0x86, 0xcb,
  0x77, 0x1e, 0x7f, 0x21, 0x0c, 0x40, 0xc0, 0xbe, 0x5a, 0x6f, 0x9d, 0xef,
  0xb6, 0x8d, 0xc1, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0xc1, 0x99, 0x6e, 0xbf,
  0xb8, 0x6d, 0x83, 0x80, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x40, 0x1a, 0x20,
  0xc2, 0xfc, 0xe2, 0xb6, 0x01, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x36, 0x02, 0x00, 0x00, 0x13, 0x04, 0x45, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x04, 0xcc, 0x00, 0x94, 0x5c, 0xb1, 0x94, 0x5b,
  0xc9, 0x94, 0x6e, 0x40, 0xd9, 0x15, 0x61, 0x40, 0xf9, 0x0f, 0x94, 0x46,
  0x89, 0x14, 0x20, 0x20, 0x20, 0xfe, 0x41, 0xd1, 0x94, 0x51, 0x21, 0x95,
  0xa1, 0x40, 0x0d, 0x94, 0x5e, 0x69, 0xb3, 0x9e, 0xf6, 0x13, 0x94, 0x47,
  0x59, 0x0a, 0x14, 0xa1, 0x40, 0x19, 0x06, 0x50, 0x56, 0x1e, 0xe5, 0x50,
  0x04, 0x25, 0x30, 0x02, 0x40, 0xc4, 0x18, 0x01, 0xc9, 0xfa, 0xa5, 0xfa,
  0x8d, 0x11, 0xb4, 0xe6, 0x9c, 0xf3, 0xde, 0x18, 0x41, 0x48, 0x82, 0x21,
  0xe8, 0x8d, 0x11, 0x80, 0x20, 0x08, 0x82, 0xa0, 0x30, 0x46, 0x00, 0x82,
  0xa0, 0x7f, 0x87, 0xc1, 0x18, 0x01, 0xfb, 0xd2, 0xf0, 0xfc, 0x0b, 0x63,
  0x04, 0x69, 0x78, 0xfb, 0xf0, 0x37, 0x46, 0xb0, 0x8f, 0x25, 0xaf, 0xfe,
  0xc2, 0x18, 0x01, 0x48, 0xa2, 0xa6, 0x3e, 0x06, 0x63, 0x04, 0x3a, 0x6b,
  0xce, 0xe9, 0x37, 0x46, 0x00, 0x82, 0xa0, 0xff, 0x86, 0xc1, 0x18, 0x01,
  0x08, 0x82, 0x20, 0xfe, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xbf, 0x30,
  0x02, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x30, 0x07,
  0xab, 0x90, 0x06, 0x90, 0x29, 0x98, 0x42, 0x1e, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0xc1, 0x1c, 0xb0, 0x82, 0x1a, 0x40, 0xa6, 0xa0, 0x0a, 0x7a,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x73, 0xd0, 0x0a, 0x6b, 0x10,
  0xb1, 0x02, 0x2b, 0xec, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0xcc,
  0x81, 0x2b, 0xb0, 0x81, 0x94, 0x0a, 0xa9, 0xc0, 0x07, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x30, 0x07, 0xaf, 0xd0, 0x06, 0x95, 0x2a, 0xa8, 0x42,
  0x1f, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0xb5, 0x0b, 0x6a, 0xb0,
  0x0a, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x60, 0xf1, 0xc2, 0x1a, 0xc0,
  0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x70, 0xbc, 0xb0, 0x06, 0x43,
  0x2b, 0x8c, 0x26, 0x04, 0xc2, 0x70, 0x43, 0xf0, 0x0a, 0x60, 0x30, 0xcb,
  0x20, 0x04, 0x41, 0x11, 0xb4, 0xa0, 0x15, 0xd4, 0x02, 0x8f, 0x26, 0x14,
  0xc3, 0x70, 0x83, 0x10, 0x84, 0xc1, 0x05, 0x40, 0x94, 0x92, 0x0b, 0x57,
  0x42, 0xb0, 0xb3, 0x04, 0xc2, 0x40, 0x05, 0x20, 0x04, 0x18, 0x30, 0x62,
  0xd0, 0x00, 0x20, 0x08, 0x06, 0x61, 0x50, 0x0e, 0x75, 0xf0, 0xe0, 0x42,
  0xc0, 0xf0, 0x01, 0x1f, 0xf0, 0x01, 0x1f, 0x8c, 0x26, 0x04, 0x40, 0x05,
  0x76, 0xa0, 0x17, 0x10, 0x55, 0x43, 0x2d, 0x60, 0x05, 0x79, 0xa0, 0x17,
  0x10, 0x55, 0x86, 0x2e, 0xe0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x8c,
  0x01, 0x3b, 0xd4, 0x41, 0x60, 0xc6, 0x19, 0xc8, 0xc7, 0x08, 0x34, 0x90,
  0x8f, 0x09, 0x1f, 0x7c, 0x4c, 0x00, 0x03, 0xf8, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x41, 0x19, 0xc0, 0x83, 0x39, 0x08, 0x36, 0x06, 0x41, 0x7c,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x0c, 0xe4, 0x01, 0x1d, 0x06,
  0x13, 0x82, 0xf8, 0x98, 0x1b, 0x04, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x83, 0x32, 0xa8, 0x07, 0x71, 0x08, 0x86, 0x23, 0x10, 0x33, 0x18,
  0xbe, 0xe1, 0x08, 0xe4, 0x0c, 0x86, 0xcf, 0xe4, 0x60, 0x88, 0xcf, 0x74,
  0x43, 0x40, 0x0c, 0xd3, 0x0d, 0x42, 0x31, 0x98, 0xd0, 0xc0, 0xc7, 0x84,
  0x06, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0x70, 0x06, 0xfc, 0x30,
  0x0b, 0x42, 0xa0, 0x08, 0x81, 0x32, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x65, 0xe0, 0x0f, 0xb3, 0x10, 0x18, 0x11, 0xc8, 0xc7, 0x08, 0x41, 0x3e,
  0x36, 0x38, 0xf2, 0x19, 0x8e, 0xb8, 0xe4, 0xc0, 0xf9, 0x66, 0x19, 0x06,
  0x22, 0x18, 0x4d, 0x58, 0x03, 0xc0, 0x0a, 0x3c, 0x90, 0x8f, 0x15, 0x79,
  0x20, 0x1f, 0x2b, 0xf4, 0x40, 0x3e, 0x36, 0xfc, 0x01, 0x7c, 0x6c, 0xf8,
  0x03, 0xf8, 0xd8, 0xf0, 0x07, 0xf0, 0x31, 0x25, 0x90, 0x8f, 0x0d, 0x8a,
  0x7c, 0x4c, 0x08, 0xe2, 0x63, 0x06, 0x23, 0x1f, 0x7b, 0x0a, 0xf9, 0x98,
  0x10, 0xc4, 0xc7, 0x90, 0x48, 0x3e, 0xa6, 0x44, 0xf2, 0x31, 0x21, 0x88,
  0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x9c, 0x81, 0x4c, 0xa4, 0xc3,
  0x41, 0x04, 0x07, 0x11, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x19,
  0xd0, 0x44, 0x3a, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1, 0x90, 0x8f, 0x0d,
  0x85, 0x7c, 0x4c, 0xb8, 0xe4, 0x63, 0x42, 0x26, 0x1f, 0x13, 0x82, 0xf8,
  0x18, 0xc1, 0xc9, 0xc7, 0x8e, 0x4d, 0x3e, 0x26, 0x04, 0xf1, 0xb1, 0xc4,
  0x93, 0x8f, 0x25, 0x60, 0x20, 0x1f, 0x13, 0x82, 0xf8, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x01, 0x57, 0x16, 0xf4, 0xc0, 0x0a, 0x3a, 0x31, 0x9a,
  0x10, 0x0c, 0x05, 0x06, 0xec, 0x00, 0x15, 0x08, 0x50, 0xc1, 0x30, 0x05,
  0x0b, 0x04, 0x15, 0x2c, 0x14, 0x54, 0x86, 0x20, 0x75, 0x08, 0x32, 0x62,
  0xd0, 0x00, 0x20, 0x08, 0x06, 0x6a, 0x80, 0x16, 0xfc, 0x70, 0x0b, 0x3f,
  0x21, 0x04, 0x23, 0x31, 0x12, 0x23, 0x31, 0x12, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x50, 0x47, 0x22, 0x15, 0x24, 0x70,
  0x01, 0x51, 0x66, 0xb8, 0x83, 0x7c, 0xcc, 0x78, 0x07, 0xf9, 0x98, 0x01,
  0x0f, 0xf2, 0xb1, 0x01, 0x1e, 0xe0, 0x63, 0x43, 0x3c, 0xc0, 0xc7, 0x06,
  0x79, 0x80, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x94, 0xc1, 0x5d,
  0xb8, 0xc4, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x65, 0x80, 0x17,
  0x2f, 0x31, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x19, 0xe4, 0x05,
  0x4c, 0x0c, 0x26, 0x0c, 0xf0, 0xb1, 0x40, 0x80, 0x8f, 0x15, 0xf1, 0x20,
  0x1f, 0x0b, 0x0a, 0xf9, 0x58, 0x50, 0xc8, 0xc7, 0x02, 0x42, 0x3e, 0x23,
  0x06, 0x06, 0x00, 0x82, 0x60, 0x50, 0x06, 0xa0, 0x71, 0x13, 0x81, 0x05,
  0x91, 0x7c, 0x46, 0x13, 0xc2, 0x00, 0xb8, 0x80, 0x28, 0x0b, 0x06, 0xf8,
  0x5c, 0x00, 0x4c, 0x05, 0x2e, 0xc1, 0x25, 0xdc, 0x05, 0x96, 0x10, 0x70,
  0x05, 0x7b, 0x21, 0x15, 0x84, 0x06, 0x56, 0x20, 0x70, 0x05, 0x33, 0x21,
  0x15, 0xcc, 0x04, 0x56, 0x20, 0xf0, 0x68, 0x82, 0x1b, 0x08, 0x17, 0x10,
  0x55, 0x43, 0x58, 0x5c, 0x05, 0x04, 0x57, 0x20, 0x16, 0x58, 0x81, 0xc0,
  0x15, 0xa0, 0xc6, 0x55, 0x20, 0x70, 0x05, 0xa9, 0x81, 0x15, 0x98, 0xc5,
  0x5e, 0x40, 0xac, 0x05, 0x2b, 0x01, 0x1f, 0x0b, 0x16, 0xf9, 0x5c, 0x00,
  0xcc, 0x68, 0x02, 0x1f, 0x04, 0x25, 0x04, 0x52, 0x29, 0xd1, 0x07, 0x56,
  0x29, 0xe1, 0x07, 0x56, 0x7f, 0x10, 0x48, 0x05, 0x03, 0x54, 0x28, 0x84,
  0x82, 0x5c, 0x40, 0x54, 0x3d, 0x75, 0x71, 0x15, 0x40, 0x5c, 0x81, 0x5d,
  0x60, 0x05, 0x02, 0x57, 0xc0, 0x1b, 0x57, 0x81, 0xc0, 0x15, 0xf4, 0x06,
  0x56, 0xa0, 0x17, 0x7b, 0x01, 0xb1, 0x16, 0xfc, 0x04, 0x7c, 0x2c, 0x58,
  0xe4, 0x73, 0x01, 0x30, 0xf5, 0x04, 0x50, 0x41, 0x55, 0x55, 0x05, 0x30,
  0x62, 0xa0, 0x00, 0x20, 0x08, 0x06, 0x6c, 0x10, 0x1f, 0x79, 0x21, 0x16,
  0x41, 0x7a, 0xd4, 0xc5, 0x7a, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0x82, 0x0d, 0xbe, 0x20, 0x1f, 0x23, 0x78, 0x41, 0x3e,
  0x56, 0xe8, 0x82, 0x7c, 0xac, 0x30, 0x07, 0xf9, 0x98, 0x61, 0x0e, 0xf2,
  0xb1, 0xc3, 0x1c, 0xe4, 0x63, 0xc6, 0x00, 0x1f, 0x33, 0x06, 0xf8, 0x98,
  0x31, 0xc0, 0xc7, 0x14, 0x91, 0x90, 0x8f, 0x2d, 0x22, 0x21, 0x1f, 0x63,
  0x44, 0x42, 0x3e, 0x66, 0x0c, 0xf0, 0x31, 0x63, 0x80, 0x8f, 0x19, 0x03,
  0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0xe0, 0x0c, 0x4c, 0xa4, 0x37,
  0x06, 0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xca,
  0x00, 0x45, 0x7a, 0x23, 0xb0, 0x22, 0x90, 0x8f, 0x15, 0x82, 0x7c, 0xac,
  0x18, 0xe4, 0x33, 0x4b, 0x40, 0x0c, 0x54, 0x10, 0xc6, 0x80, 0x2f, 0xc2,
  0x40, 0x05, 0x61, 0x0c, 0xfa, 0x22, 0x0c, 0x54, 0x10, 0xc6, 0xc0, 0x2f,
  0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x94, 0xc1, 0x8b, 0x94, 0xc8,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x65, 0x00, 0x23, 0x26, 0x32,
  0x58, 0x20, 0xc0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xca, 0x40,
  0x46, 0x50, 0x84, 0x30, 0x21, 0x80, 0x8f, 0x21, 0x01, 0x7d, 0x0c, 0x11,
  0xe8, 0x63, 0xc8, 0x40, 0x9f, 0xe1, 0x88, 0xe0, 0x34, 0x86, 0x6f, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0xca, 0x00, 0x47, 0x5c, 0x64, 0x18, 0x31,
  0x30, 0x00, 0x10, 0x04, 0x83, 0x32, 0xc8, 0x91, 0x17, 0x29, 0x8c, 0x35,
  0x84, 0xf8, 0x58, 0x6b, 0x08, 0xf1, 0x19, 0x8e, 0x40, 0x58, 0x63, 0xf8,
  0x86, 0x23, 0x90, 0xd6, 0x18, 0xbe, 0xe9, 0x06, 0xd8, 0x78, 0x0d, 0x61,
  0xba, 0x21, 0x36, 0x60, 0x43, 0x30, 0x43, 0x90, 0x8f, 0x19, 0x82, 0x7c,
  0xa6, 0x1b, 0x1c, 0x61, 0x99, 0x6e, 0x70, 0x04, 0xc6, 0x84, 0xdb, 0x90,
  0x8f, 0x05, 0xb8, 0x01, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x28,
  0x03, 0x33, 0x99, 0x8f, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xe0,
  0x40, 0x4c, 0xe6, 0x23, 0xb8, 0x8d, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0x80, 0x83, 0x31, 0x99, 0x8f, 0x20, 0x3c, 0x2e, 0x00, 0xc6, 0x8e, 0xde,
  0x90, 0x8f, 0x05, 0xbe, 0x01, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x28, 0x03, 0x36, 0xc9, 0x8f, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xe0, 0x00, 0x4d, 0xf2, 0x23, 0xe8, 0x8d, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x80, 0x83, 0x34, 0xc9, 0x8f, 0xe0, 0x3c, 0x2e, 0x00, 0xa6, 0x02,
  0x1f, 0xb9, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0x83, 0x36, 0xa9,
  0x0f, 0xd3, 0xa8, 0x40, 0x4c, 0xae, 0x06, 0x65, 0x2b, 0x10, 0x76, 0xc4,
  0xc0, 0x01, 0x40, 0x10, 0x0c, 0x3c, 0x3c, 0xc1, 0x0f, 0xf2, 0xf8, 0x0d,
  0xdf, 0x70, 0x91, 0x20, 0x08, 0x82, 0xfb, 0xc0, 0x70, 0x20, 0x00, 0x00,
  0xd6, 0x00, 0x00, 0x00, 0x96, 0x2b, 0x40, 0x7c, 0x26, 0xd2, 0xd8, 0x6c,
  0x40, 0xe1, 0x23, 0x34, 0x4e, 0x9b, 0x5e, 0xe1, 0x23, 0xb5, 0x6d, 0x1b,
  0x6f, 0x40, 0xe1, 0x23, 0x34, 0x6e, 0x9b, 0x60, 0x40, 0xe1, 0x23, 0xb5,
  0x8d, 0x1b, 0xae, 0x00, 0xf1, 0x99, 0xc0, 0x65, 0x87, 0x01, 0x85, 0x8f,
  0xd4, 0xb6, 0x6e, 0xbf, 0x01, 0x85, 0x8f, 0xd0, 0x78, 0x6e, 0x8b, 0x01,
  0x85, 0x8f, 0xd4, 0x36, 0x6f, 0xb3, 0x02, 0xc6, 0x67, 0x22, 0x4d, 0xdd,
  0x9b, 0x70, 0x40, 0xf1, 0x45, 0x42, 0x4d, 0xdb, 0x70, 0x40, 0xf1, 0x45,
  0x42, 0x5d, 0x1b, 0x71, 0x40, 0xf1, 0x45, 0x42, 0x6d, 0x5b, 0xa7, 0x00,
  0xf1, 0x69, 0x81, 0x64, 0x80, 0x01, 0x08, 0x0b, 0x4c, 0x54, 0x04, 0x4c,
  0x84, 0x41, 0x06, 0x14, 0x3e, 0x52, 0xdf, 0xb4, 0xa9, 0x07, 0x14, 0x3e,
  0x42, 0xe7, 0xb5, 0x4d, 0x06, 0x14, 0x3e, 0x52, 0xdf, 0xb7, 0x0d, 0x0a,
  0x14, 0x3e, 0x42, 0xe7, 0xb7, 0x85, 0x06, 0x14, 0x3e, 0x52, 0xdf, 0xba,
  0x19, 0x0a, 0x14, 0x3e, 0x42, 0xe7, 0xba, 0xc9, 0x06, 0x14, 0x3e, 0x52,
  0xdf, 0xbd, 0x25, 0x0a, 0x14, 0x3e, 0x42, 0xe7, 0xbd, 0xd5, 0x06, 0x34,
  0x2d, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xd4, 0xb9, 0x7d, 0x06,
  0x1c, 0xab, 0x04, 0x45, 0x53, 0x7d, 0x5b, 0x62, 0xc0, 0xb1, 0x4a, 0x50,
  0x34, 0xd5, 0xb8, 0xd1, 0x06, 0x14, 0x3e, 0x52, 0xe3, 0xb5, 0xf5, 0x06,
  0x14, 0x3e, 0x52, 0xe3, 0xb7, 0x31, 0x0a, 0x14, 0x3e, 0x42, 0xeb, 0xb6,
  0x01, 0x07, 0x14, 0x3e, 0x52, 0xe3, 0xba, 0x3d, 0x0a, 0x14, 0x3e, 0x42,
  0xeb, 0xb9, 0x1d, 0x07, 0x14, 0x3e, 0x52, 0xe3, 0xbd, 0x51, 0x0a, 0x14,
  0x3e, 0x42, 0xeb, 0xbc, 0xdd, 0x0a, 0x20, 0xab, 0x43, 0x35, 0xc3, 0xdf,
  0x10, 0xd6, 0x06, 0x75, 0x2d, 0x32, 0x7c, 0xd4, 0xb2, 0xac, 0x84, 0xe4,
  0xd3, 0x3e, 0x42, 0x1b, 0xde, 0xe0, 0x23, 0xb5, 0x31, 0x06, 0x0c, 0x3e,
  0x62, 0xdb, 0xdd, 0xe0, 0x23, 0xb4, 0x45, 0x06, 0x14, 0x3e, 0x62, 0xdf,
  0xb5, 0xad, 0x07, 0x14, 0x3e, 0x52, 0xe7, 0xb6, 0x51, 0x06, 0x14, 0x3e,
  0x62, 0xdf, 0xb8, 0xb9, 0x2d, 0x2d, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e,
  0x30, 0x18, 0xa1, 0x40, 0xe1, 0x23, 0x75, 0x8e, 0x9b, 0x68, 0x40, 0xe1,
  0x23, 0xf6, 0xbd, 0xdb, 0xa1, 0x40, 0xe1, 0x23, 0x75, 0xbe, 0x5b, 0xa9,
  0x40, 0xe1, 0x23, 0xf4, 0x8e, 0x5b, 0xaa, 0x40, 0xe1, 0x23, 0xf4, 0xce,
  0xdb, 0xa9, 0x40, 0xe1, 0x23, 0xf4, 0xae, 0xdb, 0xa7, 0x40, 0xe1, 0x23,
  0xf4, 0x5e, 0x9b, 0xa2, 0x40, 0xe1, 0x23, 0xb5, 0x4e, 0xdb, 0xaa, 0x40,
  0xe1, 0x23, 0x34, 0x4f, 0x9b, 0x6f, 0x40, 0xe1, 0x23, 0x36, 0x8e, 0xdb,
  0xa5, 0x40, 0x14, 0x01, 0x58, 0x87, 0x44, 0x84, 0x30, 0x21, 0x4e, 0xe3,
  0xd3, 0x3e, 0x42, 0x1b, 0xa6, 0x40, 0x14, 0x01, 0x58, 0x87, 0x44, 0x84,
  0x30, 0x21, 0x4e, 0xe3, 0xd3, 0x3e, 0x52, 0x5b, 0x70, 0x40, 0xe1, 0x23,
  0x36, 0xbe, 0x1b, 0xa4, 0x40, 0xe1, 0x23, 0xb5, 0xae, 0x9b, 0xac, 0x80,
  0xf1, 0x99, 0xc0, 0x55, 0xf3, 0x56, 0x29, 0x50, 0xf8, 0x48, 0xad, 0xf7,
  0x96, 0x29, 0x10, 0x45, 0x00, 0xd6, 0x21, 0x11, 0x21, 0x4c, 0x88, 0xd3,
  0xf8, 0xb4, 0x8f, 0xd8, 0xd6, 0x28, 0x50, 0xf8, 0x48, 0xad, 0xdf, 0xd6,
  0x2a, 0x50, 0xf8, 0x08, 0xcd, 0xdb, 0x36, 0x2a, 0x60, 0x7c, 0x5a, 0x20,
  0xd5, 0xba, 0xfd, 0x07, 0x34, 0x2b, 0x60, 0x6d, 0x54, 0x51, 0x10, 0x51,
  0xe9, 0x00, 0x83, 0x91, 0x0a, 0x18, 0x9f, 0x16, 0x48, 0xf5, 0x6e, 0xc8,
  0x01, 0x85, 0x8f, 0xd8, 0x39, 0x6d, 0xbc, 0x02, 0x4e, 0x49, 0x18, 0x80,
  0x80, 0x7d, 0xb7, 0xdd, 0x3a, 0x5f, 0xad, 0x1b, 0xa8, 0x40, 0xe1, 0x23,
  0xf5, 0x6e, 0x5b, 0xa1, 0x40, 0xe1, 0x23, 0x76, 0x9e, 0x9b, 0xa9, 0x40,
  0xe1, 0x23, 0xf5, 0x9e, 0x1b, 0xa2, 0x40, 0xe1, 0x23, 0x76, 0xce, 0x1b,
  0xaa, 0x40, 0xe1, 0x23, 0xf5, 0xbe, 0x5b, 0x97, 0x67, 0xfc, 0x12, 0xc0,
  0x3c, 0x0b, 0xc1, 0x12, 0x93, 0xf4, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xf1,
  0x4b, 0x53, 0x44, 0x09, 0x53, 0x40, 0x15, 0xa6, 0x2a, 0x50, 0xf8, 0x48,
  0xbd, 0xf7, 0x36, 0x29, 0x50, 0xac, 0x12, 0x14, 0x4d, 0xe6, 0x15, 0x06,
  0xc6, 0x3f, 0x11, 0xd7, 0x0a, 0x60, 0x68, 0x84, 0x18, 0x48, 0x93, 0x3a,
  0x12, 0x32, 0x21, 0x4e, 0xf3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xf1, 0xdb,
  0x83, 0x71, 0x8d, 0x81, 0xf1, 0x47, 0xd3, 0x0a, 0x60, 0x52, 0x87, 0x44,
  0x84, 0x30, 0x21, 0x4e, 0x83, 0x46, 0x88, 0x81, 0x34, 0x1d, 0xf1, 0x4c,
  0xc7, 0xef, 0x6a, 0xef, 0x6f, 0x0f, 0x96, 0x57, 0xf8, 0x08, 0x6d, 0xd7,
  0x16, 0x18, 0x50, 0xf8, 0x08, 0x6d, 0xdf, 0x66, 0x18, 0x50, 0xf8, 0x08,
  0x6d, 0xe7, 0x16, 0x2b, 0x90, 0xac, 0x0e, 0xd5, 0x0c, 0x7f, 0x43, 0xe4,
  0xa6, 0x18, 0x50, 0xf8, 0x08, 0x6d, 0xef, 0xb6, 0x28, 0x50, 0xf8, 0x88,
  0xad, 0xd7, 0xf6, 0x18, 0x50, 0xf8, 0x08, 0x6d, 0xf7, 0xe6, 0x2a, 0x50,
  0xf8, 0x48, 0xcd, 0xdf, 0xd6, 0x57, 0x7c, 0x5a, 0x20, 0xf1, 0xb6, 0x57,
  0x7c, 0x5a, 0x20, 0xf5, 0x16, 0x29, 0x50, 0xf8, 0x88, 0xad, 0xef, 0xf6,
  0xb5, 0x06, 0xc6, 0x3f, 0x11, 0xd7, 0x0a, 0x60, 0x68, 0x84, 0x18, 0x48,
  0xc3, 0x52, 0x51, 0x01, 0x08, 0xc4, 0xe9, 0x44, 0x0c, 0xb0, 0x74, 0xc4,
  0x33, 0x1d, 0xff, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xbf, 0x3d, 0xd8, 0xa6,
  0x40, 0xf1, 0x69, 0x81, 0xa4, 0x9b, 0xa3, 0x40, 0xe1, 0x23, 0xb6, 0x8e,
  0xdb, 0x72, 0xc0, 0xf0, 0x45, 0x82, 0x69, 0x0a, 0x14, 0x9f, 0x16, 0x48,
  0xbb, 0xb1, 0x0a, 0x14, 0x3e, 0x52, 0xf3, 0xb5, 0x81, 0x29, 0x42, 0xf0,
  0x0b, 0x01, 0x55, 0x14, 0x44, 0x64, 0x92, 0x01, 0x85, 0x8f, 0xd0, 0xb7,
  0x6d, 0xa0, 0x01, 0x85, 0x8f, 0xd0, 0x77, 0x6e, 0x76, 0x4e, 0x49, 0x18,
  0x80, 0x80, 0x7d, 0xb5, 0xde, 0x3a, 0xdf, 0x6d, 0x9b, 0xa5, 0x40, 0xe1,
  0x23, 0xf6, 0x4e, 0x5b, 0x6c, 0x40, 0xe1, 0x23, 0xf4, 0xcd, 0x5b, 0xa8,
  0x40, 0xe1, 0x23, 0xf6, 0x7e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
