#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb
; {
;
;   struct cb
;   {
;
;       struct struct.TextureDimConstantBuffer
;       {
;
;           uint2 textureDim;                         ; Offset:    0
;           float2 invTextureDim;                     ; Offset:    8
;       
;       } cb                                          ; Offset:    0
;
;   
;   } cb                                              ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb                                cbuffer      NA          NA     CB0            cb0     1
; ClampSampler                      sampler      NA          NA      S0             s0     1
; g_inNormalDepth                   texture     f32          2d      T0             t1     1
; g_inHitPosition                   texture     f32          2d      T1             t2     1
; g_inPartialDistanceDerivatives    texture     f32          2d      T2             t4     1
; g_inDepth                         texture     f32          2d      T3             t5     1
; g_inMotionVector                  texture     f32          2d      T4             t6     1
; g_inReprojectedNormalDepth        texture     u32          2d      T5             t7     1
; g_inSurfaceAlbedo                 texture     f32          2d      T6             t8     1
; g_outNormalDepth                      UAV     f32          2d      U0             u1     1
; g_outHitPosition                      UAV     f32          2d      U1             u2     1
; g_outPartialDistanceDerivatives       UAV     f32          2d      U2             u4     1
; g_outDepth                            UAV     f32          2d      U3             u5     1
; g_outMotionVector                     UAV     f32          2d      U4             u6     1
; g_outReprojectedNormalDepth           UAV     u32          2d      U5             u7     1
; g_outSurfaceAlbedo                    UAV     f32          2d      U6             u8     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 2> >" = type { <2 x float>, %"class.Texture2D<vector<float, 2> >::mips_type" }
%"class.Texture2D<vector<float, 2> >::mips_type" = type { i32 }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%"class.RWTexture2D<float>" = type { float }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%struct.SamplerState = type { i32 }
%cb = type { %struct.TextureDimConstantBuffer }
%struct.TextureDimConstantBuffer = type { <2 x i32>, <2 x float> }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }

@"\01?g_inNormalDepth@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_inHitPosition@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_inPartialDistanceDerivatives@@3V?$Texture2D@V?$vector@M$01@@@@A" = external constant %"class.Texture2D<vector<float, 2> >", align 4
@"\01?g_inDepth@@3V?$Texture2D@M@@A" = external constant %"class.Texture2D<float>", align 4
@"\01?g_inMotionVector@@3V?$Texture2D@V?$vector@M$01@@@@A" = external constant %"class.Texture2D<vector<float, 2> >", align 4
@"\01?g_inReprojectedNormalDepth@@3V?$Texture2D@I@@A" = external constant %"class.Texture2D<unsigned int>", align 4
@"\01?g_inSurfaceAlbedo@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_outNormalDepth@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?g_outHitPosition@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?g_outPartialDistanceDerivatives@@3V?$RWTexture2D@V?$vector@M$01@@@@A" = external constant %"class.RWTexture2D<vector<float, 2> >", align 4
@"\01?g_outDepth@@3V?$RWTexture2D@M@@A" = external constant %"class.RWTexture2D<float>", align 4
@"\01?g_outMotionVector@@3V?$RWTexture2D@V?$vector@M$01@@@@A" = external constant %"class.RWTexture2D<vector<float, 2> >", align 4
@"\01?g_outReprojectedNormalDepth@@3V?$RWTexture2D@I@@A" = external constant %"class.RWTexture2D<unsigned int>", align 4
@"\01?g_outSurfaceAlbedo@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?ClampSampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@cb = external constant %cb
@"\01?indexOffsets@?1??Get2DQuadIndexOffset@@YA?AV?$vector@I$01@@I@Z@3QBV2@B.0" = internal unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 1]
@"\01?indexOffsets@?1??Get2DQuadIndexOffset@@YA?AV?$vector@I$01@@I@Z@3QBV2@B.1" = internal unnamed_addr constant [4 x i32] [i32 0, i32 0, i32 1, i32 1]

define void @main() {
  %g_outSurfaceAlbedo_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 6, i32 8, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outReprojectedNormalDepth_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 5, i32 7, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outMotionVector_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 4, i32 6, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outDepth_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outPartialDistanceDerivatives_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outHitPosition_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_outNormalDepth_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inSurfaceAlbedo_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 6, i32 8, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inReprojectedNormalDepth_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 5, i32 7, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inMotionVector_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 6, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inDepth_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inPartialDistanceDerivatives_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inHitPosition_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inNormalDepth_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %ClampSampler_sampler = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %cb_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %3 = alloca [4 x float], align 4
  %4 = alloca [4 x float], align 4
  %.i0 = shl i32 %1, 1
  %.i1 = shl i32 %2, 1
  %.i015 = uitofp i32 %.i0 to float
  %.i116 = uitofp i32 %.i1 to float
  %.i017 = fadd fast float %.i015, 5.000000e-01
  %.i118 = fadd fast float %.i116, 5.000000e-01
  %5 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %6 = extractvalue %dx.types.CBufRet.f32 %5, 2
  %7 = extractvalue %dx.types.CBufRet.f32 %5, 3
  %.i019 = fmul fast float %6, %.i017
  %.i120 = fmul fast float %7, %.i118
  %8 = call %dx.types.ResRet.f32 @dx.op.textureGather.f32(i32 73, %dx.types.Handle %g_inDepth_texture_2d, %dx.types.Handle %ClampSampler_sampler, float %.i019, float %.i120, float undef, float undef, i32 undef, i32 undef, i32 0)  ; TextureGather(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,channel)
  %9 = extractvalue %dx.types.ResRet.f32 %8, 0
  %10 = extractvalue %dx.types.ResRet.f32 %8, 1
  %11 = extractvalue %dx.types.ResRet.f32 %8, 2
  %12 = extractvalue %dx.types.ResRet.f32 %8, 3
  %13 = getelementptr inbounds [4 x float], [4 x float]* %4, i32 0, i32 0
  store float %12, float* %13, align 4
  %14 = getelementptr inbounds [4 x float], [4 x float]* %4, i32 0, i32 1
  store float %11, float* %14, align 4
  %15 = getelementptr inbounds [4 x float], [4 x float]* %4, i32 0, i32 2
  store float %9, float* %15, align 4
  %16 = getelementptr inbounds [4 x float], [4 x float]* %4, i32 0, i32 3
  store float %10, float* %16, align 4
  %17 = add i32 %2, %1
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  %FMin9 = call float @dx.op.binary.f32(i32 36, float %9, float %10)  ; FMin(a,b)
  %FMin8 = call float @dx.op.binary.f32(i32 36, float %12, float %11)  ; FMin(a,b)
  %FMin = call float @dx.op.binary.f32(i32 36, float %FMin8, float %FMin9)  ; FMin(a,b)
  br label %"\01?GetIndexFromDepthAwareBilateralDownsample2x2@@YAIV?$vector@M$03@@V?$vector@I$01@@@Z.exit"

; <label>:21                                      ; preds = %0
  %FMax11 = call float @dx.op.binary.f32(i32 35, float %9, float %10)  ; FMax(a,b)
  %FMax10 = call float @dx.op.binary.f32(i32 35, float %12, float %11)  ; FMax(a,b)
  %FMax = call float @dx.op.binary.f32(i32 35, float %FMax10, float %FMax11)  ; FMax(a,b)
  br label %"\01?GetIndexFromDepthAwareBilateralDownsample2x2@@YAIV?$vector@M$03@@V?$vector@I$01@@@Z.exit"

"\01?GetIndexFromDepthAwareBilateralDownsample2x2@@YAIV?$vector@M$03@@V?$vector@I$01@@@Z.exit": ; preds = %21, %20
  %22 = phi float [ %FMin, %20 ], [ %FMax, %21 ]
  %.i021 = fsub fast float %22, %12
  %.i122 = fsub fast float %22, %11
  %.i2 = fsub fast float %22, %9
  %.i3 = fsub fast float %22, %10
  %FAbs = call float @dx.op.unary.f32(i32 6, float %.i021)  ; FAbs(value)
  %FAbs12 = call float @dx.op.unary.f32(i32 6, float %.i122)  ; FAbs(value)
  %FAbs13 = call float @dx.op.unary.f32(i32 6, float %.i2)  ; FAbs(value)
  %FAbs14 = call float @dx.op.unary.f32(i32 6, float %.i3)  ; FAbs(value)
  %23 = getelementptr inbounds [4 x float], [4 x float]* %3, i32 0, i32 0
  store float %FAbs, float* %23, align 4
  %24 = getelementptr inbounds [4 x float], [4 x float]* %3, i32 0, i32 1
  store float %FAbs12, float* %24, align 4
  %25 = getelementptr inbounds [4 x float], [4 x float]* %3, i32 0, i32 2
  store float %FAbs13, float* %25, align 4
  %26 = getelementptr inbounds [4 x float], [4 x float]* %3, i32 0, i32 3
  store float %FAbs14, float* %26, align 4
  %27 = fcmp fast olt float %FAbs12, %FAbs
  %28 = zext i1 %27 to i32
  %29 = getelementptr [4 x float], [4 x float]* %3, i32 0, i32 %28
  %30 = load float, float* %29, align 4, !tbaa !55
  %31 = fcmp fast olt float %FAbs13, %30
  %32 = select i1 %31, i32 2, i32 %28
  %33 = getelementptr [4 x float], [4 x float]* %3, i32 0, i32 %32
  %34 = load float, float* %33, align 4, !tbaa !55
  %35 = fcmp fast olt float %FAbs14, %34
  %36 = select i1 %35, i32 3, i32 %32
  %37 = getelementptr [4 x i32], [4 x i32]* @"\01?indexOffsets@?1??Get2DQuadIndexOffset@@YA?AV?$vector@I$01@@I@Z@3QBV2@B.0", i32 0, i32 %36
  %38 = getelementptr [4 x i32], [4 x i32]* @"\01?indexOffsets@?1??Get2DQuadIndexOffset@@YA?AV?$vector@I$01@@I@Z@3QBV2@B.1", i32 0, i32 %36
  %load = load i32, i32* %37, align 4
  %load1 = load i32, i32* %38, align 4
  %.i023 = add i32 %load, %.i0
  %.i124 = add i32 %load1, %.i1
  %39 = getelementptr [4 x float], [4 x float]* %4, i32 0, i32 %36
  %40 = load float, float* %39, align 4, !tbaa !55
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outDepth_UAV_2d, i32 %1, i32 %2, i32 undef, float %40, float %40, float %40, float %40, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inNormalDepth_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %41 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %42 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1
  %43 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2
  %44 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outNormalDepth_UAV_2d, i32 %1, i32 %2, i32 undef, float %41, float %42, float %43, float %44, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad5 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inPartialDistanceDerivatives_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %45 = extractvalue %dx.types.ResRet.f32 %TextureLoad5, 0
  %46 = extractvalue %dx.types.ResRet.f32 %TextureLoad5, 1
  %.i025 = fmul fast float %45, 2.000000e+00
  %.i126 = fmul fast float %46, 2.000000e+00
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outPartialDistanceDerivatives_UAV_2d, i32 %1, i32 %2, i32 undef, float %.i025, float %.i126, float %.i025, float %.i025, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad6 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inMotionVector_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %47 = extractvalue %dx.types.ResRet.f32 %TextureLoad6, 0
  %48 = extractvalue %dx.types.ResRet.f32 %TextureLoad6, 1
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outMotionVector_UAV_2d, i32 %1, i32 %2, i32 undef, float %47, float %48, float %47, float %47, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad7 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %g_inReprojectedNormalDepth_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %49 = extractvalue %dx.types.ResRet.i32 %TextureLoad7, 0
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %g_outReprojectedNormalDepth_UAV_2d, i32 %1, i32 %2, i32 undef, i32 %49, i32 %49, i32 %49, i32 %49, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad3 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inHitPosition_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %50 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 0
  %51 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 1
  %52 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 2
  %53 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outHitPosition_UAV_2d, i32 %1, i32 %2, i32 undef, float %50, float %51, float %52, float %53, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %TextureLoad4 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inSurfaceAlbedo_texture_2d, i32 0, i32 %.i023, i32 %.i124, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %54 = extractvalue %dx.types.ResRet.f32 %TextureLoad4, 0
  %55 = extractvalue %dx.types.ResRet.f32 %TextureLoad4, 1
  %56 = extractvalue %dx.types.ResRet.f32 %TextureLoad4, 2
  %57 = extractvalue %dx.types.ResRet.f32 %TextureLoad4, 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outSurfaceAlbedo_UAV_2d, i32 %1, i32 %2, i32 undef, float %54, float %55, float %56, float %57, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureGather.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!27, !48}
!dx.entryPoints = !{!52}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"cs", i32 6, i32 3}
!4 = !{!5, !15, !23, !25}
!5 = !{!6, !8, !9, !10, !11, !12, !14}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"g_inNormalDepth", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"g_inHitPosition", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 2> >"* undef, !"g_inPartialDistanceDerivatives", i32 0, i32 4, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Texture2D<float>"* undef, !"g_inDepth", i32 0, i32 5, i32 1, i32 2, i32 0, !7}
!11 = !{i32 4, %"class.Texture2D<vector<float, 2> >"* undef, !"g_inMotionVector", i32 0, i32 6, i32 1, i32 2, i32 0, !7}
!12 = !{i32 5, %"class.Texture2D<unsigned int>"* undef, !"g_inReprojectedNormalDepth", i32 0, i32 7, i32 1, i32 2, i32 0, !13}
!13 = !{i32 0, i32 5}
!14 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* undef, !"g_inSurfaceAlbedo", i32 0, i32 8, i32 1, i32 2, i32 0, !7}
!15 = !{!16, !17, !18, !19, !20, !21, !22}
!16 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"g_outNormalDepth", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!17 = !{i32 1, %"class.RWTexture2D<vector<float, 4> >"* undef, !"g_outHitPosition", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!18 = !{i32 2, %"class.RWTexture2D<vector<float, 2> >"* undef, !"g_outPartialDistanceDerivatives", i32 0, i32 4, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!19 = !{i32 3, %"class.RWTexture2D<float>"* undef, !"g_outDepth", i32 0, i32 5, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!20 = !{i32 4, %"class.RWTexture2D<vector<float, 2> >"* undef, !"g_outMotionVector", i32 0, i32 6, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!21 = !{i32 5, %"class.RWTexture2D<unsigned int>"* undef, !"g_outReprojectedNormalDepth", i32 0, i32 7, i32 1, i32 2, i1 false, i1 false, i1 false, !13}
!22 = !{i32 6, %"class.RWTexture2D<vector<float, 4> >"* undef, !"g_outSurfaceAlbedo", i32 0, i32 8, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!23 = !{!24}
!24 = !{i32 0, %cb* undef, !"cb", i32 0, i32 0, i32 1, i32 16, null}
!25 = !{!26}
!26 = !{i32 0, %struct.SamplerState* undef, !"ClampSampler", i32 0, i32 0, i32 1, i32 0, null}
!27 = !{i32 0, %"class.Texture2D<vector<float, 4> >" undef, !28, %"class.Texture2D<vector<float, 4> >::mips_type" undef, !31, %"class.Texture2D<vector<float, 2> >" undef, !33, %"class.Texture2D<vector<float, 2> >::mips_type" undef, !31, %"class.Texture2D<float>" undef, !35, %"class.Texture2D<float>::mips_type" undef, !31, %"class.Texture2D<unsigned int>" undef, !37, %"class.Texture2D<unsigned int>::mips_type" undef, !31, %"class.RWTexture2D<vector<float, 4> >" undef, !39, %"class.RWTexture2D<vector<float, 2> >" undef, !40, %"class.RWTexture2D<float>" undef, !41, %"class.RWTexture2D<unsigned int>" undef, !42, %struct.TextureDimConstantBuffer undef, !43, %cb undef, !46}
!28 = !{i32 20, !29, !30}
!29 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!30 = !{i32 6, !"mips", i32 3, i32 16}
!31 = !{i32 4, !32}
!32 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!33 = !{i32 12, !29, !34}
!34 = !{i32 6, !"mips", i32 3, i32 8}
!35 = !{i32 8, !29, !36}
!36 = !{i32 6, !"mips", i32 3, i32 4}
!37 = !{i32 8, !38, !36}
!38 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!39 = !{i32 16, !29}
!40 = !{i32 8, !29}
!41 = !{i32 4, !29}
!42 = !{i32 4, !38}
!43 = !{i32 16, !44, !45}
!44 = !{i32 6, !"textureDim", i32 3, i32 0, i32 7, i32 5}
!45 = !{i32 6, !"invTextureDim", i32 3, i32 8, i32 7, i32 9}
!46 = !{i32 16, !47}
!47 = !{i32 6, !"cb", i32 3, i32 0}
!48 = !{i32 1, void ()* @main, !49}
!49 = !{!50}
!50 = !{i32 0, !51, !51}
!51 = !{}
!52 = !{void ()* @main, !"main", null, !4, !53}
!53 = !{i32 4, !54}
!54 = !{i32 8, i32 8, i32 1}
!55 = !{!56, !56, i64 0}
!56 = !{!"float", !57, i64 0}
!57 = !{!"omnipotent char", !58, i64 0}
!58 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_pDownsampleGBufferDataBilateralFilter2x2CS[] = {
  0x44, 0x58, 0x42, 0x43, 0xca, 0xd9, 0x9e, 0x1d, 0x7f, 0x88, 0x66, 0xe1,
  0x25, 0xf6, 0x35, 0xd5, 0x8c, 0x1c, 0xa9, 0xdf, 0x01, 0x00, 0x00, 0x00,
  0x68, 0x19, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0xa8, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x3c, 0x01, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0xb8, 0x17, 0x00, 0x00,
  0x63, 0x00, 0x05, 0x00, 0xee, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa0, 0x17, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x1c, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xe4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x72, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x91, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x39, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00,
  0x32, 0x22, 0xc8, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84,
  0x04, 0x93, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c,
  0x0b, 0x84, 0xe4, 0x4c, 0x10, 0x94, 0xc2, 0x0c, 0xc0, 0x30, 0x02, 0x01,
  0xcc, 0x11, 0x80, 0xc1, 0x4c, 0x6d, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3,
  0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2,
  0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4,
  0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4,
  0xc0, 0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0xa0, 0x07, 0x7a,
  0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0, 0x0b, 0xf4, 0x90, 0x0f, 0xf0,
  0x50, 0x0e, 0x28, 0x10, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30,
  0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20,
  0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40,
  0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40,
  0x0f, 0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x48, 0x08,
  0x0c, 0x88, 0x30, 0x8c, 0x20, 0x00, 0x33, 0xb5, 0xc1, 0x38, 0xb0, 0x43,
  0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43,
  0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3,
  0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43,
  0x38, 0xd0, 0x03, 0x1b, 0x80, 0x81, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x81,
  0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43,
  0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x40, 0x30, 0x93, 0x18, 0x8c, 0x03, 0x3b,
  0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d,
  0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39,
  0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b,
  0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xc8, 0x81, 0x1f, 0x80, 0x81, 0x1f,
  0x20, 0xc1, 0x70, 0x20, 0xc4, 0x4c, 0x61, 0x30, 0x0e, 0xec, 0x10, 0x0e,
  0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f,
  0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00, 0x0f,
  0xf3, 0xf0, 0x0b, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x10, 0xcc,
  0x64, 0x8d, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42,
  0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02,
  0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x83, 0x1f, 0x20, 0x01,
  0xa0, 0xa0, 0xc5, 0x4c, 0x68, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30,
  0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x50, 0x0f, 0xee, 0x30, 0x0f, 0xe9, 0x70,
  0x0e, 0xee, 0x50, 0x0e, 0xe4, 0x00, 0x06, 0xe9, 0xe0, 0x0e, 0xf4, 0xe0,
  0x07, 0x7a, 0xa0, 0x07, 0xed, 0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40,
  0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x80, 0x02, 0xc1, 0x4c, 0xdd, 0x38, 0xb0,
  0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0,
  0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x41, 0x3d, 0xb8,
  0xc3, 0x3c, 0xa4, 0xc3, 0x39, 0xb8, 0x43, 0x39, 0x90, 0x03, 0x18, 0xa4,
  0x83, 0x3b, 0xd0, 0x83, 0x1f, 0x20, 0x41, 0xd0, 0x20, 0xc7, 0x4c, 0x64,
  0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7,
  0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72,
  0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2,
  0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60,
  0x40, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0x80, 0x82, 0x00, 0x41, 0x66, 0x22,
  0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x59, 0xb8,
  0x05, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90,
  0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90,
  0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x36, 0x00,
  0x03, 0x39, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x14, 0x18, 0x48, 0x32, 0x13,
  0x36, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7,
  0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72,
  0x40, 0x0a, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x7e,
  0x80, 0x02, 0x00, 0x51, 0x66, 0xfa, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e,
  0xe6, 0xc1, 0x0d, 0x64, 0xe1, 0x16, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e,
  0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xea, 0xc1, 0x1d,
  0xe6, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xc0, 0x20, 0x1d,
  0xdc, 0x81, 0x1e, 0xfc, 0x00, 0x05, 0x02, 0xb2, 0xdc, 0x24, 0x4d, 0x11,
  0x25, 0x4c, 0x3e, 0x0b, 0x30, 0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c, 0x04,
  0x0a, 0x04, 0x84, 0x19, 0x46, 0x10, 0x84, 0xfb, 0xa4, 0x29, 0xa2, 0x84,
  0xc9, 0x6f, 0x89, 0x6b, 0xa2, 0x22, 0xa2, 0x43, 0x18, 0xce, 0x69, 0xa4,
  0x09, 0x68, 0xa6, 0x8d, 0x2a, 0x0a, 0x22, 0x42, 0x82, 0xc6, 0x70, 0x82,
  0x10, 0xa0, 0x60, 0x43, 0x9c, 0x24, 0x10, 0x90, 0x67, 0x04, 0xa0, 0x04,
  0x20, 0x0a, 0x95, 0x41, 0x20, 0x10, 0xd0, 0xe8, 0xa8, 0xe1, 0xf2, 0x27,
  0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0xbf, 0xb8, 0x6d,
  0x44, 0x00, 0x00, 0x00, 0xc0, 0x1c, 0x01, 0x42, 0xa6, 0x7b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0xc1, 0xa9,
  0x10, 0x25, 0x01, 0x4a, 0x40, 0xa9, 0x9b, 0x86, 0xcb, 0x9f, 0xb0, 0x87,
  0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x8b, 0xdb, 0x46, 0x05, 0x00,
  0x00, 0x00, 0x08, 0xca, 0xb2, 0x12, 0xa0, 0x50, 0x00, 0x00, 0x00, 0x20,
  0x10, 0x08, 0x88, 0x55, 0x16, 0x90, 0x00, 0x25, 0x10, 0x08, 0x00, 0x00,
  0x00, 0xc0, 0x44, 0xae, 0xa2, 0xac, 0x04, 0x28, 0x81, 0x40, 0x20, 0x10,
  0x08, 0x04, 0x04, 0x2b, 0x0b, 0x48, 0x80, 0x12, 0x08, 0x04, 0x02, 0x81,
  0x40, 0x60, 0x22, 0xd9, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe,
  0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x42, 0x20, 0x10, 0x08,
  0x04, 0x45, 0xa1, 0x09, 0x50, 0x02, 0x81, 0x40, 0x20, 0x10, 0x08, 0xa8,
  0x56, 0x08, 0x80, 0x00, 0x00, 0xa0, 0x5b, 0x19, 0x00, 0x02, 0x00, 0xe5,
  0xe6, 0x08, 0x82, 0x62, 0xa0, 0x04, 0x26, 0x81, 0x60, 0x47, 0xbc, 0x81,
  0x80, 0x24, 0x00, 0xd0, 0x8f, 0x00, 0x53, 0x00, 0x73, 0x04, 0xa0, 0x40,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x92, 0x01, 0x00, 0x93, 0x0c,
  0x00, 0x98, 0x68, 0x00, 0xc0, 0x5c, 0x03, 0x00, 0x26, 0x1a, 0x00, 0x30,
  0xdd, 0x00, 0x80, 0x49, 0x06, 0x00, 0x4c, 0x38, 0x00, 0x60, 0xc2, 0x01,
  0x00, 0x53, 0x0e, 0x00, 0x98, 0x74, 0x00, 0xc0, 0x94, 0x03, 0x00, 0xa6,
  0x1d, 0x00, 0x30, 0xe1, 0x00, 0x80, 0x89, 0x07, 0x00, 0x4c, 0x3e, 0x00,
  0x80, 0x1d, 0x8c, 0x37, 0x8c, 0xc2, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
  0xb0, 0x83, 0xf1, 0x06, 0x52, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x86, 0x3c, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x43, 0x9e, 0x31, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x1a, 0x00, 0x01, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x0d, 0x80, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x06, 0x40,
  0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81,
  0x03, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0xc8, 0x01, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0xea, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x77, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x3c, 0x00, 0x02, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x1f, 0x00, 0x01,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x1c, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x12, 0x94, 0x40, 0x19, 0x14,
  0x42, 0x31, 0x8c, 0x00, 0x14, 0x41, 0x49, 0x94, 0x42, 0x39, 0x14, 0x44,
  0x81, 0x14, 0x4a, 0x61, 0xd0, 0x70, 0x04, 0x80, 0x76, 0x23, 0x00, 0x54,
  0x98, 0x01, 0xa0, 0xc3, 0x0c, 0x00, 0x21, 0x66, 0x00, 0x28, 0x31, 0x03,
  0x40, 0x8a, 0x19, 0x00, 0x5a, 0xcc, 0x00, 0x10, 0x63, 0x06, 0x80, 0x1a,
  0x33, 0x00, 0xe4, 0x98, 0x01, 0xa0, 0xc7, 0x0c, 0x00, 0x41, 0x66, 0x00,
  0x28, 0x32, 0x03, 0x40, 0x92, 0x19, 0x00, 0x9a, 0xcc, 0x00, 0x10, 0x65,
  0x06, 0x80, 0x2a, 0x33, 0x00, 0x64, 0x99, 0x01, 0xa0, 0xcb, 0x0c, 0x00,
  0x65, 0x66, 0x00, 0x68, 0x33, 0x03, 0x40, 0x9c, 0x19, 0x00, 0xea, 0xcc,
  0x00, 0x90, 0x67, 0x2c, 0x02, 0x08, 0x80, 0x60, 0x2c, 0x02, 0x00, 0x82,
  0x80, 0x08, 0x33, 0x00, 0x34, 0x98, 0x01, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x1d, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10,
  0x84, 0x6e, 0x82, 0x20, 0x78, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x08, 0xdf,
  0x06, 0x61, 0x30, 0x28, 0x8c, 0xcd, 0x4d, 0x10, 0x04, 0x30, 0xd8, 0x30,
  0x20, 0x09, 0x31, 0x41, 0x10, 0xc2, 0x60, 0x82, 0x50, 0xb0, 0x01, 0x9f,
  0xb3, 0xaf, 0x34, 0x37, 0xa7, 0x37, 0xb9, 0xb6, 0x30, 0x36, 0xa2, 0x32,
  0x38, 0x3a, 0xb4, 0x09, 0x82, 0x20, 0x06, 0x13, 0x04, 0x61, 0x0c, 0x36,
  0x08, 0xcb, 0xb3, 0x21, 0x59, 0x98, 0x66, 0x19, 0x06, 0x67, 0x81, 0xf8,
  0x9c, 0x7d, 0xa5, 0xb9, 0x21, 0xa5, 0xd1, 0x41, 0xbd, 0xcd, 0xa5, 0xd1,
  0xa5, 0xbd, 0xb9, 0x6d, 0x48, 0x06, 0x46, 0x5a, 0x9c, 0xc1, 0x59, 0xa0,
  0x09, 0x42, 0xf2, 0x06, 0xf4, 0xce, 0xbe, 0xd2, 0xdc, 0xa0, 0xc2, 0xe4,
  0xe8, 0xd2, 0xc2, 0xd8, 0x88, 0xd2, 0xe6, 0xe8, 0xc2, 0xdc, 0xc6, 0xca,
  0x88, 0xca, 0xe4, 0xd2, 0xec, 0xc2, 0xe8, 0xd2, 0xec, 0xca, 0xe6, 0x36,
  0x24, 0x0e, 0x55, 0x2d, 0xc6, 0xe0, 0x2c, 0xd0, 0x04, 0x81, 0x91, 0x03,
  0x26, 0x67, 0x5f, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x13, 0x04,
  0x81, 0x0c, 0x36, 0x24, 0xc4, 0x85, 0x2d, 0xd9, 0xe0, 0x2c, 0x10, 0xa1,
  0xb3, 0xaf, 0x34, 0xb7, 0xa6, 0x37, 0xba, 0xb4, 0x37, 0x37, 0xab, 0xb2,
  0x31, 0xba, 0x37, 0xb9, 0x0d, 0x89, 0x41, 0x6d, 0x4b, 0x32, 0x38, 0x0b,
  0x34, 0x41, 0x78, 0xea, 0x80, 0xda, 0xd9, 0x57, 0x9a, 0x9b, 0x54, 0x19,
  0x9c, 0xdc, 0x9b, 0x5a, 0xd9, 0x18, 0x5d, 0x19, 0x99, 0xd3, 0x9b, 0x5c,
  0x5b, 0x18, 0x1b, 0x51, 0x19, 0x1c, 0x1d, 0xda, 0x04, 0x41, 0x28, 0x83,
  0x0d, 0xc2, 0x92, 0x6d, 0x48, 0xb2, 0xce, 0x5b, 0xbe, 0xc1, 0x59, 0xc0,
  0x80, 0xd1, 0xd9, 0x57, 0x9a, 0xdb, 0x54, 0x9d, 0x9c, 0x59, 0xd8, 0x58,
  0x59, 0x10, 0x9b, 0x58, 0x19, 0xd9, 0xdb, 0x04, 0x41, 0x30, 0x83, 0x0d,
  0x49, 0xc2, 0x88, 0xc1, 0x32, 0x06, 0x83, 0xb3, 0x40, 0x1b, 0x8e, 0x68,
  0xb2, 0x34, 0x2e, 0x0c, 0xc8, 0x60, 0x82, 0x10, 0xdd, 0x01, 0xa1, 0xb3,
  0xaf, 0xb7, 0x3a, 0x3a, 0xa7, 0x37, 0xb9, 0xb6, 0x30, 0x36, 0xa2, 0x32,
  0x38, 0x3a, 0xb4, 0x09, 0xc2, 0x1e, 0xac, 0xc1, 0x86, 0x65, 0x31, 0x83,
  0x33, 0x58, 0x86, 0xc1, 0x41, 0x03, 0x34, 0x40, 0x03, 0x88, 0xd0, 0xd9,
  0xd7, 0x5b, 0x1d, 0x1d, 0x52, 0x1a, 0x1d, 0xd4, 0xdb, 0x5c, 0x1a, 0x5d,
  0xda, 0x9b, 0xdb, 0x86, 0x65, 0x30, 0x03, 0x35, 0x58, 0x9c, 0xc1, 0x41,
  0x03, 0x34, 0x40, 0x03, 0x68, 0x82, 0x30, 0xe5, 0x01, 0xbf, 0xb3, 0xaf,
  0xb7, 0x3a, 0x3a, 0xa8, 0x30, 0x39, 0xba, 0xb4, 0x30, 0x36, 0xa2, 0xb4,
  0x39, 0xba, 0x30, 0xb7, 0xb1, 0x32, 0xa2, 0x32, 0xb9, 0x34, 0xbb, 0x30,
  0xba, 0x34, 0xbb, 0xb2, 0xb9, 0x0d, 0x8b, 0xc3, 0x06, 0x6d, 0xb0, 0x18,
  0x83, 0x83, 0x06, 0x68, 0x80, 0x06, 0xd0, 0x04, 0xa1, 0xda, 0x03, 0x2a,
  0x67, 0x5f, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x1b, 0x16,
  0xe2, 0x0d, 0xe0, 0x60, 0xc9, 0x06, 0x07, 0x0d, 0xd0, 0x00, 0x0d, 0x20,
  0x46, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
  0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1b, 0x16, 0x83, 0x0d, 0xe4, 0x60,
  0x49, 0x06, 0x07, 0x0d, 0xd0, 0x00, 0x0d, 0xa0, 0x09, 0xc2, 0xd5, 0x07,
  0xdc, 0xce, 0xbe, 0xde, 0xea, 0xe8, 0xa4, 0xca, 0xe0, 0xe4, 0xde, 0xd4,
  0xca, 0xc6, 0xe8, 0xca, 0xc8, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88,
  0xca, 0xe0, 0xe8, 0xd0, 0x36, 0x2c, 0x19, 0x1d, 0xd4, 0xc1, 0xf2, 0x0d,
  0x0e, 0x1a, 0xa0, 0x01, 0x1a, 0x80, 0x01, 0xa5, 0xb3, 0xaf, 0xb7, 0x3a,
  0xba, 0xa9, 0x3a, 0x39, 0xb3, 0xb0, 0xb1, 0xb2, 0x20, 0x36, 0xb1, 0x32,
  0xb2, 0xb7, 0x0d, 0x4b, 0x62, 0x06, 0x77, 0xb0, 0x8c, 0xc1, 0xe0, 0xa0,
  0x01, 0x1a, 0xa0, 0x01, 0xb4, 0xe1, 0x48, 0x83, 0x35, 0x70, 0x83, 0x38,
  0x98, 0x03, 0x3b, 0xc0, 0x83, 0x09, 0x42, 0x17, 0x0a, 0x14, 0xc6, 0xc4,
  0x26, 0x08, 0xc2, 0x19, 0x6c, 0x40, 0x16, 0x3d, 0xd8, 0x83, 0x65, 0x19,
  0xf8, 0x00, 0xd8, 0x10, 0xf4, 0xc1, 0x04, 0x21, 0xf3, 0x03, 0x32, 0x43,
  0x6c, 0x61, 0x6d, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x1b,
  0x90, 0xe5, 0x0f, 0x40, 0x61, 0x59, 0x86, 0x05, 0xd8, 0x10, 0x84, 0xc2,
  0x06, 0xa2, 0x0c, 0xf2, 0xc0, 0x0f, 0x44, 0x61, 0x82, 0x40, 0x90, 0xc2,
  0x04, 0x41, 0x40, 0x03, 0x06, 0x68, 0x1b, 0x8c, 0xc4, 0x14, 0x88, 0xe5,
  0x7b, 0x48, 0xb4, 0xa5, 0xc1, 0xcd, 0x6d, 0x20, 0x12, 0x54, 0x20, 0xf8,
  0x60, 0xc3, 0x50, 0x0a, 0xa7, 0x90, 0x0a, 0x13, 0x84, 0xa1, 0x14, 0x68,
  0xa0, 0x85, 0xb9, 0x91, 0xb1, 0x95, 0x6d, 0x30, 0x12, 0x56, 0x20, 0x96,
  0x2f, 0xdb, 0x20, 0x18, 0xad, 0x30, 0x41, 0x40, 0xdc, 0x60, 0x82, 0x20,
  0xa4, 0xc1, 0x06, 0x22, 0x41, 0x05, 0x62, 0x0c, 0x36, 0x0c, 0xb0, 0x70,
  0x0a, 0xb1, 0x30, 0x41, 0x38, 0xda, 0x60, 0x82, 0xb0, 0xc4, 0xc1, 0x06,
  0x22, 0x41, 0x05, 0xc2, 0xd8, 0x30, 0x8c, 0xc1, 0x29, 0xd4, 0xc2, 0x04,
  0x41, 0x81, 0x83, 0x09, 0x82, 0x43, 0x07, 0x1b, 0x8c, 0xc4, 0x14, 0x88,
  0xe5, 0xcb, 0x36, 0x0c, 0x63, 0x90, 0x0b, 0xb5, 0x30, 0x41, 0x68, 0xe6,
  0x60, 0x82, 0x00, 0xd9, 0xc1, 0x06, 0x81, 0x0f, 0x4e, 0x61, 0x82, 0x20,
  0xe1, 0xc1, 0x06, 0x61, 0x0c, 0x4e, 0x61, 0x82, 0x40, 0xe9, 0xc1, 0x06,
  0xc1, 0x38, 0x85, 0x09, 0x82, 0xc5, 0x07, 0x1b, 0x04, 0x23, 0x17, 0x26,
  0x08, 0xdb, 0x1f, 0x50, 0xa1, 0x2b, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x23,
  0x4a, 0x6b, 0xdb, 0x60, 0x24, 0xe5, 0x40, 0x2c, 0x5f, 0xc6, 0x26, 0xcd,
  0xcd, 0x8e, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d,
  0x83, 0x91, 0x9c, 0x03, 0x31, 0x06, 0xdf, 0xb3, 0x61, 0xe0, 0x03, 0x73,
  0x40, 0x87, 0x09, 0x02, 0x07, 0x0a, 0x1b, 0x88, 0x64, 0x0f, 0x88, 0x65,
  0x83, 0xc0, 0x07, 0xeb, 0xb0, 0xa1, 0x5b, 0x48, 0x41, 0x15, 0x56, 0xc1,
  0x15, 0x5e, 0x41, 0x16, 0x66, 0xc1, 0x15, 0x68, 0xc1, 0x16, 0x6e, 0xc1,
  0x15, 0x70, 0x41, 0x17, 0x76, 0xc1, 0x15, 0x78, 0xa1, 0x17, 0x7c, 0xe1,
  0x17, 0xc0, 0x21, 0x1c, 0xc4, 0x61, 0x1c, 0xc8, 0x21, 0x1d, 0xd4, 0x81,
  0x1d, 0x26, 0x08, 0x62, 0x20, 0x6d, 0x00, 0x36, 0x0c, 0xcb, 0x3b, 0xbc,
  0xc3, 0x86, 0x00, 0x1e, 0x36, 0x0c, 0x83, 0x3b, 0xc4, 0x03, 0x89, 0xb6,
  0xb0, 0x34, 0xb7, 0x0d, 0xc3, 0x18, 0x8c, 0xc1, 0xb0, 0x41, 0x30, 0xe8,
  0x61, 0x43, 0xe1, 0x0e, 0xf3, 0x00, 0x8c, 0x42, 0x3d, 0xb0, 0x30, 0x63,
  0x7b, 0x0b, 0xa3, 0xe3, 0xf3, 0xd6, 0xe6, 0x96, 0x06, 0xf7, 0x46, 0x57,
  0xe6, 0x46, 0x07, 0x32, 0x86, 0x16, 0x26, 0xc7, 0x68, 0x2a, 0xad, 0x0d,
  0x8e, 0xad, 0x0c, 0x64, 0xe8, 0x65, 0x68, 0x65, 0x05, 0x84, 0x4a, 0x28,
  0x28, 0x68, 0x43, 0x90, 0x0f, 0x13, 0x84, 0x51, 0x50, 0x83, 0x0d, 0x03,
  0x3e, 0xe8, 0xc3, 0x3e, 0x6c, 0x18, 0xee, 0x81, 0x1f, 0xf6, 0x61, 0xc3,
  0xd0, 0x0f, 0xfd, 0xb0, 0x0f, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2,
  0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb,
  0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf,
  0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3,
  0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63,
  0x9b, 0x12, 0x24, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea,
  0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0xa2, 0x50, 0x89, 0x0c, 0xcf, 0x85,
  0x2e, 0x0f, 0xae, 0x2c, 0xc8, 0xcd, 0xed, 0x8d, 0x2e, 0x8c, 0x2e, 0xed,
  0xcd, 0x6d, 0x6e, 0x8a, 0xc0, 0x0e, 0xf1, 0x50, 0x87, 0x0c, 0xcf, 0xa5,
  0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a,
  0x50, 0x0f, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72,
  0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70,
  0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
  0x46, 0xb1, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x1b,
  0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0x66, 0x61, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11,
  0xec, 0xe4, 0x44, 0x84, 0x5f, 0xdc, 0xb6, 0x71, 0x48, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x51, 0x07,
  0x77, 0x10, 0xf8, 0x9d, 0xbf, 0xef, 0x3a, 0xdd, 0xf9, 0x96, 0xb7, 0xc3,
  0x6c, 0x62, 0x19, 0x4e, 0x47, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x24, 0xbd,
  0x52, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f, 0xc9,
  0x5e, 0x1e, 0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04, 0x9b, 0x01, 0x81, 0x40,
  0x60, 0xb0, 0x16, 0xf0, 0x20, 0xf0, 0x3b, 0x7f, 0xdf, 0x75, 0x7a, 0xf3,
  0x4d, 0x4f, 0xbf, 0xdd, 0xd6, 0xf2, 0x98, 0xfe, 0x96, 0x03, 0x81, 0x33,
  0xeb, 0x8f, 0x24, 0xbd, 0x52, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11,
  0x81, 0xd6, 0x1f, 0xc9, 0x5e, 0x1e, 0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04,
  0x8b, 0x01, 0x81, 0x40, 0x60, 0xd0, 0x32, 0xaa, 0xe1, 0xf2, 0x9d, 0xc7,
  0x9f, 0x88, 0x6b, 0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1, 0x47, 0x6e, 0xdb,
  0x1e, 0x04, 0x21, 0x28, 0x81, 0x51, 0x08, 0xfc, 0xce, 0xdf, 0xb4, 0x1b,
  0x1a, 0x96, 0xd3, 0xd3, 0x61, 0x36, 0x31, 0x3d, 0xa7, 0x87, 0xdd, 0xe3,
  0x32, 0xb1, 0x2c, 0x4f, 0xdb, 0xc3, 0xf4, 0xb4, 0xbd, 0x3c, 0x07, 0x02,
  0x67, 0xd6, 0x1f, 0x89, 0x5a, 0xc6, 0xd3, 0xeb, 0xf2, 0xb2, 0x8c, 0x08,
  0xb4, 0xfe, 0x48, 0xf6, 0xf2, 0x98, 0xfe, 0x96, 0x03, 0x9b, 0x24, 0x58,
  0x0c, 0x08, 0x04, 0x02, 0x83, 0x55, 0x00, 0x07, 0x81, 0xdf, 0xf9, 0x9b,
  0x76, 0x4b, 0xcb, 0x70, 0xf9, 0x5b, 0x5d, 0x1e, 0xd3, 0xcb, 0x64, 0xe7,
  0x5b, 0xde, 0x0e, 0xb3, 0x89, 0x65, 0x38, 0x1d, 0x0d, 0x04, 0xce, 0xac,
  0x3f, 0x12, 0xb5, 0x8c, 0xa7, 0xd7, 0xe5, 0x65, 0x19, 0x11, 0x98, 0x04,
  0x02, 0x83, 0x85, 0x70, 0x07, 0x81, 0xdf, 0xf9, 0xfb, 0xae, 0xd3, 0x91,
  0x69, 0x3a, 0xf4, 0x3d, 0x4f, 0xd3, 0xd3, 0x6f, 0x37, 0x10, 0x38, 0xb3,
  0xfe, 0x48, 0xd2, 0x2b, 0xb5, 0x8c, 0xa7, 0xd7, 0xe5, 0x65, 0x19, 0x11,
  0x68, 0xfd, 0x91, 0xec, 0xe5, 0x31, 0xfd, 0x2d, 0x07, 0x36, 0x49, 0xb0,
  0x19, 0x10, 0x08, 0x04, 0x06, 0xcb, 0xc0, 0x0e, 0x02, 0xbf, 0xf3, 0x37,
  0xed, 0x9e, 0xd6, 0xe5, 0xe6, 0xf0, 0xb8, 0x1c, 0x64, 0x8b, 0xcb, 0xe4,
  0x37, 0x10, 0x38, 0xb3, 0xfe, 0x48, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97,
  0x65, 0x44, 0xa0, 0xf5, 0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7, 0x1c, 0xd8,
  0x24, 0xc1, 0x66, 0x40, 0x20, 0x10, 0x18, 0x2c, 0x08, 0x55, 0x08, 0xfc,
  0xd2, 0x6e, 0x72, 0x19, 0xff, 0x34, 0x9b, 0xe7, 0x65, 0xfa, 0x1c, 0xf8,
  0x8b, 0xfd, 0x7e, 0xc7, 0x32, 0x5d, 0x46, 0x8c, 0xd6, 0xc3, 0xe4, 0xa4,
  0x9b, 0x5c, 0xc6, 0x3f, 0xcd, 0xe6, 0x79, 0x99, 0x0e, 0x04, 0x66, 0x83,
  0xbf, 0xa0, 0xf5, 0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7, 0x1c, 0x98, 0x24,
  0xc1, 0x62, 0x40, 0x60, 0x12, 0xa8, 0x05, 0xce, 0xa2, 0x42, 0xab, 0x0c,
  0x28, 0x74, 0xc1, 0x2a, 0x42, 0x15, 0x02, 0xbf, 0xb4, 0x9b, 0x5c, 0xc6,
  0x3f, 0xcd, 0xe6, 0x79, 0x99, 0x3e, 0x07, 0xfe, 0x62, 0xbf, 0xdf, 0xb1,
  0x4c, 0x97, 0x11, 0xa3, 0xf5, 0x30, 0x39, 0xe9, 0x26, 0x97, 0xf1, 0x4f,
  0xb3, 0x79, 0x5e, 0xa6, 0x03, 0x81, 0xd9, 0xe0, 0x2f, 0x68, 0xfd, 0x91,
  0xec, 0xe5, 0x31, 0xfd, 0x2d, 0x07, 0x26, 0x49, 0xb0, 0x18, 0x10, 0x98,
  0x04, 0x6a, 0x81, 0xb3, 0xa8, 0xd0, 0x2a, 0x03, 0x0a, 0x5d, 0xb1, 0x6a,
  0xc8, 0x83, 0xc0, 0xef, 0xfc, 0x7d, 0xd7, 0xe9, 0xd3, 0xba, 0xdc, 0x1c,
  0x1e, 0x97, 0x83, 0x6c, 0x71, 0x99, 0xfc, 0x06, 0x02, 0x67, 0xd6, 0x1f,
  0x49, 0x7a, 0xa5, 0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0x02, 0xad,
  0x3f, 0x92, 0xbd, 0x3c, 0xa6, 0xbf, 0xe5, 0xc0, 0x26, 0x09, 0x36, 0x03,
  0x02, 0x81, 0xc0, 0x60, 0x01, 0xd0, 0x41, 0xe0, 0x77, 0xfe, 0xa6, 0xdd,
  0xce, 0xb7, 0xbc, 0x1d, 0x66, 0x13, 0xcb, 0x70, 0x3a, 0x1a, 0x08, 0x9c,
  0x59, 0x7f, 0x24, 0x6a, 0x19, 0x4f, 0xaf, 0xcb, 0xcb, 0x32, 0x22, 0xd0,
  0xfa, 0x23, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e, 0x6c, 0x92, 0x60, 0x33,
  0x20, 0x10, 0x08, 0x0c, 0x1a, 0x86, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13,
  0x71, 0x4d, 0x54, 0x44, 0xb0, 0x93, 0x13, 0x11, 0x3e, 0x72, 0xdb, 0x95,
  0x60, 0x0a, 0x81, 0xdf, 0xf9, 0xfb, 0xae, 0xd3, 0xa1, 0x61, 0x39, 0x3d,
  0x1d, 0x66, 0x13, 0xd3, 0x73, 0x7a, 0xd8, 0x3d, 0x2e, 0x13, 0xcb, 0xf2,
  0xb4, 0x3d, 0x4c, 0x4f, 0xdb, 0xcb, 0x73, 0x20, 0x70, 0x66, 0xfd, 0x91,
  0xa4, 0x57, 0x6a, 0x19, 0x4f, 0xaf, 0xcb, 0xcb, 0x32, 0x22, 0xd0, 0xfa,
  0x23, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e, 0x6c, 0x92, 0x60, 0x31, 0x20,
  0x10, 0x08, 0x0c, 0xda, 0x84, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11,
  0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0xc5, 0x30, 0x07, 0x81, 0xdf,
  0xf9, 0xfb, 0xae, 0xd3, 0xa5, 0x65, 0xb8, 0xfc, 0xad, 0x2e, 0x8f, 0xe9,
  0x65, 0xb2, 0xf3, 0x2d, 0x6f, 0x87, 0xd9, 0xc4, 0x32, 0x9c, 0x8e, 0x06,
  0x02, 0x67, 0xd6, 0x1f, 0x49, 0x7a, 0xa5, 0x96, 0xf1, 0xf4, 0xba, 0xbc,
  0x2c, 0x23, 0x02, 0x93, 0x40, 0x60, 0xd0, 0x2a, 0xae, 0xe1, 0xf2, 0x9d,
  0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22, 0x02, 0x04, 0xa6, 0x83, 0x88, 0xfc,
  0xe2, 0xb6, 0xcb, 0x21, 0x0c, 0x02, 0xbf, 0x21, 0x3b, 0xdc, 0x86, 0x4f,
  0xc3, 0x6d, 0x38, 0xbb, 0x2c, 0x07, 0x02, 0x67, 0xd5, 0x69, 0xb8, 0x0d,
  0x67, 0x97, 0xe5, 0x53, 0x7a, 0x98, 0x5e, 0x06, 0x02, 0x83, 0x76, 0x51,
  0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03,
  0x0c, 0x7e, 0x71, 0xdb, 0x26, 0x41, 0x30, 0x00, 0xd2, 0x54, 0x00, 0x1d,
  0x04, 0x7e, 0xe7, 0x6f, 0xda, 0x8d, 0x4c, 0xd3, 0xa1, 0xef, 0x79, 0x9a,
  0x9e, 0x7e, 0xbb, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0xa2, 0x96, 0xf1, 0xf4,
  0xba, 0xbc, 0x2c, 0x23, 0x02, 0xad, 0x3f, 0x92, 0xbd, 0x3c, 0xa6, 0xbf,
  0xe5, 0xc0, 0x26, 0x09, 0x36, 0x03, 0x02, 0x81, 0xc0, 0x60, 0x0d, 0x7c,
  0x81, 0xdf, 0xf9, 0x9b, 0x76, 0x13, 0xcb, 0x70, 0x3a, 0x1a, 0x08, 0x9c,
  0x59, 0x7f, 0x24, 0x6a, 0x19, 0x4f, 0xaf, 0xcb, 0xcb, 0x32, 0x22, 0xb0,
  0x09, 0x04, 0x06, 0x4d, 0x03, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x69,
  0x80, 0x08, 0xf3, 0x8b, 0xdb, 0x2e, 0x82, 0x3a, 0x08, 0xfc, 0xce, 0xdf,
  0xb4, 0xbb, 0xf9, 0xa6, 0xa7, 0xdf, 0x6e, 0x6b, 0x79, 0x4c, 0x7f, 0xcb,
  0x81, 0xc0, 0x99, 0xf5, 0x47, 0xa2, 0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c,
  0x23, 0x02, 0xad, 0x3f, 0x92, 0xbd, 0x3c, 0xa6, 0xbf, 0xe5, 0xc0, 0x26,
  0x09, 0x16, 0x03, 0x02, 0x81, 0xc0, 0x60, 0x29, 0x88, 0x41, 0xe0, 0x77,
  0xfe, 0xbe, 0xeb, 0x74, 0x62, 0x19, 0x4e, 0x47, 0x03, 0x81, 0x33, 0xeb,
  0x8f, 0x24, 0xbd, 0x52, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81,
  0x4d, 0x20, 0x30, 0x08, 0x61, 0x20, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x44, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x64, 0x2a, 0x82, 0x32, 0x28, 0x0f, 0x12, 0xcc, 0x00, 0x94, 0x5c, 0x19,
  0x06, 0x14, 0x61, 0x40, 0x21, 0x95, 0x51, 0xe9, 0x06, 0x94, 0x5d, 0x49,
  0x06, 0x90, 0xa9, 0x04, 0x46, 0x00, 0x08, 0x30, 0x46, 0x00, 0x82, 0x20,
  0x08, 0x82, 0xc1, 0x0c, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x01,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xc0, 0x07, 0x7b, 0xd0, 0x14, 0x77,
  0x10, 0x07, 0x6c, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x7c, 0xc0,
  0x07, 0x8e, 0x41, 0x07, 0x73, 0xd0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0xc0, 0x07, 0x7d, 0xf0, 0x1c, 0x7a, 0x90, 0x07, 0x6e, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x7c, 0xe0, 0x07, 0x10, 0xc2, 0x07, 0x76,
  0xf0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xc0, 0x07, 0x7f, 0x10,
  0x25, 0x79, 0xc0, 0x07, 0x70, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x7c, 0x00, 0x0a, 0x92, 0xf2, 0x07, 0x7a, 0x10, 0x07, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0xc0, 0x07, 0xa1, 0x30, 0x2d, 0x7c, 0x00, 0x0a, 0x72,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x7c, 0x20, 0x0a, 0xd4, 0xe2,
  0x07, 0x78, 0x30, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xc0, 0x07,
  0xa3, 0x50, 0x31, 0x7b, 0xa0, 0x07, 0x74, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x7c, 0x40, 0x0a, 0x56, 0x13, 0x0a, 0xa0, 0x50, 0x07, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0xc0, 0x07, 0xa5, 0x70, 0x39, 0xa3, 0xd0,
  0x07, 0x76, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x7c, 0x60, 0x0a,
  0xd8, 0x03, 0x0a, 0xa3, 0x70, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0xc0, 0x07, 0xa7, 0x90, 0x41, 0xa6, 0x10, 0x0a, 0x78, 0x30, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x7c, 0x80, 0x0a, 0x5a, 0x34, 0x0a, 0xa7, 0x90,
  0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xc0, 0x07, 0xa9, 0xb0, 0x79,
  0xa4, 0x40, 0x0a, 0x7a, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x7c,
  0xa0, 0x0a, 0x1c, 0x18, 0x94, 0x42, 0x29, 0xec, 0xc1, 0x88, 0x81, 0x01,
  0x80, 0x20, 0x18, 0x8c, 0x01, 0x2d, 0x60, 0xa6, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x63, 0x50, 0x0b, 0xd9, 0x2a, 0xcc, 0x44, 0xfc, 0x81,
  0xd0, 0x8d, 0xc2, 0x4c, 0xc4, 0x1f, 0x08, 0xdd, 0x28, 0x14, 0xe1, 0x0a,
  0x57, 0xc4, 0x2b, 0xdc, 0x09, 0x80, 0x3a, 0x01, 0x50, 0x26, 0x64, 0xf0,
  0x31, 0x41, 0x83, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xa4, 0x41,
  0x2f, 0x84, 0xc1, 0x02, 0x0b, 0xa3, 0x09, 0x81, 0x30, 0x9a, 0x20, 0x0c,
  0x26, 0x14, 0xf2, 0x31, 0xa1, 0x90, 0xcf, 0x88, 0x81, 0x03, 0x80, 0x20,
  0x18, 0xb0, 0x41, 0x38, 0x94, 0x41, 0x15, 0x09, 0x41, 0x18, 0x84, 0x41,
  0x1b, 0xb4, 0x41, 0x2d, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0xec, 0xdf, 0x10, 0xe9, 0x82, 0x2e,
  0x0c, 0x1b, 0x10, 0x81, 0x30, 0x00, 0xfb, 0x37, 0x48, 0xbb, 0xf0, 0x0b,
  0xc3, 0x06, 0x44, 0x40, 0x0c, 0xc0, 0xfe, 0x0d, 0x13, 0x2f, 0xec, 0xc2,
  0xb0, 0x01, 0x11, 0x1c, 0x03, 0xb0, 0x7f, 0x03, 0xd5, 0x0b, 0xe0, 0x30,
  0x6c, 0x40, 0x04, 0xc7, 0x00, 0xd4, 0x85, 0x41, 0x05, 0xe3, 0xa0, 0xc3,
  0x0d, 0x01, 0x38, 0x80, 0xc1, 0x2c, 0x43, 0x20, 0x04, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x70, 0x07, 0xe8, 0x50, 0x07, 0x8b, 0x32, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x77, 0x90, 0x0e, 0x76, 0x90, 0x28, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0x70, 0x07, 0xea, 0x70, 0x07, 0x81, 0x30, 0x4b,
  0x30, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x1d, 0xac, 0xc3, 0x1d,
  0x38, 0xcd, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xdc, 0x01, 0x3b, 0xe0,
  0x01, 0xd3, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x1d, 0xb4, 0x43,
  0x1e, 0x04, 0xc2, 0x2c, 0xc1, 0x30, 0x50, 0x01, 0x20, 0x81, 0x20, 0x58,
  0xf0, 0xc4, 0xc7, 0x84, 0x28, 0x3e, 0x36, 0x50, 0xf1, 0x31, 0x82, 0x8a,
  0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0xe4, 0x81, 0x3c, 0xb4, 0x03,
  0x31, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x79, 0x30, 0x0f, 0xee, 0x40,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x1e, 0xd0, 0xc3, 0x3b, 0x10,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x90, 0x07, 0xf5, 0x00, 0x0f, 0xc4,
  0xfe, 0x0d, 0x68, 0x00, 0x0f, 0xf0, 0x30, 0x6c, 0x40, 0x04, 0xc5, 0x00,
  0xec, 0xdf, 0x90, 0x06, 0xf1, 0x50, 0x0f, 0xc3, 0x06, 0x44, 0x50, 0x0c,
  0xc0, 0xfe, 0x0d, 0x6a, 0x20, 0x0f, 0xf1, 0x30, 0x6c, 0x40, 0x04, 0xc5,
  0x00, 0xec, 0xdf, 0xb0, 0x06, 0xf3, 0x60, 0x0f, 0xc3, 0x06, 0x44, 0x50,
  0x0c, 0xc0, 0x70, 0xc4, 0x81, 0x10, 0xdf, 0x05, 0x82, 0x58, 0xbf, 0xc1,
  0x0d, 0xec, 0x21, 0xa0, 0x00, 0x30, 0x86, 0x23, 0x94, 0x80, 0xf8, 0xa6,
  0x1b, 0xf0, 0x81, 0x08, 0xd6, 0x6f, 0x90, 0x03, 0x7d, 0x08, 0x28, 0x00,
  0x8c, 0xe1, 0x88, 0x26, 0x20, 0xbe, 0xe9, 0x06, 0x90, 0x20, 0x82, 0xe5,
  0x19, 0x5e, 0xc2, 0x1f, 0x82, 0xe5, 0x19, 0x5e, 0xe2, 0x1f, 0x04, 0x12,
  0x04, 0x83, 0x04, 0xc1, 0x28, 0x01, 0x0f, 0xa0, 0x04, 0x3c, 0x80, 0xf5,
  0x1b, 0xf6, 0x80, 0x24, 0x0e, 0x0a, 0x00, 0x63, 0xc4, 0xc0, 0x01, 0x40,
  0x10, 0x0c, 0xdc, 0x20, 0x26, 0x78, 0xa1, 0x15, 0x40, 0xe1, 0x0f, 0x7c,
  0x21, 0x08, 0x82, 0xe0, 0x17, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x00,
  0x0e, 0x60, 0x62, 0x17, 0x46, 0xc1, 0x24, 0x88, 0xc1, 0x17, 0x7c, 0xc1,
  0x17, 0x7c, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xc0, 0x01, 0x40, 0x10, 0x0c, 0xdc,
  0xc0, 0x26, 0xc2, 0xe1, 0x15, 0x4a, 0x81, 0x14, 0xc6, 0x81, 0x18, 0x84,
  0x80, 0x1c, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x00, 0x0e, 0x6a, 0x02,
  0x1c, 0x54, 0x61, 0x25, 0x12, 0x64, 0x1c, 0xc6, 0x61, 0x1c, 0xc6, 0x61,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0xc0, 0x84, 0x5d, 0x90, 0x8f, 0x09,
  0xbc, 0x20, 0x9f, 0x11, 0x03, 0x07, 0x00, 0x41, 0x30, 0x70, 0x83, 0x9d,
  0x30, 0x07, 0x5b, 0x50, 0x85, 0x54, 0x40, 0x07, 0x21, 0x10, 0x84, 0x74,
  0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x03, 0x38, 0xd0, 0x89, 0x72, 0x88,
  0x05, 0x98, 0x70, 0x1a, 0x74, 0x40, 0x07, 0x74, 0x40, 0x87, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0x11, 0x03, 0x07, 0x00, 0x41, 0x30, 0x70,
  0x03, 0x9f, 0x48, 0x87, 0x5d, 0x68, 0x05, 0x56, 0x58, 0x07, 0x21, 0x10,
  0x04, 0x76, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x83, 0x3a, 0xd8, 0x09,
  0x74, 0xa8, 0x85, 0x99, 0x88, 0xa0, 0x75, 0x58, 0x87, 0x75, 0x58, 0x87,
  0xd1, 0x84, 0x00, 0x18, 0x31, 0x70, 0x00, 0x10, 0x04, 0x03, 0x39, 0xf0,
  0x89, 0x75, 0xf0, 0x85, 0x57, 0x70, 0x85, 0x76, 0x08, 0x82, 0x20, 0x70,
  0x87, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0x80, 0x83, 0x9f, 0x50, 0x87,
  0x59, 0xa8, 0x89, 0x49, 0x6a, 0x87, 0x76, 0x68, 0x87, 0x76, 0x18, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62,
  0x18, 0x31, 0x70, 0x00, 0x10, 0x04, 0x03, 0x37, 0x28, 0x0b, 0x78, 0xf8,
  0x05, 0x5a, 0x98, 0x05, 0x79, 0x20, 0x06, 0x21, 0x98, 0x87, 0x11, 0x83,
  0x06, 0x00, 0x41, 0x30, 0x80, 0x03, 0xb2, 0x78, 0x87, 0x5e, 0xd0, 0x09,
  0xec, 0x92, 0x07, 0x79, 0x90, 0x07, 0x79, 0x18, 0x4d, 0x08, 0x80, 0xd1,
  0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x70,
  0x00, 0x10, 0x04, 0x03, 0x37, 0x50, 0x8b, 0x7a, 0x48, 0x87, 0x5c, 0xc0,
  0x85, 0x7b, 0x20, 0x06, 0x21, 0xc0, 0x07, 0x0c, 0x07, 0x02, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x46, 0xa6, 0x19, 0x3f, 0xd2, 0x9c, 0x4e, 0xc4,
  0x00, 0x4b, 0x47, 0x3c, 0xd3, 0xf1, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xf1,
  0xdb, 0x83, 0x85, 0x06, 0x10, 0x8b, 0x03, 0x0c, 0x36, 0x18, 0x50, 0x7c,
  0x26, 0xd2, 0xf0, 0x26, 0x18, 0x50, 0x7c, 0x26, 0xd2, 0xf4, 0x96, 0x85,
  0x19, 0xbf, 0x43, 0x4d, 0xa6, 0x33, 0x21, 0x4e, 0xf3, 0x12, 0xc2, 0xe4,
  0x44, 0xbf, 0xab, 0xbd, 0xbf, 0x3d, 0x58, 0x5d, 0xe1, 0x23, 0xb5, 0x4d,
  0x1b, 0x61, 0x00, 0xf1, 0x99, 0x48, 0x63, 0x87, 0x01, 0xc4, 0x67, 0x02,
  0x97, 0x19, 0x06, 0x18, 0x9f, 0x09, 0x5c, 0x35, 0x6d, 0x85, 0x01, 0xc6,
  0x67, 0x02, 0x57, 0x5d, 0x9b, 0x62, 0x40, 0xe1, 0x23, 0xb5, 0x6d, 0x1b,
  0x6c, 0x40, 0xe1, 0x23, 0xb5, 0xad, 0x1b, 0x69, 0x40, 0xe1, 0x23, 0xb5,
  0x8d, 0x1b, 0x96, 0x18, 0x18, 0xbf, 0x43, 0x4d, 0x2b, 0xf1, 0x44, 0x4e,
  0x42, 0x08, 0x13, 0x31, 0x9c, 0x4e, 0xc4, 0x00, 0x4b, 0x47, 0x3c, 0xd3,
  0xf1, 0xbb, 0xda, 0xfb, 0xdb, 0x83, 0x71, 0x5d, 0xc6, 0xef, 0x50, 0x53,
  0x88, 0x4c, 0xa9, 0x23, 0x21, 0x13, 0xe2, 0x34, 0xbf, 0xab, 0xbd, 0xbf,
  0x3d, 0xd8, 0x98, 0x66, 0xfc, 0x48, 0x13, 0x22, 0x53, 0xea, 0x48, 0xc8,
  0x84, 0x38, 0xcd, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0xc4, 0x6f, 0x0f, 0xd6,
  0x18, 0x40, 0x7c, 0x5a, 0x20, 0x99, 0x63, 0x80, 0xf1, 0x69, 0x81, 0x54,
  0xdb, 0x26, 0x96, 0x06, 0xc6, 0x8f, 0x34, 0x29, 0x10, 0x4d, 0x08, 0xb0,
  0x74, 0x88, 0x34, 0x01, 0x8d, 0x40, 0x74, 0x44, 0x84, 0x54, 0xc0, 0x84,
  0x54, 0x84, 0xf4, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xf1, 0xdb, 0x83, 0x41,
  0x06, 0x18, 0x9f, 0x16, 0x48, 0x35, 0x6e, 0x8f, 0x01, 0xc6, 0xa7, 0x05,
  0x52, 0x7d, 0x5b, 0x5b, 0xe1, 0x23, 0x74, 0x9d, 0xdb, 0x55, 0x66, 0xfc,
  0x0e, 0x35, 0xb1, 0x54, 0x54, 0x00, 0x02, 0xa1, 0x2d, 0x01, 0x31, 0x38,
  0xbf, 0xab, 0xbd, 0xbf, 0x3d, 0xd8, 0x5b, 0xe1, 0x23, 0x74, 0xbd, 0x9b,
  0x68, 0x40, 0xb1, 0x38, 0xc0, 0x50, 0x1b, 0x5d, 0xe1, 0x23, 0x74, 0xdd,
  0x9b, 0x56, 0x64, 0xfc, 0x0e, 0x35, 0x75, 0xc4, 0x33, 0x1d, 0xbf, 0xab,
  0xbd, 0xbf, 0x3d, 0xd8, 0x57, 0x19, 0x18, 0x3f, 0xd2, 0xac, 0xc4, 0x13,
  0x39, 0x09, 0x21, 0x4c, 0xc4, 0x70, 0x3a, 0x11, 0x03, 0x2c, 0x1d, 0xf1,
  0x4c, 0xc7, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0xc4, 0x6f, 0x0f, 0x66, 0x1b,
  0xc0, 0xb4, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x70, 0xdb, 0x6e,
  0x00, 0xd3, 0x12, 0xd7, 0x44, 0x45, 0x44, 0xe9, 0x00, 0x03, 0x6e, 0xac,
  0x01, 0x4c, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0xb9, 0xc5,
  0x06, 0x30, 0x2d, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xe8, 0x46,
  0x1b, 0xc0, 0xb4, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xb0, 0x5b,
  0x62, 0x40, 0xe1, 0x23, 0xb4, 0x5d, 0xdb, 0x68, 0x40, 0xe1, 0x23, 0xb4,
  0x7d, 0xdb, 0x6b, 0x40, 0xe1, 0x23, 0xb4, 0x9d, 0x9b, 0x99, 0x22, 0x04,
  0xbf, 0x10, 0x50, 0x45, 0x41, 0x44, 0xb6, 0x36, 0xf8, 0x08, 0x6d, 0x6c,
  0x83, 0x8f, 0xd4, 0xb6, 0x18, 0x30, 0xf8, 0x88, 0x6d, 0x8c, 0x01, 0x83,
  0x8f, 0xdc, 0x06, 0xb6, 0x19, 0x3f, 0xd2, 0x98, 0xce, 0x84, 0x38, 0xcd,
  0x4b, 0x08, 0x93, 0x13, 0xfd, 0x13, 0x71, 0x4d, 0x54, 0x44, 0xfc, 0xf6,
  0x60, 0x6e, 0x85, 0x8f, 0xd4, 0xb5, 0x6e, 0xa7, 0x01, 0x4b, 0x4b, 0x5c,
  0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x06, 0x57, 0xf8, 0x48, 0x5d, 0xf3,
  0xe6, 0xc5, 0x19, 0x3f, 0xd2, 0xb0, 0x54, 0x54, 0x00, 0x02, 0xa1, 0x2d,
  0x01, 0x31, 0x38, 0xff, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xbf, 0x3d, 0x58,
  0x19, 0xc5, 0x2d, 0x00, 0xf3, 0xb0, 0x00, 0xf3, 0x2c, 0x44, 0xf4, 0x4b,
  0x00, 0xf3, 0x2c, 0x44, 0x44, 0x1a, 0xd0, 0x85, 0x80, 0x9f, 0xa3, 0x32,
  0xba, 0x24, 0x37, 0xb2, 0x32, 0x3c, 0x23, 0xb9, 0xb7, 0x36, 0xa2, 0x32,
  0x38, 0x3a, 0xb4, 0xa0, 0xbb, 0x30, 0xb9, 0x32, 0xa1, 0x34, 0xb6, 0x30,
  0xba, 0x32, 0xb9, 0x30, 0x36, 0xa2, 0xb7, 0x3b, 0xb7, 0xb9, 0xb0, 0x36,
  0x38, 0xb6, 0x32, 0x19, 0x3c, 0x19, 0x20, 0xa0, 0xac, 0xa0, 0x24, 0xab,
  0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39, 0xa0, 0x26, 0x12, 0x98,
  0x19, 0x20, 0x20, 0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39,
  0xa0, 0x24, 0x12, 0x98, 0x18, 0x20, 0x20, 0x20, 0x2d, 0x97, 0x32, 0xbc,
  0x34, 0x3a, 0x0b, 0xa3, 0x8c, 0x1f, 0x69, 0x3a, 0xe2, 0x99, 0x8e, 0x7f,
  0x22, 0xae, 0x89, 0x8a, 0x88, 0xdf, 0x1e, 0x6c, 0xcb, 0x0c, 0x8c, 0xdf,
  0xa1, 0xa6, 0x14, 0x88, 0x26, 0x04, 0x58, 0x3a, 0x44, 0x9a, 0x80, 0x46,
  0x20, 0x3a, 0x22, 0x42, 0x2a, 0x60, 0x42, 0x2a, 0x42, 0xfa, 0x5d, 0xed,
  0xfd, 0xed, 0xc1, 0xba, 0x2e, 0xe3, 0x77, 0xa8, 0xe9, 0x74, 0x22, 0x06,
  0x58, 0x3a, 0xe2, 0x99, 0x8e, 0xdf, 0xd5, 0xde, 0xdf, 0x1e, 0x00, 0x00,
  0x01, 0x31, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x56, 0x08,
  0xfa, 0x61, 0xcb, 0x00, 0x0b, 0x41, 0x3f, 0x6c, 0x19, 0x74, 0x21, 0xe8,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
