#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
; cbuffer cb
; {
;
;   struct cb
;   {
;
;       struct struct.RTAOConstantBuffer
;       {
;
;           uint seed;                                ; Offset:    0
;           uint numSamplesPerSet;                    ; Offset:    4
;           uint numSampleSets;                       ; Offset:    8
;           uint numPixelsPerDimPerSet;               ; Offset:   12
;           float maxAORayHitTime;                    ; Offset:   16
;           int approximateInterreflections;          ; Offset:   20
;           float diffuseReflectanceScale;            ; Offset:   24
;           float minimumAmbientIllumination;         ; Offset:   28
;           float maxTheoreticalAORayHitTime;         ; Offset:   32
;           int useSortedRays;                        ; Offset:   36
;           uint2 raytracingDim;                      ; Offset:   40
;           int applyExponentialFalloff;              ; Offset:   48
;           float exponentialFalloffDecayConstant;    ; Offset:   52
;           int doCheckerboardSampling;               ; Offset:   56
;           int areEvenPixelsActive;                  ; Offset:   60
;           uint spp;                                 ; Offset:   64
;           float padding[3];                         ; Offset:   80
;       
;       } cb                                          ; Offset:    0
;
;   
;   } cb                                              ; Offset:    0 Size:   116
;
; }
;
; Resource bind info for g_sampleSets
; {
;
;   struct struct.AlignedHemisphereSample3D
;   {
;
;       float3 value;                                 ; Offset:    0
;       uint padding;                                 ; Offset:   12
;   
;   } $Element;                                       ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb                                cbuffer      NA          NA     CB0            cb0     1
; g_scene                           texture     i32         ras      T0             t0     1
; g_texRayOriginPosition            texture     f32          2d      T1             t7     1
; g_texRayOriginSurfaceNormalDepth   texture     u32          2d      T2             t8     1
; g_texAORaysDirectionOriginDepth   texture     u32          2d      T3            t22     1
; g_texAOSortedToSourceRayIndexOffset   texture     u32          2d      T4            t23     1
; g_texAOSurfaceAlbedo              texture     f32          2d      T5            t24     1
; g_sampleSets                      texture  struct         r/o      T6             t4     1
; g_outAOAmbientCoefficient             UAV     f32          2d      U0            u10     1
; g_outAORayHitDistance                 UAV     f32          2d      U1            u15     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.Texture2D<vector<unsigned int, 2> >" = type { <2 x i32>, %"class.Texture2D<vector<unsigned int, 2> >::mips_type" }
%"class.Texture2D<vector<unsigned int, 2> >::mips_type" = type { i32 }
%"class.RWTexture2D<float>" = type { float }
%"class.StructuredBuffer<AlignedHemisphereSample3D>" = type { %struct.AlignedHemisphereSample3D }
%struct.AlignedHemisphereSample3D = type { <3 x float>, i32 }
%cb = type { %struct.RTAOConstantBuffer }
%struct.RTAOConstantBuffer = type { i32, i32, i32, i32, float, i32, float, float, float, i32, <2 x i32>, i32, float, i32, i32, i32, [3 x float] }
%struct.ShadowRayPayload = type { float }
%dx.types.Handle = type { i8* }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%struct.Ray = type { <3 x float>, <3 x float> }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }

@"\01?g_scene@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A" = external constant %"class.Texture2D<unsigned int>", align 4
@"\01?g_texAORaysDirectionOriginDepth@@3V?$Texture2D@I@@A" = external constant %"class.Texture2D<unsigned int>", align 4
@"\01?g_texAOSortedToSourceRayIndexOffset@@3V?$Texture2D@V?$vector@I$01@@@@A" = external constant %"class.Texture2D<vector<unsigned int, 2> >", align 4
@"\01?g_texAOSurfaceAlbedo@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_outAOAmbientCoefficient@@3V?$RWTexture2D@M@@A" = external constant %"class.RWTexture2D<float>", align 4
@"\01?g_outAORayHitDistance@@3V?$RWTexture2D@M@@A" = external constant %"class.RWTexture2D<float>", align 4
@"\01?g_sampleSets@@3V?$StructuredBuffer@UAlignedHemisphereSample3D@@@@A" = external constant %"class.StructuredBuffer<AlignedHemisphereSample3D>", align 4
@cb = external constant %cb

; Function Attrs: nounwind
define void @"\01?RayGenShader@@YAXXZ"() #0 {
  %1 = alloca %struct.ShadowRayPayload, align 8
  %2 = load %"class.StructuredBuffer<AlignedHemisphereSample3D>", %"class.StructuredBuffer<AlignedHemisphereSample3D>"* @"\01?g_sampleSets@@3V?$StructuredBuffer@UAlignedHemisphereSample3D@@@@A", align 4
  %3 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_texAOSurfaceAlbedo@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %4 = load %"class.Texture2D<unsigned int>", %"class.Texture2D<unsigned int>"* @"\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A", align 4
  %5 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %6 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?g_scene@@3URaytracingAccelerationStructure@@A", align 4
  %7 = load %"class.RWTexture2D<float>", %"class.RWTexture2D<float>"* @"\01?g_outAORayHitDistance@@3V?$RWTexture2D@M@@A", align 4
  %8 = load %"class.RWTexture2D<float>", %"class.RWTexture2D<float>"* @"\01?g_outAOAmbientCoefficient@@3V?$RWTexture2D@M@@A", align 4
  %9 = load %cb, %cb* @cb, align 4
  %cb16 = call %dx.types.Handle @dx.op.createHandleForLib.cb(i32 160, %cb %9)  ; CreateHandleForLib(Resource)
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex5 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %10 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<unsigned int>"(i32 160, %"class.Texture2D<unsigned int>" %4)  ; CreateHandleForLib(Resource)
  %TextureLoad14 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %10, i32 0, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex5, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %11 = extractvalue %dx.types.ResRet.i32 %TextureLoad14, 0
  %12 = and i32 %11, 255
  %13 = uitofp i32 %12 to float
  %14 = lshr i32 %11, 8
  %15 = and i32 %14, 255
  %16 = uitofp i32 %15 to float
  %17 = lshr i32 %11, 16
  %LegacyF16ToF32 = call float @dx.op.legacyF16ToF32(i32 131, i32 %17)  ; LegacyF16ToF32(value)
  %.i0 = fmul fast float %13, 0x3F80101020000000
  %.i1 = fmul fast float %16, 0x3F80101020000000
  %.i017 = fadd fast float %.i0, -1.000000e+00
  %.i118 = fadd fast float %.i1, -1.000000e+00
  %FAbs4 = call float @dx.op.unary.f32(i32 6, float %.i017)  ; FAbs(value)
  %18 = fsub fast float 1.000000e+00, %FAbs4
  %FAbs = call float @dx.op.unary.f32(i32 6, float %.i118)  ; FAbs(value)
  %19 = fsub fast float %18, %FAbs
  %20 = fsub fast float -0.000000e+00, %19
  %Saturate = call float @dx.op.unary.f32(i32 7, float %20)  ; Saturate(value)
  %.i019 = fcmp fast oge float %.i017, 0.000000e+00
  %.i120 = fcmp fast oge float %.i118, 0.000000e+00
  %21 = fsub fast float -0.000000e+00, %Saturate
  %22 = select i1 %.i019, float %21, float %Saturate
  %23 = select i1 %.i120, float %21, float %Saturate
  %.i021 = fadd fast float %22, %.i017
  %.i122 = fadd fast float %23, %.i118
  %24 = call float @dx.op.dot3.f32(i32 55, float %.i021, float %.i122, float %19, float %.i021, float %.i122, float %19)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt11 = call float @dx.op.unary.f32(i32 25, float %24)  ; Rsqrt(value)
  %.i023 = fmul fast float %.i021, %Rsqrt11
  %.i124 = fmul fast float %.i122, %Rsqrt11
  %.i2 = fmul fast float %Rsqrt11, %19
  %25 = fcmp fast une float %LegacyF16ToF32, 0.000000e+00
  br i1 %25, label %26, label %178

; <label>:26                                      ; preds = %0
  %27 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %5)  ; CreateHandleForLib(Resource)
  %TextureLoad13 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %27, i32 0, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex5, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %28 = extractvalue %dx.types.ResRet.f32 %TextureLoad13, 0
  %29 = extractvalue %dx.types.ResRet.f32 %TextureLoad13, 1
  %30 = extractvalue %dx.types.ResRet.f32 %TextureLoad13, 2
  %31 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.i32 %31, 0
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %26
  br label %.lr.ph

.lr.ph:                                           ; preds = %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit", %.lr.ph.preheader
  %r.02 = phi i32 [ %170, %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit" ], [ 0, %.lr.ph.preheader ]
  %ambientCoef.01 = phi float [ %169, %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit" ], [ 0.000000e+00, %.lr.ph.preheader ]
  %34 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %35 = extractvalue %dx.types.CBufRet.i32 %34, 2
  %.i025 = fmul fast float %.i023, 0x3FD3333340000000
  %.i126 = fmul fast float %.i124, 0x3FD3333340000000
  %.i227 = fmul fast float %.i2, 0x3FD3333340000000
  %.i028 = fadd fast float %.i025, 0xBFE70A3D80000000
  %.i129 = fadd fast float %.i126, 0x3FE1EB8520000000
  %.i230 = fadd fast float %.i227, 0xBFD5C28F60000000
  %36 = fmul fast float %.i124, %.i230
  %37 = fmul fast float %.i129, %.i2
  %38 = fsub fast float %36, %37
  %39 = fmul fast float %.i028, %.i2
  %40 = fmul fast float %.i023, %.i230
  %41 = fsub fast float %39, %40
  %42 = fmul fast float %.i129, %.i023
  %43 = fmul fast float %.i028, %.i124
  %44 = fsub fast float %42, %43
  %45 = call float @dx.op.dot3.f32(i32 55, float %38, float %41, float %44, float %38, float %41, float %44)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt10 = call float @dx.op.unary.f32(i32 25, float %45)  ; Rsqrt(value)
  %.i031 = fmul fast float %Rsqrt10, %38
  %.i132 = fmul fast float %Rsqrt10, %41
  %.i233 = fmul fast float %Rsqrt10, %44
  %46 = fmul fast float %.i132, %.i2
  %47 = fmul fast float %.i233, %.i124
  %48 = fsub fast float %46, %47
  %49 = fmul fast float %.i233, %.i023
  %50 = fmul fast float %.i031, %.i2
  %51 = fsub fast float %49, %50
  %52 = fmul fast float %.i031, %.i124
  %53 = fmul fast float %.i132, %.i023
  %54 = fsub fast float %52, %53
  %55 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.i32 %55, 3
  %57 = add i32 %35, -1
  %58 = add i32 %57, %56
  %59 = udiv i32 %58, %56
  %.i034 = sdiv i32 %DispatchRaysIndex, %56
  %.i135 = sdiv i32 %DispatchRaysIndex5, %56
  %.i036 = mul i32 %56, %.i034
  %.i137 = mul i32 %56, %.i135
  %60 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %5)  ; CreateHandleForLib(Resource)
  %TextureLoad12 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %60, i32 0, i32 %.i036, i32 %.i137, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %61 = extractvalue %dx.types.ResRet.f32 %TextureLoad12, 0
  %62 = extractvalue %dx.types.ResRet.f32 %TextureLoad12, 1
  %63 = extractvalue %dx.types.ResRet.f32 %TextureLoad12, 2
  %64 = mul i32 %.i135, %59
  %65 = add i32 %64, %.i034
  %66 = uitofp i32 %65 to float
  %.i038 = fmul fast float %61, 0x3FD45F3080000000
  %.i139 = fmul fast float %62, 0x3FD45F3080000000
  %.i240 = fmul fast float %63, 0x3FD45F3080000000
  %.i041 = fadd fast float %.i038, 0x3FB99999A0000000
  %.i142 = fadd fast float %.i139, 0x3FB99999A0000000
  %.i243 = fadd fast float %.i240, 0x3FB99999A0000000
  %Frc7 = call float @dx.op.unary.f32(i32 22, float %.i041)  ; Frc(value)
  %Frc8 = call float @dx.op.unary.f32(i32 22, float %.i142)  ; Frc(value)
  %Frc9 = call float @dx.op.unary.f32(i32 22, float %.i243)  ; Frc(value)
  %67 = fadd fast float %Frc8, %Frc7
  %68 = fadd fast float %67, %Frc9
  %.i145 = fmul fast float %Frc7, 8.352100e+04
  %.i246 = fmul fast float %.i145, %Frc8
  %69 = fmul fast float %.i246, %Frc9
  %70 = fmul fast float %69, %68
  %Frc = call float @dx.op.unary.f32(i32 22, float %70)  ; Frc(value)
  %71 = fmul fast float %Frc, %66
  %72 = extractvalue %dx.types.CBufRet.i32 %55, 0
  %73 = uitofp i32 %72 to float
  %74 = fadd fast float %73, %71
  %75 = fptoui float %74 to i32
  %76 = xor i32 %75, 61
  %77 = lshr i32 %75, 16
  %78 = xor i32 %76, %77
  %79 = mul i32 %78, 9
  %80 = lshr i32 %79, 4
  %81 = xor i32 %80, %79
  %82 = mul i32 %81, 668265261
  %83 = lshr i32 %82, 15
  %84 = xor i32 %83, %82
  %85 = extractvalue %dx.types.CBufRet.i32 %55, 2
  %86 = uitofp i32 %85 to float
  %87 = shl i32 %84, 13
  %88 = xor i32 %87, %84
  %89 = lshr i32 %88, 17
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 5
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 9
  %94 = or i32 %93, 1065353216
  %95 = bitcast i32 %94 to float
  %96 = fadd fast float %95, -1.000000e+00
  %97 = fmul fast float %96, %86
  %98 = fptoui float %97 to i32
  %99 = extractvalue %dx.types.CBufRet.i32 %55, 1
  %100 = mul i32 %98, %99
  %.i047 = srem i32 %DispatchRaysIndex, %56
  %.i148 = srem i32 %DispatchRaysIndex5, %56
  %101 = mul i32 %56, %.i148
  %102 = mul i32 %56, %56
  %103 = uitofp i32 %102 to float
  %104 = shl i32 %92, 13
  %105 = xor i32 %104, %92
  %106 = lshr i32 %105, 17
  %107 = xor i32 %106, %105
  %108 = shl i32 %107, 5
  %109 = xor i32 %108, %107
  %110 = lshr i32 %109, 9
  %111 = or i32 %110, 1065353216
  %112 = bitcast i32 %111 to float
  %113 = fadd fast float %112, -1.000000e+00
  %114 = fmul fast float %113, %103
  %115 = fptoui float %114 to i32
  %116 = add i32 %.i047, %r.02
  %117 = add i32 %116, %101
  %118 = add i32 %117, %115
  %119 = urem i32 %118, %99
  %120 = add i32 %100, %119
  %121 = call %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<AlignedHemisphereSample3D>"(i32 160, %"class.StructuredBuffer<AlignedHemisphereSample3D>" %2)  ; CreateHandleForLib(Resource)
  %RawBufferLoad = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %121, i32 %120, i32 0, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %122 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 0
  %123 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 1
  %124 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 2
  %.i049 = fmul fast float %122, %48
  %.i150 = fmul fast float %122, %51
  %.i251 = fmul fast float %122, %54
  %.i052 = fmul fast float %123, %.i031
  %.i153 = fmul fast float %123, %.i132
  %.i254 = fmul fast float %123, %.i233
  %.i055 = fadd fast float %.i049, %.i052
  %.i156 = fadd fast float %.i150, %.i153
  %.i257 = fadd fast float %.i251, %.i254
  %.i058 = fmul fast float %124, %.i023
  %.i159 = fmul fast float %124, %.i124
  %.i260 = fmul fast float %124, %.i2
  %.i061 = fadd fast float %.i055, %.i058
  %.i162 = fadd fast float %.i156, %.i159
  %.i263 = fadd fast float %.i257, %.i260
  %125 = call float @dx.op.dot3.f32(i32 55, float %.i061, float %.i162, float %.i263, float %.i061, float %.i162, float %.i263)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %125)  ; Rsqrt(value)
  %.i064 = fmul fast float %.i061, %Rsqrt
  %.i165 = fmul fast float %.i162, %Rsqrt
  %.i266 = fmul fast float %.i263, %Rsqrt
  %126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.f32 %126, 0
  %.i067 = fmul fast float %.i023, 0x3F50624DE0000000
  %.i168 = fmul fast float %.i124, 0x3F50624DE0000000
  %.i269 = fmul fast float %.i2, 0x3F50624DE0000000
  %.i070 = fadd fast float %28, %.i067
  %.i171 = fadd fast float %29, %.i168
  %.i272 = fadd fast float %30, %.i269
  %128 = getelementptr inbounds %struct.ShadowRayPayload, %struct.ShadowRayPayload* %1, i32 0, i32 0
  store float %127, float* %128, align 8
  %129 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %6)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.ShadowRayPayload(i32 157, %dx.types.Handle %129, i32 128, i32 -1, i32 0, i32 0, i32 0, float %.i070, float %.i171, float %.i272, float 0.000000e+00, float %.i064, float %.i165, float %.i266, float %127, %struct.ShadowRayPayload* nonnull %1)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %130 = load float, float* %128, align 8
  %131 = fcmp fast une float %130, 0.000000e+00
  br i1 %131, label %132, label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"

; <label>:132                                     ; preds = %.lr.ph
  %133 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.i32 %133, 0
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

; <label>:136                                     ; preds = %132
  %137 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %138 = extractvalue %dx.types.CBufRet.f32 %137, 0
  %139 = fdiv fast float %130, %138
  %140 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb16, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %141 = extractvalue %dx.types.CBufRet.f32 %140, 1
  %142 = fmul fast float %139, %139
  %143 = fmul fast float %142, 0xBFF7154760000000
  %144 = fmul fast float %143, %141
  %Exp = call float @dx.op.unary.f32(i32 21, float %144)  ; Exp(value)
  br label %145

; <label>:145                                     ; preds = %136, %132
  %occlusionCoef.i.0 = phi float [ %Exp, %136 ], [ 1.000000e+00, %132 ]
  %146 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %147 = extractvalue %dx.types.CBufRet.f32 %146, 3
  %148 = fsub fast float 1.000000e+00, %147
  %149 = fmul fast float %148, %occlusionCoef.i.0
  %150 = fsub fast float 1.000000e+00, %149
  %151 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %152 = extractvalue %dx.types.CBufRet.i32 %151, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit", label %154

; <label>:154                                     ; preds = %145
  %155 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %3)  ; CreateHandleForLib(Resource)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %155, i32 0, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex5, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %156 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %157 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1
  %158 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2
  %159 = extractvalue %dx.types.CBufRet.f32 %146, 2
  %160 = fmul fast float %156, 0x3FCB367A00000000
  %161 = fmul fast float %157, 0x3FE6E2EB20000000
  %162 = fadd fast float %160, %161
  %163 = fmul fast float %158, 0x3FB27BB300000000
  %164 = fadd fast float %162, %163
  %165 = fmul fast float %159, %149
  %166 = fmul fast float %165, %164
  %167 = fsub fast float 1.000000e+00, %166
  %168 = fdiv fast float %150, %167
  br label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"

"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit": ; preds = %154, %145, %.lr.ph
  %ambientCoef.i.0 = phi float [ %168, %154 ], [ %150, %145 ], [ 1.000000e+00, %.lr.ph ]
  %169 = fadd fast float %ambientCoef.i.0, %ambientCoef.01
  %170 = add i32 %r.02, 1
  %171 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %172 = extractvalue %dx.types.CBufRet.i32 %171, 0
  %173 = icmp ult i32 %170, %172
  br i1 %173, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %26
  %ambientCoef.0.lcssa = phi float [ 0.000000e+00, %26 ], [ %169, %._crit_edge.loopexit ]
  %tHit.0.lcssa = phi float [ 0.000000e+00, %26 ], [ %130, %._crit_edge.loopexit ]
  %174 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %175 = extractvalue %dx.types.CBufRet.i32 %174, 0
  %176 = uitofp i32 %175 to float
  %177 = fdiv fast float %ambientCoef.0.lcssa, %176
  br label %178

; <label>:178                                     ; preds = %._crit_edge, %0
  %tHit.1 = phi float [ %tHit.0.lcssa, %._crit_edge ], [ 0.000000e+00, %0 ]
  %ambientCoef.1 = phi float [ %177, %._crit_edge ], [ -1.000000e+00, %0 ]
  %179 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<float>"(i32 160, %"class.RWTexture2D<float>" %8)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %179, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex5, i32 undef, float %ambientCoef.1, float %ambientCoef.1, float %ambientCoef.1, float %ambientCoef.1, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %180 = fcmp fast une float %tHit.1, 0.000000e+00
  br i1 %180, label %184, label %181

; <label>:181                                     ; preds = %178
  %182 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %183 = extractvalue %dx.types.CBufRet.f32 %182, 0
  br label %184

; <label>:184                                     ; preds = %181, %178
  %185 = phi float [ %183, %181 ], [ %tHit.1, %178 ]
  %186 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<float>"(i32 160, %"class.RWTexture2D<float>" %7)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %186, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex5, i32 undef, float %185, float %185, float %185, float %185, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind
define void @"\01?RayGenShader_sortedRays@@YAXXZ"() #0 {
  %1 = alloca %struct.ShadowRayPayload, align 8
  %2 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_texAOSurfaceAlbedo@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %3 = load %"class.Texture2D<vector<unsigned int, 2> >", %"class.Texture2D<vector<unsigned int, 2> >"* @"\01?g_texAOSortedToSourceRayIndexOffset@@3V?$Texture2D@V?$vector@I$01@@@@A", align 4
  %4 = load %"class.Texture2D<unsigned int>", %"class.Texture2D<unsigned int>"* @"\01?g_texAORaysDirectionOriginDepth@@3V?$Texture2D@I@@A", align 4
  %5 = load %"class.Texture2D<unsigned int>", %"class.Texture2D<unsigned int>"* @"\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A", align 4
  %6 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %7 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?g_scene@@3URaytracingAccelerationStructure@@A", align 4
  %8 = load %"class.RWTexture2D<float>", %"class.RWTexture2D<float>"* @"\01?g_outAORayHitDistance@@3V?$RWTexture2D@M@@A", align 4
  %9 = load %"class.RWTexture2D<float>", %"class.RWTexture2D<float>"* @"\01?g_outAOAmbientCoefficient@@3V?$RWTexture2D@M@@A", align 4
  %10 = load %cb, %cb* @cb, align 4
  %cb21 = call %dx.types.Handle @dx.op.createHandleForLib.cb(i32 160, %cb %10)  ; CreateHandleForLib(Resource)
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %11 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb21, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.i32 %11, 2
  %13 = shl i32 %12, 7
  %14 = udiv i32 %DispatchRaysIndex, %13
  %15 = extractvalue %dx.types.CBufRet.i32 %11, 3
  %16 = shl i32 %14, 7
  %17 = add i32 %16, 128
  %UMin18 = call i32 @dx.op.binary.i32(i32 40, i32 %17, i32 %15)  ; UMin(a,b)
  %18 = sub i32 %UMin18, %16
  %19 = shl i32 %18, 6
  %20 = mul i32 %13, %14
  %21 = sub i32 %DispatchRaysIndex, %20
  %22 = udiv i32 %21, %19
  %23 = mul i32 %19, %22
  %24 = sub i32 %21, %23
  %25 = shl i32 %22, 6
  %26 = add i32 %25, 64
  %UMin = call i32 @dx.op.binary.i32(i32 40, i32 %26, i32 %12)  ; UMin(a,b)
  %27 = sub i32 %UMin, %25
  %28 = udiv i32 %24, %27
  %29 = mul i32 %28, %27
  %30 = sub i32 %25, %29
  %.i022 = add i32 %30, %24
  %.i123 = add i32 %28, %16
  %31 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<unsigned int, 2> >"(i32 160, %"class.Texture2D<vector<unsigned int, 2> >" %3)  ; CreateHandleForLib(Resource)
  %TextureLoad19 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %31, i32 0, i32 %.i022, i32 %.i123, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %32 = extractvalue %dx.types.ResRet.i32 %TextureLoad19, 0
  %33 = extractvalue %dx.types.ResRet.i32 %TextureLoad19, 1
  %34 = and i32 %33, -129
  %.i026 = add i32 %32, %25
  %.i127 = add i32 %34, %16
  %35 = and i32 %33, 128
  %36 = icmp eq i32 %35, 0
  %37 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb21, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %48, label %40

; <label>:40                                      ; preds = %0
  %fold = add i32 %33, %16
  %41 = and i32 %fold, 1
  %42 = xor i32 %41, 1
  %43 = extractvalue %dx.types.CBufRet.i32 %37, 3
  %44 = icmp ne i32 %42, %43
  %45 = zext i1 %44 to i32
  %46 = shl i32 %.i026, 1
  %47 = or i32 %45, %46
  br label %48

; <label>:48                                      ; preds = %40, %0
  %srcRayIndexFullRes.0.i0 = phi i32 [ %47, %40 ], [ %.i026, %0 ]
  br i1 %36, label %49, label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"

; <label>:49                                      ; preds = %48
  %50 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<unsigned int>"(i32 160, %"class.Texture2D<unsigned int>" %4)  ; CreateHandleForLib(Resource)
  %TextureLoad16 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %50, i32 0, i32 %.i026, i32 %.i127, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %51 = extractvalue %dx.types.ResRet.i32 %TextureLoad16, 0
  %52 = and i32 %51, 255
  %53 = uitofp i32 %52 to float
  %54 = lshr i32 %51, 8
  %55 = and i32 %54, 255
  %56 = uitofp i32 %55 to float
  %.i029 = fmul fast float %53, 0x3F80101020000000
  %.i130 = fmul fast float %56, 0x3F80101020000000
  %.i031 = fadd fast float %.i029, -1.000000e+00
  %.i132 = fadd fast float %.i130, -1.000000e+00
  %FAbs11 = call float @dx.op.unary.f32(i32 6, float %.i031)  ; FAbs(value)
  %57 = fsub fast float 1.000000e+00, %FAbs11
  %FAbs10 = call float @dx.op.unary.f32(i32 6, float %.i132)  ; FAbs(value)
  %58 = fsub fast float %57, %FAbs10
  %59 = fsub fast float -0.000000e+00, %58
  %Saturate9 = call float @dx.op.unary.f32(i32 7, float %59)  ; Saturate(value)
  %.i033 = fcmp fast oge float %.i031, 0.000000e+00
  %.i134 = fcmp fast oge float %.i132, 0.000000e+00
  %60 = fsub fast float -0.000000e+00, %Saturate9
  %61 = select i1 %.i033, float %60, float %Saturate9
  %62 = select i1 %.i134, float %60, float %Saturate9
  %.i035 = fadd fast float %61, %.i031
  %.i136 = fadd fast float %62, %.i132
  %63 = call float @dx.op.dot3.f32(i32 55, float %.i035, float %.i136, float %58, float %.i035, float %.i136, float %58)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt14 = call float @dx.op.unary.f32(i32 25, float %63)  ; Rsqrt(value)
  %.i037 = fmul fast float %.i035, %Rsqrt14
  %.i138 = fmul fast float %.i136, %Rsqrt14
  %.i2 = fmul fast float %Rsqrt14, %58
  %64 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %6)  ; CreateHandleForLib(Resource)
  %TextureLoad15 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %64, i32 0, i32 %srcRayIndexFullRes.0.i0, i32 %.i127, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %65 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 0
  %66 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 1
  %67 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 2
  %68 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<unsigned int>"(i32 160, %"class.Texture2D<unsigned int>" %5)  ; CreateHandleForLib(Resource)
  %TextureLoad17 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %68, i32 0, i32 %srcRayIndexFullRes.0.i0, i32 %.i127, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %69 = extractvalue %dx.types.ResRet.i32 %TextureLoad17, 0
  %70 = and i32 %69, 255
  %71 = uitofp i32 %70 to float
  %72 = lshr i32 %69, 8
  %73 = and i32 %72, 255
  %74 = uitofp i32 %73 to float
  %.i039 = fmul fast float %71, 0x3F80101020000000
  %.i140 = fmul fast float %74, 0x3F80101020000000
  %.i041 = fadd fast float %.i039, -1.000000e+00
  %.i142 = fadd fast float %.i140, -1.000000e+00
  %FAbs8 = call float @dx.op.unary.f32(i32 6, float %.i041)  ; FAbs(value)
  %75 = fsub fast float 1.000000e+00, %FAbs8
  %FAbs = call float @dx.op.unary.f32(i32 6, float %.i142)  ; FAbs(value)
  %76 = fsub fast float %75, %FAbs
  %77 = fsub fast float -0.000000e+00, %76
  %Saturate = call float @dx.op.unary.f32(i32 7, float %77)  ; Saturate(value)
  %.i043 = fcmp fast oge float %.i041, 0.000000e+00
  %.i144 = fcmp fast oge float %.i142, 0.000000e+00
  %78 = fsub fast float -0.000000e+00, %Saturate
  %79 = select i1 %.i043, float %78, float %Saturate
  %80 = select i1 %.i144, float %78, float %Saturate
  %.i045 = fadd fast float %79, %.i041
  %.i146 = fadd fast float %80, %.i142
  %81 = call float @dx.op.dot3.f32(i32 55, float %.i045, float %.i146, float %76, float %.i045, float %.i146, float %76)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %81)  ; Rsqrt(value)
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb21, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %.i047 = fmul fast float %Rsqrt, 0x3F50624DE0000000
  %.i050 = fmul fast float %.i047, %.i045
  %.i151 = fmul fast float %.i047, %.i146
  %.i249 = fmul fast float %76, 0x3F50624DE0000000
  %.i252 = fmul fast float %.i249, %Rsqrt
  %.i053 = fadd fast float %.i050, %65
  %.i154 = fadd fast float %.i151, %66
  %.i255 = fadd fast float %.i252, %67
  %84 = getelementptr inbounds %struct.ShadowRayPayload, %struct.ShadowRayPayload* %1, i32 0, i32 0
  store float %83, float* %84, align 8
  %85 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %7)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.ShadowRayPayload(i32 157, %dx.types.Handle %85, i32 128, i32 -1, i32 0, i32 0, i32 0, float %.i053, float %.i154, float %.i255, float 0.000000e+00, float %.i037, float %.i138, float %.i2, float %83, %struct.ShadowRayPayload* nonnull %1)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %86 = load float, float* %84, align 8
  %87 = fcmp fast une float %86, 0.000000e+00
  br i1 %87, label %88, label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"

; <label>:88                                      ; preds = %49
  %89 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb21, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.i32 %89, 0
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

; <label>:92                                      ; preds = %88
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb21, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = fdiv fast float %86, %94
  %96 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb21, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %97 = extractvalue %dx.types.CBufRet.f32 %96, 1
  %98 = fmul fast float %95, %95
  %99 = fmul fast float %98, 0xBFF7154760000000
  %100 = fmul fast float %99, %97
  %Exp = call float @dx.op.unary.f32(i32 21, float %100)  ; Exp(value)
  br label %101

; <label>:101                                     ; preds = %92, %88
  %occlusionCoef.i.0 = phi float [ %Exp, %92 ], [ 1.000000e+00, %88 ]
  %102 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb21, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %103 = extractvalue %dx.types.CBufRet.f32 %102, 3
  %104 = fsub fast float 1.000000e+00, %103
  %105 = fmul fast float %104, %occlusionCoef.i.0
  %106 = fsub fast float 1.000000e+00, %105
  %107 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb21, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit", label %110

; <label>:110                                     ; preds = %101
  %111 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %2)  ; CreateHandleForLib(Resource)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %111, i32 0, i32 %srcRayIndexFullRes.0.i0, i32 %.i127, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %112 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %113 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1
  %114 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2
  %115 = extractvalue %dx.types.CBufRet.f32 %102, 2
  %116 = fmul fast float %112, 0x3FCB367A00000000
  %117 = fmul fast float %113, 0x3FE6E2EB20000000
  %118 = fadd fast float %116, %117
  %119 = fmul fast float %114, 0x3FB27BB300000000
  %120 = fadd fast float %118, %119
  %121 = fmul fast float %115, %105
  %122 = fmul fast float %121, %120
  %123 = fsub fast float 1.000000e+00, %122
  %124 = fdiv fast float %106, %123
  br label %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"

"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit": ; preds = %110, %101, %49, %48
  %tHit.0 = phi float [ 0.000000e+00, %48 ], [ %86, %49 ], [ %86, %101 ], [ %86, %110 ]
  %ambientCoef.0 = phi float [ -1.000000e+00, %48 ], [ 1.000000e+00, %49 ], [ %106, %101 ], [ %124, %110 ]
  %125 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<float>"(i32 160, %"class.RWTexture2D<float>" %9)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %125, i32 %srcRayIndexFullRes.0.i0, i32 %.i127, i32 undef, float %ambientCoef.0, float %ambientCoef.0, float %ambientCoef.0, float %ambientCoef.0, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %126 = fcmp fast une float %tHit.0, 0.000000e+00
  br i1 %126, label %130, label %127

; <label>:127                                     ; preds = %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"
  %128 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %cb21, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %129 = extractvalue %dx.types.CBufRet.f32 %128, 0
  br label %130

; <label>:130                                     ; preds = %127, %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit"
  %131 = phi float [ %129, %127 ], [ %tHit.0, %"\01?CalculateAO@@YAMAIAMV?$vector@I$01@@URay@@V?$vector@M$02@@@Z.exit" ]
  %132 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<float>"(i32 160, %"class.RWTexture2D<float>" %8)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %132, i32 %srcRayIndexFullRes.0.i0, i32 %.i127, i32 undef, float %131, float %131, float %131, float %131, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind
define void @"\01?ClosestHitShader@@YAXUShadowRayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z"(%struct.ShadowRayPayload* noalias nocapture %rayPayload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readnone %attr) #0 {
  %RayTCurrent = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1 = getelementptr inbounds %struct.ShadowRayPayload, %struct.ShadowRayPayload* %rayPayload, i32 0, i32 0
  store float %RayTCurrent, float* %1, align 4
  ret void
}

; Function Attrs: nounwind
define void @"\01?MissShader@@YAXUShadowRayPayload@@@Z"(%struct.ShadowRayPayload* noalias nocapture %rayPayload) #0 {
  %1 = getelementptr inbounds %struct.ShadowRayPayload, %struct.ShadowRayPayload* %rayPayload, i32 0, i32 0
  store float 0.000000e+00, float* %1, align 4
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.ShadowRayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.ShadowRayPayload*) #3

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.cb(i32, %cb) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32, %"class.Texture2D<vector<float, 4> >") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<AlignedHemisphereSample3D>"(i32, %"class.StructuredBuffer<AlignedHemisphereSample3D>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<unsigned int>"(i32, %"class.Texture2D<unsigned int>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<float>"(i32, %"class.RWTexture2D<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<unsigned int, 2> >"(i32, %"class.Texture2D<vector<unsigned int, 2> >") #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!22, !73}
!dx.entryPoints = !{!81, !83, !86, !88, !90}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, !17, !20, null}
!5 = !{!6, !8, !10, !12, !13, !14, !15}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?g_scene@@3URaytracingAccelerationStructure@@A", !"g_scene", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* @"\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A", !"g_texRayOriginPosition", i32 0, i32 7, i32 1, i32 2, i32 0, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 2, %"class.Texture2D<unsigned int>"* @"\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A", !"g_texRayOriginSurfaceNormalDepth", i32 0, i32 8, i32 1, i32 2, i32 0, !11}
!11 = !{i32 0, i32 5}
!12 = !{i32 3, %"class.Texture2D<unsigned int>"* @"\01?g_texAORaysDirectionOriginDepth@@3V?$Texture2D@I@@A", !"g_texAORaysDirectionOriginDepth", i32 0, i32 22, i32 1, i32 2, i32 0, !11}
!13 = !{i32 4, %"class.Texture2D<vector<unsigned int, 2> >"* @"\01?g_texAOSortedToSourceRayIndexOffset@@3V?$Texture2D@V?$vector@I$01@@@@A", !"g_texAOSortedToSourceRayIndexOffset", i32 0, i32 23, i32 1, i32 2, i32 0, !11}
!14 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* @"\01?g_texAOSurfaceAlbedo@@3V?$Texture2D@V?$vector@M$03@@@@A", !"g_texAOSurfaceAlbedo", i32 0, i32 24, i32 1, i32 2, i32 0, !9}
!15 = !{i32 6, %"class.StructuredBuffer<AlignedHemisphereSample3D>"* @"\01?g_sampleSets@@3V?$StructuredBuffer@UAlignedHemisphereSample3D@@@@A", !"g_sampleSets", i32 0, i32 4, i32 1, i32 12, i32 0, !16}
!16 = !{i32 1, i32 16}
!17 = !{!18, !19}
!18 = !{i32 0, %"class.RWTexture2D<float>"* @"\01?g_outAOAmbientCoefficient@@3V?$RWTexture2D@M@@A", !"g_outAOAmbientCoefficient", i32 0, i32 10, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!19 = !{i32 1, %"class.RWTexture2D<float>"* @"\01?g_outAORayHitDistance@@3V?$RWTexture2D@M@@A", !"g_outAORayHitDistance", i32 0, i32 15, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!20 = !{!21}
!21 = !{i32 0, %cb* @cb, !"cb", i32 0, i32 0, i32 1, i32 116, null}
!22 = !{i32 0, %struct.BuiltInTriangleIntersectionAttributes undef, !23, %struct.Ray undef, !25, %struct.RaytracingAccelerationStructure undef, !28, %"class.Texture2D<vector<float, 4> >" undef, !30, %"class.Texture2D<vector<float, 4> >::mips_type" undef, !33, %"class.Texture2D<unsigned int>" undef, !35, %"class.Texture2D<unsigned int>::mips_type" undef, !33, %"class.Texture2D<vector<unsigned int, 2> >" undef, !38, %"class.Texture2D<vector<unsigned int, 2> >::mips_type" undef, !33, %"class.RWTexture2D<float>" undef, !40, %struct.RTAOConstantBuffer undef, !41, %"class.StructuredBuffer<AlignedHemisphereSample3D>" undef, !59, %struct.AlignedHemisphereSample3D undef, !61, %struct.RayDesc undef, !64, %struct.ShadowRayPayload undef, !69, %cb undef, !71}
!23 = !{i32 8, !24}
!24 = !{i32 6, !"barycentrics", i32 3, i32 0, i32 7, i32 9}
!25 = !{i32 28, !26, !27}
!26 = !{i32 6, !"origin", i32 3, i32 0, i32 7, i32 9}
!27 = !{i32 6, !"direction", i32 3, i32 16, i32 7, i32 9}
!28 = !{i32 4, !29}
!29 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!30 = !{i32 20, !31, !32}
!31 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!32 = !{i32 6, !"mips", i32 3, i32 16}
!33 = !{i32 4, !34}
!34 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!35 = !{i32 8, !36, !37}
!36 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!37 = !{i32 6, !"mips", i32 3, i32 4}
!38 = !{i32 12, !36, !39}
!39 = !{i32 6, !"mips", i32 3, i32 8}
!40 = !{i32 4, !31}
!41 = !{i32 116, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!42 = !{i32 6, !"seed", i32 3, i32 0, i32 7, i32 5}
!43 = !{i32 6, !"numSamplesPerSet", i32 3, i32 4, i32 7, i32 5}
!44 = !{i32 6, !"numSampleSets", i32 3, i32 8, i32 7, i32 5}
!45 = !{i32 6, !"numPixelsPerDimPerSet", i32 3, i32 12, i32 7, i32 5}
!46 = !{i32 6, !"maxAORayHitTime", i32 3, i32 16, i32 7, i32 9}
!47 = !{i32 6, !"approximateInterreflections", i32 3, i32 20, i32 7, i32 4}
!48 = !{i32 6, !"diffuseReflectanceScale", i32 3, i32 24, i32 7, i32 9}
!49 = !{i32 6, !"minimumAmbientIllumination", i32 3, i32 28, i32 7, i32 9}
!50 = !{i32 6, !"maxTheoreticalAORayHitTime", i32 3, i32 32, i32 7, i32 9}
!51 = !{i32 6, !"useSortedRays", i32 3, i32 36, i32 7, i32 4}
!52 = !{i32 6, !"raytracingDim", i32 3, i32 40, i32 7, i32 5}
!53 = !{i32 6, !"applyExponentialFalloff", i32 3, i32 48, i32 7, i32 4}
!54 = !{i32 6, !"exponentialFalloffDecayConstant", i32 3, i32 52, i32 7, i32 9}
!55 = !{i32 6, !"doCheckerboardSampling", i32 3, i32 56, i32 7, i32 4}
!56 = !{i32 6, !"areEvenPixelsActive", i32 3, i32 60, i32 7, i32 4}
!57 = !{i32 6, !"spp", i32 3, i32 64, i32 7, i32 5}
!58 = !{i32 6, !"padding", i32 3, i32 80, i32 7, i32 9}
!59 = !{i32 16, !60}
!60 = !{i32 6, !"h", i32 3, i32 0}
!61 = !{i32 16, !62, !63}
!62 = !{i32 6, !"value", i32 3, i32 0, i32 7, i32 9}
!63 = !{i32 6, !"padding", i32 3, i32 12, i32 7, i32 5}
!64 = !{i32 32, !65, !66, !67, !68}
!65 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!66 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!67 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!68 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!69 = !{i32 4, !70}
!70 = !{i32 6, !"tHit", i32 3, i32 0, i32 7, i32 9}
!71 = !{i32 116, !72}
!72 = !{i32 6, !"cb", i32 3, i32 0}
!73 = !{i32 1, void ()* @"\01?RayGenShader@@YAXXZ", !74, void ()* @"\01?RayGenShader_sortedRays@@YAXXZ", !74, void (%struct.ShadowRayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?ClosestHitShader@@YAXUShadowRayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !77, void (%struct.ShadowRayPayload*)* @"\01?MissShader@@YAXUShadowRayPayload@@@Z", !80}
!74 = !{!75}
!75 = !{i32 1, !76, !76}
!76 = !{}
!77 = !{!75, !78, !79}
!78 = !{i32 2, !76, !76}
!79 = !{i32 0, !76, !76}
!80 = !{!75, !78}
!81 = !{null, !"", null, !4, !82}
!82 = !{i32 0, i64 65552}
!83 = !{void (%struct.ShadowRayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?ClosestHitShader@@YAXUShadowRayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !"\01?ClosestHitShader@@YAXUShadowRayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", null, null, !84}
!84 = !{i32 8, i32 10, i32 6, i32 4, i32 7, i32 8, i32 5, !85}
!85 = !{i32 0}
!86 = !{void (%struct.ShadowRayPayload*)* @"\01?MissShader@@YAXUShadowRayPayload@@@Z", !"\01?MissShader@@YAXUShadowRayPayload@@@Z", null, null, !87}
!87 = !{i32 8, i32 11, i32 6, i32 4, i32 5, !85}
!88 = !{void ()* @"\01?RayGenShader@@YAXXZ", !"\01?RayGenShader@@YAXXZ", null, null, !89}
!89 = !{i32 8, i32 7, i32 5, !85}
!90 = !{void ()* @"\01?RayGenShader_sortedRays@@YAXXZ", !"\01?RayGenShader_sortedRays@@YAXXZ", null, null, !89}

#endif

const unsigned char g_pRTAO[] = {
  0x44, 0x58, 0x42, 0x43, 0x75, 0x8e, 0xff, 0x85, 0x0d, 0xdb, 0xab, 0xf1,
  0xef, 0x07, 0x7a, 0x91, 0xb9, 0x82, 0xaf, 0xa3, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x2c, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x54, 0x04, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00,
  0x40, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0xd0, 0x01, 0x00, 0x00, 0x00, 0x63, 0x62, 0x00, 0x67, 0x5f, 0x73, 0x63,
  0x65, 0x6e, 0x65, 0x00, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x52, 0x61, 0x79,
  0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x52, 0x61, 0x79, 0x4f,
  0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x00,
  0x67, 0x5f, 0x74, 0x65, 0x78, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x73, 0x44,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x69, 0x67,
  0x69, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x00, 0x67, 0x5f, 0x74, 0x65,
  0x78, 0x41, 0x4f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x53,
  0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65,
  0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x00, 0x67, 0x5f, 0x74, 0x65,
  0x78, 0x41, 0x4f, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x6c,
  0x62, 0x65, 0x64, 0x6f, 0x00, 0x67, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
  0x65, 0x53, 0x65, 0x74, 0x73, 0x00, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x41,
  0x4f, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x65, 0x66,
  0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x00, 0x67, 0x5f, 0x6f, 0x75,
  0x74, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x48, 0x69, 0x74, 0x44, 0x69, 0x73,
  0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x01, 0x3f, 0x52, 0x61, 0x79, 0x47,
  0x65, 0x6e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x40, 0x40, 0x59, 0x41,
  0x58, 0x58, 0x5a, 0x00, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x53, 0x68,
  0x61, 0x64, 0x65, 0x72, 0x00, 0x01, 0x3f, 0x52, 0x61, 0x79, 0x47, 0x65,
  0x6e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x72, 0x74,
  0x65, 0x64, 0x52, 0x61, 0x79, 0x73, 0x40, 0x40, 0x59, 0x41, 0x58, 0x58,
  0x5a, 0x00, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x79,
  0x73, 0x00, 0x01, 0x3f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x48,
  0x69, 0x74, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x40, 0x40, 0x59, 0x41,
  0x58, 0x55, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x52, 0x61, 0x79, 0x50,
  0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x55, 0x42, 0x75, 0x69,
  0x6c, 0x74, 0x49, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65,
  0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x40, 0x40,
  0x40, 0x5a, 0x00, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x48, 0x69,
  0x74, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x00, 0x01, 0x3f, 0x4d, 0x69,
  0x73, 0x73, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x40, 0x40, 0x59, 0x41,
  0x58, 0x55, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x52, 0x61, 0x79, 0x50,
  0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x40, 0x5a, 0x00, 0x4d,
  0x69, 0x73, 0x73, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x9d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x63, 0x00, 0x07, 0x00,
  0xfd, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x63, 0x00, 0x07, 0x00, 0x36, 0x01, 0x00, 0x00,
  0x8b, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x63, 0x00, 0x0a, 0x00, 0x9c, 0x01, 0x00, 0x00, 0xc3, 0x01, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x60, 0x00, 0x0b, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xf8, 0x27, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00,
  0xfe, 0x09, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xe0, 0x27, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xf5, 0x09, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x1c, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xe4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x72, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x39, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x23, 0xf8,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x08, 0x72, 0x48, 0x87, 0x79, 0x08,
  0x07, 0x71, 0x60, 0x87, 0x72, 0x68, 0x03, 0x7a, 0x08, 0x87, 0x74, 0x60,
  0x87, 0x36, 0x18, 0x87, 0x70, 0x60, 0x07, 0x76, 0x98, 0x07, 0xc0, 0x1c,
  0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1d, 0xca, 0x61, 0x1e,
  0xe6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xca, 0x61, 0x1c, 0xd2, 0x61, 0x1e,
  0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0x21, 0x1c, 0xc8, 0x01, 0x30,
  0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68,
  0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78, 0x78,
  0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72, 0x60,
  0x87, 0x74, 0x68, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c,
  0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd2, 0xc1, 0x1d, 0xcc, 0x61, 0x1e,
  0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d,
  0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77, 0x78,
  0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80,
  0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c,
  0xd8, 0x61, 0x1e, 0xca, 0x01, 0x18, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1e,
  0xca, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xda, 0x60, 0x1e,
  0xe8, 0x21, 0x1c, 0xc6, 0x61, 0x1d, 0x00, 0x62, 0x1e, 0xe8, 0x21, 0x1c,
  0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1, 0x1c,
  0x00, 0x38, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73, 0x28,
  0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40,
  0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xa2, 0x1e,
  0xe6, 0xa1, 0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60,
  0x87, 0x79, 0x28, 0x07, 0x60, 0x83, 0x21, 0x04, 0x40, 0x02, 0x2c, 0x1b,
  0x8c, 0x41, 0x00, 0x16, 0x80, 0xda, 0x60, 0x10, 0xff, 0xff, 0xff, 0xff,
  0x3f, 0x00, 0x12, 0x50, 0x6d, 0x30, 0x8a, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa0, 0x36, 0x10, 0xc6, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80,
  0xb4, 0x81, 0x38, 0x20, 0xe0, 0x0c, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0xc2, 0x20, 0x0c, 0xc1, 0x04,
  0x41, 0x08, 0x26, 0x04, 0xc4, 0x84, 0xa0, 0x98, 0x10, 0x18, 0x13, 0x82,
  0x03, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00,
  0x32, 0x22, 0xc8, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84,
  0x04, 0x93, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c,
  0x0b, 0x84, 0xe4, 0x4c, 0x10, 0xec, 0xc2, 0x1c, 0x01, 0x18, 0x9c, 0x19,
  0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01, 0x02, 0xd2,
  0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34, 0xec, 0x14,
  0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x14, 0x98, 0x01, 0x18, 0x46,
  0x20, 0x86, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40, 0x0f, 0xf4, 0xa0, 0x1d,
  0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21, 0x1f, 0xe0, 0xa1, 0x1c,
  0x50, 0x00, 0x98, 0x49, 0x0c, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6,
  0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca,
  0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde,
  0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8,
  0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0x90, 0x40, 0x28, 0x90,
  0x61, 0x26, 0x34, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37,
  0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39,
  0x20, 0x05, 0x3e, 0xa8, 0x07, 0x77, 0x98, 0x87, 0x74, 0x38, 0x07, 0x77,
  0x28, 0x07, 0x72, 0x00, 0x83, 0x74, 0x70, 0x07, 0x7a, 0xf0, 0x03, 0x3d,
  0xd0, 0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87, 0x7c,
  0x80, 0x87, 0x72, 0x40, 0x01, 0x60, 0xa6, 0x6e, 0x1c, 0xd8, 0x21, 0x1c,
  0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e,
  0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e,
  0xd2, 0xe1, 0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d,
  0xe8, 0xc1, 0x0f, 0x90, 0x00, 0x40, 0x50, 0x62, 0x18, 0x41, 0x00, 0x66,
  0xa2, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a,
  0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52,
  0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e,
  0xa8, 0x07, 0x77, 0x98, 0x87, 0x74, 0x38, 0x07, 0x77, 0x28, 0x07, 0x72,
  0x00, 0x83, 0x74, 0x70, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x90, 0x03, 0x3f,
  0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87, 0x74, 0x80, 0x87, 0x79,
  0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07, 0x14, 0x00, 0x66, 0x4a,
  0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28,
  0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0,
  0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0xa8,
  0x07, 0x77, 0x98, 0x87, 0x74, 0x38, 0x07, 0x77, 0x28, 0x07, 0x72, 0x00,
  0x83, 0x74, 0x70, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x90, 0x03, 0x3f, 0x00,
  0x03, 0x3f, 0x40, 0xc2, 0x82, 0x41, 0x8d, 0x99, 0xb0, 0x71, 0x60, 0x87,
  0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x59, 0xb8, 0x05, 0x5a, 0x28, 0x07,
  0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03,
  0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0xf0, 0x03, 0x14, 0x0c, 0xe8,
  0x31, 0x8c, 0x30, 0x0c, 0x07, 0x06, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0x6b,
  0x0b, 0x62, 0x34, 0xc4, 0x10, 0x12, 0x0c, 0x22, 0x3d, 0x07, 0x11, 0x11,
  0x2c, 0xc0, 0x3c, 0x0b, 0x71, 0x77, 0x48, 0x88, 0x00, 0x66, 0x8a, 0x83,
  0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x83, 0x59, 0xa0, 0x07,
  0x79, 0xa8, 0x87, 0x71, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x20, 0x07,
  0x51, 0xa8, 0x07, 0x73, 0x30, 0x87, 0x72, 0x90, 0x07, 0x3e, 0x08, 0x05,
  0x76, 0x48, 0x87, 0x73, 0x70, 0x87, 0x72, 0x20, 0x07, 0x54, 0x28, 0x87,
  0x76, 0x48, 0x87, 0x79, 0x80, 0x07, 0x74, 0x28, 0x07, 0x79, 0x28, 0x87,
  0x59, 0x08, 0x87, 0x76, 0x80, 0x07, 0x76, 0x28, 0x87, 0x39, 0x20, 0x05,
  0x3f, 0x40, 0x81, 0x84, 0x26, 0x39, 0x30, 0xb8, 0x4c, 0x9a, 0x22, 0x4a,
  0x98, 0xfc, 0xb5, 0xd5, 0x50, 0xce, 0x69, 0xa4, 0x09, 0x68, 0xa6, 0x8d,
  0x2a, 0x0a, 0x22, 0x42, 0x11, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x83, 0xc1,
  0x00, 0xb0, 0x00, 0x0c, 0x00, 0x00, 0x40, 0xe5, 0x04, 0x21, 0x40, 0x81,
  0x85, 0x2e, 0x23, 0x00, 0x25, 0xc8, 0x90, 0xe6, 0x2e, 0x69, 0x8a, 0x28,
  0x61, 0xf2, 0xd9, 0x03, 0x18, 0x1c, 0x6b, 0x05, 0xb0, 0x14, 0xc0, 0x16,
  0x07, 0x18, 0x50, 0x30, 0x20, 0xce, 0x30, 0x82, 0x30, 0x1c, 0x1b, 0x48,
  0x53, 0x44, 0x09, 0x93, 0xbf, 0x51, 0xc8, 0x32, 0x89, 0x4d, 0x1b, 0x21,
  0x40, 0x63, 0x2c, 0x84, 0xd8, 0x4c, 0x44, 0x24, 0x11, 0xc2, 0x84, 0x38,
  0x8d, 0x36, 0x4d, 0x11, 0x12, 0x50, 0x13, 0x21, 0xa1, 0xc0, 0x43, 0x9f,
  0x32, 0x64, 0x3a, 0x20, 0x0a, 0x15, 0x21, 0xd3, 0xa1, 0xd1, 0x51, 0xc3,
  0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e,
  0x71, 0xdb, 0x88, 0x18, 0x0c, 0x06, 0x83, 0x39, 0x02, 0x84, 0x4c, 0xf7,
  0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81,
  0x82, 0x53, 0x21, 0x4a, 0x00, 0x14, 0x80, 0x52, 0x47, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc8, 0x6d,
  0x23, 0x02, 0x00, 0x00, 0x00, 0x0a, 0xb1, 0x02, 0xa0, 0x00, 0xc4, 0x2a,
  0xc3, 0x00, 0x00, 0x20, 0x57, 0x19, 0x06, 0x80, 0x01, 0xc1, 0x8a, 0x30,
  0x00, 0x90, 0xac, 0x0c, 0x00, 0x80, 0x89, 0x68, 0x05, 0x19, 0x00, 0x06,
  0x83, 0xc1, 0x60, 0x30, 0x20, 0xdb, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0xa3, 0x62, 0x30,
  0x18, 0x0c, 0x00, 0x45, 0xc1, 0x01, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x28, 0x57, 0x0e, 0x1c, 0x00, 0x05, 0x00, 0x98, 0x00, 0xb4, 0x2b,
  0x51, 0x06, 0x80, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x30, 0x18, 0x0c,
  0x06, 0x83, 0x41, 0x87, 0x7a, 0x37, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21,
  0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4, 0x23, 0xb7, 0x8d, 0x0a, 0x00, 0x00,
  0x00, 0x00, 0x14, 0xe5, 0x07, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x60, 0x59, 0x32, 0x00, 0x14, 0x00, 0x00, 0x18, 0x0c, 0x06, 0x03,
  0x13, 0x09, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x44, 0x2c, 0x03, 0x0a, 0x70,
  0x21, 0x63, 0x19, 0x50, 0x00, 0x03, 0x21, 0xcb, 0x80, 0x02, 0x4c, 0x48,
  0x59, 0x06, 0x14, 0x20, 0x40, 0xcc, 0x32, 0xa0, 0x00, 0x09, 0x72, 0x96,
  0x01, 0x05, 0x78, 0x10, 0xb4, 0x0c, 0x28, 0x40, 0x83, 0xa4, 0x03, 0x01,
  0x73, 0x04, 0xc1, 0x29, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x86,
  0x84, 0x48, 0xe4, 0x1c, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x57, 0x00, 0xeb,
  0x08, 0x49, 0x40, 0x44, 0x64, 0x10, 0x19, 0xcc, 0x11, 0x80, 0xc2, 0x14,
  0x00, 0x0d, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x86, 0x01, 0x00, 0xd3, 0x0c,
  0x00, 0x98, 0x69, 0x00, 0xc0, 0x4c, 0x03, 0x00, 0x66, 0x1b, 0x00, 0x30,
  0xcd, 0x00, 0x80, 0xf9, 0x06, 0x00, 0xcc, 0x37, 0x00, 0x60, 0xce, 0x01,
  0x00, 0xf3, 0x0e, 0x00, 0x60, 0xc8, 0xa3, 0x01, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x47, 0x03, 0x00, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x18, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x0c,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8,
  0x93, 0x06, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0x61, 0x03, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0xb8, 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xe0, 0x00, 0x08, 0x80, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x72, 0x00, 0x04, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x3a, 0x00,
  0x02, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f,
  0x1d, 0x00, 0x01, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x90, 0x27, 0x0f, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xb3, 0x07, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0xe4, 0xe9, 0x03, 0x20, 0x00, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x80, 0x02, 0x10, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x44, 0x01, 0x08,
  0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0xa4,
  0x00, 0x04, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x53, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0x0f, 0x2a, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x47, 0x15, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xc3, 0x0a, 0x40, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x71, 0x05, 0x20, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xc0, 0x02,
  0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x64, 0x01, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb2, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x1c,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x94, 0x40, 0x19, 0x14, 0x42, 0x31, 0x8c, 0x00, 0x14, 0x48, 0x39, 0x14,
  0x41, 0x49, 0x14, 0x44, 0x29, 0x14, 0x4b, 0xb9, 0x14, 0x4c, 0x61, 0x14,
  0x45, 0x79, 0x14, 0x7a, 0x40, 0xe1, 0x14, 0x4a, 0x01, 0x15, 0x52, 0x41,
  0x15, 0x58, 0xa1, 0x15, 0x5c, 0xe1, 0x15, 0x60, 0x40, 0x81, 0x06, 0x94,
  0x05, 0x61, 0x0b, 0x14, 0x10, 0x81, 0xaa, 0x23, 0x00, 0x64, 0x98, 0x01,
  0x20, 0xc4, 0x0c, 0x00, 0x25, 0x66, 0x00, 0x88, 0x31, 0x03, 0x40, 0x8d,
  0x19, 0x00, 0x7a, 0xcc, 0x00, 0x90, 0x64, 0x06, 0x80, 0x26, 0x33, 0x00,
  0x64, 0x99, 0x01, 0xa0, 0xcb, 0x0c, 0x00, 0x71, 0x66, 0x00, 0xe8, 0x33,
  0x03, 0x40, 0x85, 0x19, 0x00, 0xb2, 0xce, 0x00, 0xd0, 0x75, 0x06, 0x80,
  0x02, 0x33, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c,
  0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x00, 0x31, 0x98, 0x20,
  0x00, 0x63, 0xb0, 0x41, 0x18, 0x88, 0x09, 0x02, 0x40, 0x06, 0x1b, 0x84,
  0xc1, 0xe0, 0xc0, 0x96, 0x26, 0x36, 0x41, 0x00, 0xca, 0x60, 0xc3, 0x80,
  0x24, 0xc4, 0x04, 0x01, 0x30, 0x83, 0x09, 0x82, 0x00, 0xf0, 0x38, 0xfb,
  0x9a, 0x1b, 0x2b, 0x73, 0x2b, 0x9b, 0x20, 0x00, 0x67, 0xb0, 0x41, 0x58,
  0x8c, 0x0d, 0xc9, 0xc2, 0x34, 0xcb, 0x32, 0x38, 0xcb, 0x33, 0x41, 0x38,
  0x02, 0x5a, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x52, 0x61, 0x79, 0x4f, 0x72,
  0x69, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x13, 0x04, 0x00, 0x0d, 0x26, 0x08, 0x40, 0x1a, 0x4c, 0x10, 0x00, 0x35,
  0xd8, 0x20, 0x2c, 0xd5, 0x86, 0x64, 0x88, 0xa4, 0x65, 0x1a, 0xa8, 0xc5,
  0x9a, 0x20, 0x28, 0x02, 0xc1, 0xe0, 0xec, 0x8b, 0xae, 0x0c, 0x4f, 0x2a,
  0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x6d, 0xaa, 0x4e, 0xce, 0x2c,
  0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e,
  0x0e, 0x6d, 0x82, 0x00, 0xac, 0xc1, 0x04, 0x01, 0x60, 0x83, 0x0d, 0xc2,
  0xb2, 0x6d, 0x48, 0x28, 0x2c, 0x5b, 0xb4, 0x81, 0x5a, 0xb8, 0x09, 0x82,
  0x32, 0xf0, 0x3b, 0xfb, 0xa2, 0x2b, 0xc3, 0x0b, 0x7a, 0x92, 0x0a, 0xcb,
  0x9b, 0x23, 0x4a, 0x93, 0x2b, 0x1b, 0xa3, 0x4b, 0x7b, 0x73, 0x7b, 0x92,
  0x4b, 0x3b, 0x4b, 0x73, 0x23, 0x2a, 0x83, 0xa3, 0x43, 0x9b, 0x20, 0x00,
  0x6d, 0xb0, 0x21, 0x21, 0xbc, 0x6f, 0x01, 0x83, 0x81, 0x5a, 0xb8, 0x09,
  0x82, 0x43, 0x70, 0x0c, 0xce, 0xbe, 0xe8, 0xca, 0xf0, 0x82, 0x9e, 0xa6,
  0xde, 0xe4, 0xe8, 0xca, 0xc8, 0xa8, 0xde, 0xa6, 0xde, 0xea, 0xe4, 0xc6,
  0xca, 0xa4, 0xc2, 0xf2, 0x92, 0xdc, 0xc8, 0xca, 0xf0, 0x9e, 0xcc, 0xcc,
  0xe6, 0xca, 0xe8, 0x26, 0x08, 0x80, 0x1b, 0x6c, 0x48, 0x0c, 0x31, 0x18,
  0x83, 0x85, 0x0c, 0x06, 0x6a, 0xe1, 0x26, 0x08, 0x47, 0x41, 0xea, 0xec,
  0x8b, 0xae, 0x0c, 0x2f, 0xe8, 0x69, 0xaa, 0x4e, 0xce, 0x2c, 0x6c, 0xac,
  0x2c, 0x88, 0x4d, 0xac, 0x8c, 0xec, 0x6d, 0x82, 0x00, 0xbc, 0xc1, 0x86,
  0x64, 0x33, 0x83, 0x33, 0x58, 0xd0, 0x60, 0xa0, 0x16, 0x6b, 0x82, 0x40,
  0x21, 0x64, 0xce, 0xbe, 0xe6, 0xc2, 0xda, 0xe0, 0xd8, 0xca, 0xa6, 0xca,
  0xe8, 0xe6, 0x26, 0x08, 0x00, 0x1c, 0x6c, 0x10, 0x06, 0x67, 0x43, 0x92,
  0xa8, 0xc1, 0x1a, 0x2c, 0xc6, 0xc0, 0x06, 0x4b, 0x1b, 0x6c, 0x38, 0xa0,
  0xab, 0x0b, 0x83, 0x32, 0x48, 0x03, 0x37, 0x98, 0x20, 0x40, 0x06, 0xb3,
  0xb3, 0xaf, 0xb7, 0x3a, 0xba, 0xa0, 0xa7, 0xa0, 0x36, 0xb1, 0xb4, 0x32,
  0x37, 0xba, 0xa1, 0xb7, 0x32, 0x33, 0xb3, 0xb4, 0xb1, 0xb4, 0x32, 0x37,
  0xba, 0x09, 0x02, 0x10, 0x07, 0x13, 0x84, 0x5a, 0x08, 0x85, 0x0d, 0xcb,
  0x02, 0x07, 0x71, 0xb0, 0xc8, 0xc1, 0x40, 0xcd, 0xc1, 0x1c, 0xcc, 0x81,
  0x35, 0x41, 0x80, 0x0e, 0x56, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x41, 0x4f,
  0x52, 0x61, 0x79, 0x48, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
  0x63, 0x65, 0x13, 0x04, 0x40, 0x0e, 0x36, 0x2c, 0x43, 0x1d, 0xd8, 0xc1,
  0x72, 0x07, 0x03, 0x35, 0x07, 0x73, 0x30, 0x07, 0xd6, 0x06, 0x81, 0x0e,
  0xf0, 0x60, 0x82, 0x80, 0x25, 0x14, 0xc6, 0xc4, 0x26, 0x08, 0xc0, 0x1c,
  0x6c, 0x40, 0x16, 0x3d, 0xd8, 0x83, 0x65, 0x19, 0xf8, 0x00, 0xd8, 0x10,
  0xf4, 0xc1, 0x06, 0xe2, 0x0d, 0xf2, 0xc0, 0x0f, 0x80, 0x09, 0xc2, 0xd7,
  0x0a, 0x64, 0xc4, 0xc2, 0xe4, 0xf2, 0xc6, 0xca, 0xdc, 0xe8, 0xe4, 0xd2,
  0xc6, 0xe6, 0x36, 0x18, 0x49, 0x28, 0x10, 0xcb, 0x54, 0x6d, 0x10, 0x34,
  0x51, 0x98, 0x20, 0xd8, 0xc2, 0x2b, 0x4c, 0x10, 0x00, 0x3a, 0xa0, 0xf1,
  0x26, 0x97, 0x76, 0x96, 0xe6, 0xb6, 0xc1, 0x48, 0x4c, 0x81, 0x58, 0xa6,
  0x8a, 0x09, 0x59, 0x9a, 0x5c, 0xd9, 0x18, 0x5d, 0xda, 0x9b, 0xdb, 0x06,
  0x23, 0x41, 0x05, 0xc2, 0x99, 0xaa, 0x0d, 0x43, 0x29, 0x9c, 0x42, 0x2a,
  0x4c, 0x10, 0x82, 0x58, 0x60, 0x80, 0xb6, 0xc1, 0x48, 0x58, 0x81, 0x58,
  0x26, 0x63, 0x83, 0x60, 0xb4, 0xc2, 0x04, 0xc1, 0x10, 0x85, 0x09, 0x02,
  0x50, 0x07, 0x1b, 0x8c, 0x84, 0x15, 0x88, 0x65, 0xaa, 0x48, 0xb4, 0xa5,
  0xc1, 0xcd, 0x6d, 0x20, 0x12, 0x59, 0x20, 0x9c, 0x0d, 0x03, 0x2c, 0xc4,
  0xc2, 0x2c, 0x4c, 0x10, 0x0a, 0x57, 0xa0, 0x81, 0x16, 0xe6, 0x46, 0xc6,
  0x56, 0xb6, 0xc1, 0x48, 0x6c, 0x81, 0x58, 0xa6, 0x6d, 0x83, 0x60, 0xdc,
  0xc2, 0x04, 0x21, 0x21, 0x85, 0x0d, 0x46, 0xc2, 0x0a, 0xc4, 0x32, 0x6d,
  0x1b, 0x88, 0x44, 0x16, 0x08, 0x63, 0xc3, 0xa0, 0xe9, 0xc2, 0x2e, 0x4c,
  0x10, 0x90, 0x51, 0x98, 0x20, 0x34, 0xa6, 0xb0, 0x81, 0x48, 0x64, 0x81,
  0xd0, 0x36, 0x0c, 0x6c, 0xa0, 0x0b, 0xbf, 0x30, 0x41, 0x60, 0x4a, 0x61,
  0x82, 0xf0, 0x9c, 0xc2, 0x06, 0xc1, 0x88, 0x85, 0x09, 0x82, 0xa5, 0x0a,
  0x24, 0xe6, 0xca, 0xca, 0xc8, 0x36, 0x18, 0x49, 0x39, 0x10, 0xcb, 0xb4,
  0x11, 0x72, 0xab, 0x6b, 0x9b, 0x0a, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0x83,
  0x2a, 0x93, 0x9b, 0x2a, 0xa3, 0xdb, 0x60, 0x24, 0xe7, 0x40, 0x18, 0xd3,
  0xc6, 0xc6, 0xad, 0xae, 0x6d, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0xaa,
  0x8c, 0x6e, 0x6e, 0x83, 0x91, 0xa4, 0x03, 0xa1, 0x4d, 0x1b, 0x2b, 0xb7,
  0xba, 0x36, 0xa8, 0x34, 0xbc, 0x32, 0xb6, 0x39, 0xa8, 0x32, 0x39, 0xa2,
  0xb4, 0x36, 0xa8, 0x32, 0xb9, 0xa9, 0x32, 0xba, 0x0d, 0x46, 0xb2, 0x0e,
  0x04, 0x1b, 0x4c, 0x1b, 0x9f, 0xb6, 0x30, 0xbc, 0xa0, 0x27, 0xa9, 0xb0,
  0x3c, 0xa4, 0x34, 0x3a, 0xaa, 0xb4, 0xb6, 0xb2, 0x0d, 0x46, 0xd2, 0x0e,
  0x84, 0x33, 0x55, 0xdc, 0xc2, 0xe0, 0xe0, 0xe4, 0xde, 0xf0, 0xd2, 0xda,
  0xc2, 0xe8, 0xca, 0x92, 0xdc, 0xe8, 0xca, 0xe4, 0xe4, 0xca, 0xcc, 0xd8,
  0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc, 0xe6, 0x36, 0x18, 0xc9, 0x3b, 0x10,
  0xb0, 0x30, 0x19, 0xbc, 0xc8, 0xd2, 0xcc, 0xcc, 0xea, 0xe6, 0xca, 0xa4,
  0xca, 0xcc, 0xd8, 0xca, 0xc6, 0xe8, 0xc2, 0xdc, 0xc6, 0xca, 0xa6, 0xc6,
  0xc2, 0xd8, 0xca, 0x36, 0x18, 0x49, 0x3c, 0x10, 0x68, 0x30, 0x55, 0xd4,
  0xda, 0xd2, 0xdc, 0xd2, 0xda, 0xea, 0xda, 0x82, 0xda, 0xc4, 0xd2, 0xca,
  0xdc, 0xe8, 0x92, 0xd8, 0xd8, 0xea, 0xda, 0xd2, 0xdc, 0xc2, 0xe8, 0xd2,
  0xde, 0xdc, 0x36, 0x18, 0xc9, 0x3c, 0x10, 0xa5, 0x30, 0x55, 0xd4, 0xda,
  0xc2, 0xf0, 0xa8, 0xd0, 0xca, 0xde, 0xe4, 0xca, 0xe8, 0xd2, 0xc6, 0xc2,
  0xd8, 0x82, 0x9e, 0xa4, 0xc2, 0xf2, 0x90, 0xd2, 0xe8, 0xa8, 0xd2, 0xda,
  0xca, 0x26, 0x08, 0x80, 0x1d, 0x6c, 0x30, 0x92, 0x7a, 0x20, 0xec, 0x61,
  0xaa, 0xd8, 0xd4, 0xcd, 0x95, 0x4d, 0xbd, 0xc9, 0xd1, 0x95, 0x91, 0x49,
  0x85, 0xe5, 0xcd, 0x4d, 0x10, 0x80, 0x3b, 0xd8, 0x60, 0x24, 0xf8, 0x40,
  0xe4, 0xc3, 0x64, 0xb0, 0x91, 0x0b, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b,
  0x73, 0x3b, 0x23, 0x4a, 0x6b, 0x9b, 0x20, 0x00, 0x78, 0xb0, 0xc1, 0x48,
  0xf6, 0x81, 0xe0, 0x87, 0x69, 0xe3, 0x15, 0x06, 0x07, 0xc7, 0x96, 0x57,
  0x84, 0x07, 0xf7, 0xe6, 0x56, 0xe6, 0x46, 0x97, 0x16, 0xc6, 0x66, 0x14,
  0xc6, 0xc6, 0xf6, 0x66, 0x66, 0x36, 0x41, 0x00, 0xf2, 0x60, 0x83, 0x91,
  0xf8, 0x03, 0xf1, 0x0f, 0x93, 0xc1, 0xaf, 0x0c, 0x0f, 0xee, 0xcd, 0xad,
  0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0xcd, 0x28, 0x8c, 0x8d, 0xed, 0xcd, 0xcc,
  0x8c, 0xa8, 0x6c, 0x2c, 0x2c, 0x6f, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc,
  0x8d, 0x6e, 0x82, 0x00, 0xe8, 0xc1, 0x06, 0x23, 0x09, 0x09, 0x42, 0x24,
  0xa6, 0x8a, 0x16, 0xd9, 0xdb, 0x10, 0x5a, 0xd9, 0xd8, 0x5a, 0x99, 0x9c,
  0xd8, 0x5b, 0x98, 0x1c, 0xd9, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0x9a, 0xdb,
  0xd9, 0x04, 0x01, 0xd8, 0x83, 0x0d, 0x46, 0x42, 0x12, 0x44, 0x49, 0x4c,
  0x06, 0xa7, 0x30, 0xb9, 0xb2, 0x22, 0xbb, 0x32, 0x37, 0xa8, 0x34, 0xbc,
  0x32, 0xb6, 0xb9, 0xa0, 0x31, 0xba, 0x34, 0xbb, 0xb2, 0x09, 0x02, 0xc0,
  0x07, 0x1b, 0x8c, 0xe4, 0x24, 0x08, 0x94, 0x98, 0x0c, 0x0e, 0x73, 0x70,
  0x70, 0x13, 0x04, 0xa0, 0x0f, 0x36, 0x18, 0x89, 0x4a, 0x10, 0x2b, 0x31,
  0x6d, 0x3c, 0xe0, 0xc2, 0xc8, 0xc8, 0xd2, 0xdc, 0xce, 0x26, 0x08, 0x80,
  0x1f, 0x6c, 0x30, 0x92, 0x96, 0x20, 0x5c, 0x62, 0xaa, 0x36, 0x48, 0x7c,
  0x60, 0x0e, 0xe8, 0xa0, 0x0e, 0xec, 0xe0, 0x0e, 0xf0, 0x20, 0x0f, 0xf4,
  0x70, 0x0f, 0xfa, 0xd0, 0x0f, 0x20, 0x31, 0x12, 0x26, 0x91, 0x12, 0x2c,
  0xf1, 0x12, 0x13, 0x84, 0x29, 0x15, 0x36, 0x10, 0x09, 0x2b, 0x10, 0xcb,
  0x06, 0xc1, 0x91, 0x89, 0x09, 0x82, 0x84, 0x0a, 0x2c, 0xec, 0xc2, 0xd8,
  0xea, 0xca, 0x36, 0x18, 0x49, 0x4d, 0x10, 0xcb, 0x54, 0x6d, 0x30, 0x92,
  0x96, 0x20, 0xd8, 0x60, 0xda, 0x36, 0x0c, 0x8e, 0x4d, 0xdc, 0xc4, 0x04,
  0xe1, 0x16, 0x60, 0x81, 0xc6, 0x93, 0x5c, 0xda, 0x59, 0x9a, 0xdb, 0x06,
  0x23, 0xd1, 0x09, 0x62, 0x99, 0x2a, 0x12, 0x54, 0x4d, 0x69, 0x6e, 0x1b,
  0x8c, 0x84, 0x27, 0x08, 0x36, 0x98, 0x2a, 0x26, 0x44, 0x69, 0x72, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1b, 0x8c, 0xc4, 0x27, 0x08, 0x67, 0xaa,
  0x48, 0x50, 0x35, 0x85, 0xe1, 0x6d, 0x30, 0x12, 0xb0, 0x20, 0x4a, 0x61,
  0xaa, 0x36, 0x14, 0xf6, 0xb0, 0x13, 0x3d, 0xf1, 0x13, 0x61, 0x31, 0x41,
  0xe0, 0x58, 0x81, 0x04, 0x1d, 0x52, 0x1a, 0xdd, 0x06, 0x23, 0x21, 0x0b,
  0x62, 0x99, 0xaa, 0x0d, 0x82, 0x51, 0x16, 0x13, 0x84, 0x6b, 0x15, 0x36,
  0x10, 0xc9, 0x1e, 0x10, 0xcb, 0x06, 0x81, 0x0f, 0xd0, 0x62, 0x43, 0x18,
  0x2c, 0xa0, 0x30, 0x0a, 0xa4, 0xa0, 0x0a, 0xab, 0xe0, 0x0a, 0xaf, 0x40,
  0x0b, 0xb5, 0x80, 0x0b, 0xb9, 0xc0, 0x0b, 0xbd, 0x80, 0x0b, 0xbe, 0x00,
  0x0e, 0xe1, 0x80, 0x0b, 0xe2, 0x30, 0x0e, 0xe4, 0x00, 0x13, 0x31, 0x31,
  0x13, 0x34, 0x81, 0x13, 0x39, 0x21, 0x16, 0x63, 0x61, 0x16, 0x67, 0x91,
  0x16, 0x13, 0x84, 0x4d, 0xd9, 0x00, 0x6c, 0x18, 0x06, 0xb6, 0x60, 0x8b,
  0x0d, 0x41, 0x5b, 0x4c, 0x10, 0xb6, 0x65, 0x82, 0x20, 0x06, 0xcc, 0x86,
  0x81, 0x62, 0x0b, 0xb6, 0xd8, 0x30, 0x2c, 0x6c, 0xc1, 0x16, 0x1b, 0x86,
  0xb6, 0x88, 0x0b, 0xb9, 0x98, 0x20, 0x90, 0x41, 0xb3, 0x41, 0x68, 0x8b,
  0xb8, 0xd8, 0x90, 0x0c, 0x6b, 0xe1, 0x16, 0x6f, 0xe1, 0x16, 0x70, 0x31,
  0x17, 0x74, 0x51, 0x17, 0x04, 0x26, 0x08, 0xb8, 0x00, 0x0a, 0x1b, 0x84,
  0x05, 0x2f, 0x36, 0x14, 0xc0, 0x5d, 0x00, 0x7f, 0x90, 0x17, 0xa4, 0x85,
  0x80, 0x9f, 0x21, 0xb6, 0xb7, 0xb9, 0xb2, 0x39, 0x3a, 0xa4, 0x34, 0xba,
  0x29, 0xb4, 0x30, 0xb2, 0x32, 0x39, 0x20, 0xa0, 0xac, 0x20, 0xac, 0xaa,
  0x29, 0xb4, 0x30, 0xb2, 0xb7, 0x3b, 0xa9, 0xb0, 0x3c, 0xa8, 0xb0, 0x3c,
  0xb6, 0xb7, 0x30, 0x32, 0x20, 0xa0, 0x2a, 0xa1, 0xba, 0x34, 0x36, 0xba,
  0x24, 0x37, 0x2a, 0xb9, 0xb4, 0x30, 0xb7, 0x33, 0xb6, 0xb2, 0x24, 0x37,
  0xba, 0x32, 0xb9, 0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x20, 0x3a,
  0x3a, 0xb9, 0x34, 0xb1, 0x3a, 0xba, 0xb2, 0x39, 0x20, 0x20, 0x20, 0xad,
  0x0d, 0xc1, 0xb2, 0x01, 0xd1, 0xe4, 0x20, 0x31, 0x26, 0x6d, 0xe3, 0x8b,
  0x0d, 0x05, 0x5c, 0xec, 0x05, 0x00, 0xf4, 0x05, 0xcd, 0x20, 0xe0, 0xa7,
  0x29, 0x6d, 0x6e, 0x6e, 0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x0e, 0x08, 0x28,
  0x2b, 0x08, 0xab, 0x6a, 0x0a, 0x2d, 0x8c, 0xec, 0xed, 0x4e, 0x2a, 0x2c,
  0x0f, 0x2a, 0x2c, 0x8f, 0xed, 0x2d, 0x8c, 0x0c, 0x08, 0x08, 0x48, 0x6b,
  0x82, 0x00, 0xfc, 0xc1, 0x06, 0x43, 0x03, 0x8d, 0xc4, 0xd8, 0xf8, 0x62,
  0x43, 0x41, 0x17, 0x7f, 0x01, 0x00, 0xa1, 0xc1, 0x2a, 0xe0, 0x47, 0x2a,
  0x2c, 0xef, 0xa8, 0xcc, 0x6d, 0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x0e, 0x08,
  0x28, 0x2b, 0x08, 0x0b, 0x4b, 0x6b, 0x03, 0xa1, 0x4d, 0x1b, 0x5f, 0x6c,
  0x28, 0xd6, 0x62, 0x34, 0x00, 0x80, 0x34, 0x08, 0x06, 0x01, 0x3f, 0x52,
  0x61, 0x79, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f,
  0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x79, 0x73, 0x40, 0x40,
  0x59, 0x41, 0x58, 0x58, 0x5a, 0x1b, 0x8a, 0xb7, 0x30, 0x0d, 0x00, 0x20,
  0x8d, 0x2a, 0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
  0x53, 0x82, 0xa0, 0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda,
  0x9b, 0xdb, 0x94, 0x80, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17, 0xc6, 0x66,
  0x57, 0x26, 0x37, 0x25, 0x30, 0xea, 0x90, 0xe1, 0xb9, 0xcc, 0xa1, 0x85,
  0x91, 0x95, 0xc9, 0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09, 0x92, 0x32,
  0x64, 0x78, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
  0x53, 0x02, 0x3f, 0xa8, 0x44, 0x86, 0xe7, 0x42, 0x97, 0x07, 0x57, 0x16,
  0xe4, 0xe6, 0xf6, 0x46, 0x17, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x37, 0x45,
  0x48, 0x8b, 0xba, 0xa8, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97,
  0x07, 0xf5, 0x96, 0xe6, 0x46, 0x37, 0x37, 0xa5, 0xc8, 0x8b, 0xbe, 0x08,
  0x0d, 0xd2, 0x30, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07,
  0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87,
  0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87,
  0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x36, 0x01, 0x00, 0x00, 0xe6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x17, 0xb7, 0x5d, 0x0d, 0x66, 0x10, 0xf8, 0x35, 0xd3, 0xf3, 0xf9, 0x14,
  0x1d, 0x26, 0x97, 0xe5, 0x40, 0x60, 0x36, 0x88, 0xad, 0x4e, 0xd1, 0x61,
  0xf2, 0xfb, 0x2e, 0x0d, 0xe7, 0xa1, 0xe1, 0x3c, 0xfb, 0x1d, 0x26, 0x03,
  0x81, 0x40, 0xad, 0x49, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x01, 0x58,
  0xcb, 0x51, 0x51, 0x44, 0x34, 0x93, 0x5f, 0xdc, 0x76, 0x05, 0xec, 0x41,
  0xe0, 0x77, 0xfe, 0xd2, 0xcb, 0x78, 0x69, 0x38, 0xff, 0x94, 0xa7, 0xcf,
  0x69, 0x37, 0xf4, 0x3d, 0x4f, 0xd3, 0xd3, 0x6f, 0x37, 0x10, 0x38, 0xb3,
  0xfe, 0x48, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97, 0x65, 0x44, 0xa0, 0xf5,
  0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7, 0x1c, 0xd8, 0x24, 0xc1, 0x66, 0x40,
  0x20, 0x10, 0x18, 0x2c, 0x02, 0x54, 0x08, 0xfc, 0xce, 0x5f, 0x7a, 0x19,
  0x1f, 0x7c, 0x4e, 0xdf, 0x72, 0x7a, 0x99, 0x4c, 0x7d, 0x4f, 0xdf, 0x75,
  0xf9, 0xb8, 0x2c, 0x0d, 0xe7, 0x93, 0x6e, 0x72, 0x19, 0xff, 0x34, 0x9b,
  0xe7, 0x65, 0x3a, 0x10, 0x38, 0xb3, 0xfe, 0x48, 0xd4, 0x32, 0x9e, 0x5e,
  0x97, 0x97, 0x65, 0x44, 0xa0, 0xf5, 0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7,
  0x1c, 0x98, 0x24, 0xc1, 0x62, 0x40, 0x20, 0x10, 0x18, 0xb4, 0x04, 0x41,
  0x08, 0xec, 0xc2, 0x0c, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x8a, 0x00, 0x81,
  0x58, 0x01, 0xcc, 0x97, 0xa6, 0x88, 0x12, 0x26, 0x9f, 0x3d, 0x80, 0xc1,
  0xb1, 0x56, 0x00, 0x4b, 0x01, 0x6c, 0x71, 0x80, 0xa1, 0x14, 0xaa, 0xc0,
  0x4f, 0x1a, 0xce, 0x1f, 0xcb, 0xee, 0x29, 0x3a, 0x4c, 0x2e, 0xcb, 0x81,
  0xc0, 0x6c, 0x10, 0x8b, 0xd5, 0x9a, 0xc5, 0x35, 0x5c, 0xbe, 0xf3, 0xf8,
  0x11, 0x60, 0x6d, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x83, 0x5f, 0xdc,
  0x76, 0x85, 0x88, 0x02, 0x19, 0xef, 0x7a, 0xc3, 0x5d, 0x63, 0x79, 0x39,
  0x4c, 0x2f, 0x23, 0xc3, 0x6e, 0x32, 0xbb, 0x6c, 0x7c, 0xcb, 0x99, 0x69,
  0xb1, 0x6b, 0xcc, 0x0e, 0xcf, 0xe7, 0x2e, 0x6a, 0x19, 0x4f, 0xaf, 0xcb,
  0xcb, 0x32, 0x22, 0xcf, 0x5e, 0x1e, 0xd3, 0xdf, 0x72, 0x5e, 0xdd, 0x3d,
  0x4f, 0x9f, 0xdd, 0x65, 0x32, 0x28, 0xed, 0xa6, 0xb3, 0x40, 0x32, 0x1f,
  0xc8, 0x57, 0x20, 0x71, 0x40, 0xc6, 0xbb, 0xde, 0x70, 0xd7, 0x58, 0x5e,
  0x0e, 0xd3, 0xcb, 0xc8, 0xb0, 0x9b, 0xcc, 0x2e, 0x1b, 0xdf, 0x72, 0x66,
  0x5a, 0xec, 0x1a, 0xb3, 0xc3, 0xf3, 0xb9, 0x4b, 0x7a, 0xa5, 0x96, 0xf1,
  0xf4, 0xba, 0xbc, 0x2c, 0x23, 0xf2, 0xcc, 0xec, 0x77, 0x98, 0xee, 0x2b,
  0x80, 0x37, 0x08, 0xfc, 0xce, 0xdf, 0xf9, 0xb8, 0xec, 0x2e, 0x03, 0x81,
  0xb3, 0xaa, 0x34, 0x9c, 0xa7, 0xcb, 0xc3, 0xe3, 0xb4, 0xfb, 0x1c, 0x1c,
  0x8f, 0xcb, 0xec, 0xb2, 0x3c, 0x4c, 0x4f, 0xbf, 0xdd, 0x53, 0xba, 0xbc,
  0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0x20, 0x30, 0x58, 0x07, 0x6d, 0x10, 0xf8,
  0x9d, 0xbf, 0xef, 0x3a, 0x3d, 0xf8, 0x94, 0x86, 0xf3, 0xc8, 0x34, 0x9d,
  0x98, 0x9e, 0xd3, 0xc3, 0xee, 0x71, 0x19, 0x08, 0x9c, 0x59, 0x7f, 0x24,
  0xe9, 0x95, 0x5a, 0xc6, 0xd3, 0xeb, 0xf2, 0xb2, 0x8c, 0x08, 0x6c, 0x02,
  0x81, 0x41, 0x8b, 0x78, 0x86, 0xcb, 0x77, 0x1e, 0x9f, 0x6a, 0x80, 0x08,
  0xf3, 0x8b, 0xdb, 0xae, 0x82, 0x3c, 0x08, 0xfc, 0xce, 0x5f, 0x7a, 0x19,
  0x1f, 0x7c, 0x4e, 0xeb, 0x72, 0x73, 0x78, 0x5c, 0x0e, 0xb2, 0xc5, 0x65,
  0xf2, 0x1b, 0x08, 0x9c, 0x59, 0x7f, 0x24, 0x6a, 0x19, 0x4f, 0xaf, 0xcb,
  0xcb, 0x32, 0x22, 0xd0, 0xfa, 0x23, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e,
  0x6c, 0x92, 0x60, 0x33, 0x20, 0x10, 0x08, 0x0c, 0x5a, 0x86, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0xb0, 0x93, 0x13, 0x11,
  0x7e, 0x71, 0xdb, 0xf5, 0x61, 0x07, 0x64, 0xbc, 0xeb, 0x0d, 0x77, 0x8d,
  0xe5, 0xe5, 0x30, 0xbd, 0x8c, 0x0c, 0xbb, 0xc9, 0xec, 0xb2, 0xf1, 0x2d,
  0x67, 0xa6, 0xc5, 0xae, 0x31, 0x3b, 0x3c, 0x9f, 0xbb, 0xa8, 0x65, 0x3c,
  0xbd, 0x2e, 0x2f, 0xcb, 0x88, 0xbc, 0xba, 0x7b, 0x9e, 0x3e, 0xbb, 0xcb,
  0x64, 0x50, 0xda, 0x4d, 0xf7, 0x19, 0x46, 0x35, 0x5c, 0xbe, 0xf3, 0xf8,
  0x13, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0x17,
  0x03, 0x2d, 0x04, 0x7e, 0x43, 0xf6, 0x7b, 0x5e, 0x9e, 0xd3, 0x91, 0x69,
  0xfa, 0x14, 0x1d, 0x26, 0x97, 0xe5, 0x40, 0x60, 0x36, 0x88, 0xad, 0x4e,
  0xd1, 0x61, 0xf2, 0xfb, 0x2e, 0x0d, 0xe7, 0xa1, 0xe1, 0x3c, 0xfb, 0x1d,
  0x26, 0x03, 0x81, 0x55, 0x61, 0x3d, 0xcd, 0xa6, 0x27, 0xdd, 0x54, 0x79,
  0x3a, 0xec, 0x3e, 0xb3, 0xcb, 0x49, 0x37, 0xbd, 0x2c, 0x9f, 0x97, 0xc7,
  0xf4, 0xf4, 0xdb, 0x1d, 0xa4, 0xd3, 0xe5, 0x69, 0x71, 0x9d, 0x5e, 0x9e,
  0x03, 0x81, 0x40, 0xad, 0x69, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20,
  0x0d, 0x10, 0x61, 0x3e, 0x72, 0xdb, 0xf6, 0xb0, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00,
  0x02, 0xe6, 0x23, 0xb7, 0x6d, 0x1e, 0x7f, 0x30, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x9f, 0x13, 0x95,
  0x48, 0xe0, 0x4b, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01,
  0x02, 0xd2, 0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34,
  0xec, 0x14, 0x51, 0xc2, 0x44, 0x45, 0x44, 0x09, 0xd8, 0x41, 0xe0, 0x77,
  0xfe, 0xd2, 0xcb, 0x78, 0x69, 0x38, 0xff, 0x94, 0xa7, 0xcf, 0x69, 0xf7,
  0xb4, 0x2e, 0x37, 0x87, 0xc7, 0x65, 0xe7, 0x5b, 0xde, 0x0e, 0xb3, 0x89,
  0x65, 0x38, 0x1d, 0x0d, 0x04, 0xce, 0xac, 0x3f, 0x12, 0xb5, 0x8c, 0xa7,
  0xd7, 0xe5, 0x65, 0x19, 0x11, 0x98, 0x04, 0x02, 0x83, 0x85, 0x40, 0x0a,
  0x81, 0xdf, 0xf9, 0x3b, 0x0f, 0xb7, 0xe1, 0xec, 0xf2, 0xb4, 0x4c, 0x9f,
  0x03, 0x81, 0x33, 0xeb, 0x8f, 0x34, 0xa5, 0xcb, 0xeb, 0x63, 0x7a, 0x5d,
  0x5e, 0x26, 0x0b, 0xeb, 0x66, 0x73, 0x59, 0x0e, 0xac, 0x06, 0xd9, 0xe9,
  0xb3, 0xbb, 0x4c, 0x46, 0x96, 0xdb, 0xe9, 0x39, 0x1c, 0x5d, 0x96, 0x97,
  0xa7, 0xe1, 0x36, 0x9c, 0x5d, 0x9e, 0x11, 0x81, 0x40, 0x20, 0x30, 0x58,
  0x06, 0x71, 0x10, 0xf8, 0x9d, 0xbf, 0xef, 0x3a, 0x3d, 0xf8, 0x0c, 0xb6,
  0xc5, 0xe9, 0xb2, 0x9b, 0x3e, 0x7c, 0x97, 0xcd, 0xe6, 0xf4, 0x38, 0x5d,
  0x76, 0xd3, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0x92, 0x5e, 0xa9, 0x65, 0x3c,
  0xbd, 0x2e, 0x2f, 0xcb, 0x88, 0xc0, 0x26, 0x10, 0x18, 0xac, 0x81, 0x3a,
  0x08, 0xfc, 0xce, 0x5f, 0x7a, 0x19, 0x1f, 0x7c, 0x4a, 0xc3, 0xf9, 0x39,
  0x31, 0x2d, 0x2f, 0x8f, 0xe9, 0xe9, 0xb7, 0xfb, 0x29, 0x4f, 0x9f, 0xd3,
  0x6e, 0x62, 0x19, 0x4e, 0x47, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x44, 0x2d,
  0xe3, 0xe9, 0x75, 0x79, 0x59, 0x46, 0x04, 0x26, 0x81, 0xc0, 0xa0, 0x55,
  0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0x44, 0xe9,
  0x00, 0x83, 0x5f, 0xdc, 0xb6, 0x41, 0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf,
  0x10, 0x06, 0x20, 0x60, 0x5f, 0xad, 0xb7, 0xce, 0x77, 0xdb, 0xb6, 0xb1,
  0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33,
  0x2c, 0xc4, 0xe7, 0x44, 0x25, 0x12, 0xf8, 0x42, 0x60, 0x14, 0xce, 0x70,
  0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x17, 0xc7, 0x1e,
  0x90, 0xf1, 0xae, 0x37, 0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32, 0x32,
  0xec, 0x26, 0xb3, 0xcb, 0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6, 0xec,
  0xf0, 0x7c, 0xee, 0xa2, 0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0xf2,
  0xec, 0xe5, 0x31, 0xfd, 0x2d, 0xe7, 0x99, 0xd9, 0xef, 0x30, 0x9d, 0x05,
  0xa2, 0xf9, 0x40, 0xbe, 0xea, 0x50, 0x05, 0x32, 0xde, 0xf5, 0x86, 0xbb,
  0xc6, 0xf2, 0x72, 0x98, 0x5e, 0x46, 0x86, 0xdd, 0x64, 0x76, 0xd9, 0xf8,
  0x96, 0x33, 0xd3, 0x62, 0xd7, 0x98, 0x1d, 0x9e, 0xcf, 0x5d, 0x53, 0xba,
  0xbc, 0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0xb2, 0xb0, 0x6e, 0x36, 0x97, 0xe5,
  0xbc, 0x20, 0x3b, 0x7d, 0x76, 0x97, 0xc9, 0xc8, 0x72, 0x3b, 0x3d, 0x87,
  0xa3, 0xcb, 0xf2, 0xf2, 0x34, 0xdc, 0x86, 0xb3, 0xcb, 0x33, 0xa2, 0xaf,
  0x16, 0xc0, 0x20, 0xf0, 0x93, 0x86, 0xf3, 0xc7, 0xb2, 0x7b, 0x8a, 0x0e,
  0x93, 0xcb, 0xf2, 0xef, 0xfc, 0x2d, 0xa7, 0x97, 0xc9, 0xd2, 0x70, 0x7e,
  0x0e, 0x04, 0x66, 0x83, 0x58, 0xac, 0xd6, 0x26, 0xb6, 0xe1, 0xf2, 0x9d,
  0xc7, 0x1f, 0x10, 0xe9, 0x01, 0x26, 0xe1, 0x58, 0x01, 0x4c, 0x12, 0x9b,
  0x81, 0xb8, 0x7c, 0xe4, 0xb6, 0x01, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x13, 0x04, 0x4e, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x04, 0x98, 0x01, 0x28, 0xbb, 0x02, 0x16, 0x28,
  0xc2, 0x80, 0x72, 0x2b, 0x99, 0x12, 0x15, 0x28, 0xff, 0x81, 0x1a, 0x28,
  0x8d, 0x12, 0x29, 0x40, 0x40, 0x40, 0xfc, 0x83, 0x32, 0x0c, 0x28, 0x43,
  0x81, 0xd2, 0x2b, 0x6d, 0xd6, 0xd3, 0x7e, 0x82, 0xb2, 0x14, 0x28, 0x5d,
  0x81, 0x02, 0x14, 0x28, 0x15, 0x32, 0x95, 0x43, 0x09, 0x8c, 0x00, 0x94,
  0x07, 0x0d, 0xc6, 0x08, 0x48, 0xd6, 0x2f, 0xd5, 0x6f, 0x8c, 0xa0, 0x35,
  0xe7, 0x9c, 0xf7, 0xc6, 0x08, 0xde, 0x99, 0x34, 0xd1, 0x6e, 0x8c, 0x20,
  0x24, 0xc1, 0x10, 0xf4, 0xc6, 0x08, 0x40, 0x10, 0x04, 0x41, 0x50, 0x18,
  0x23, 0x60, 0x5f, 0x1a, 0x9e, 0x7f, 0x61, 0x8c, 0x20, 0x0d, 0x6f, 0x1f,
  0xfe, 0xc6, 0x08, 0xf6, 0xb1, 0xe4, 0xd5, 0x5f, 0x18, 0x23, 0x00, 0x49,
  0xd4, 0xd4, 0xc7, 0x60, 0x8c, 0x60, 0x8f, 0xd5, 0x78, 0xff, 0x85, 0x31,
  0x02, 0xd8, 0x67, 0xe7, 0xf2, 0x1b, 0x23, 0xc8, 0xf5, 0xd2, 0x9d, 0xbf,
  0x31, 0x02, 0x9c, 0xbd, 0xcf, 0xdc, 0x1b, 0x23, 0xd0, 0x59, 0x73, 0x4e,
  0xbf, 0x31, 0x02, 0x10, 0x04, 0x41, 0xfc, 0x17, 0xc6, 0x08, 0x40, 0x10,
  0x04, 0xf1, 0x6f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x33, 0x11, 0x1c, 0x20,
  0x06, 0xa4, 0x40, 0xf4, 0x30, 0x19, 0x84, 0x0f, 0x86, 0x41, 0xfc, 0x90,
  0x18, 0xe4, 0x0f, 0x86, 0x41, 0x20, 0x11, 0x18, 0xa4, 0x0f, 0x8f, 0x41,
  0xfc, 0xf0, 0x18, 0xa4, 0x0f, 0x97, 0x31, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0xa6, 0x90, 0x0e, 0x70, 0x10, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0x01, 0x1d, 0xc8, 0x43, 0x1b, 0x74, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x40, 0x07, 0xf3, 0xe0, 0x06, 0xdf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0xb8, 0x02, 0x3a, 0xcc, 0x41, 0x32, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06,
  0xa0, 0x00, 0x0f, 0x73, 0x10, 0x88, 0xc3, 0x20, 0xd8, 0x81, 0x1d, 0xd8,
  0x81, 0x1d, 0x8c, 0x26, 0x04, 0x40, 0x05, 0x71, 0xa0, 0x17, 0x0c, 0xaa,
  0x86, 0x70, 0xc0, 0x0a, 0xe8, 0x40, 0x2f, 0x18, 0x54, 0x19, 0xe8, 0x80,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xe0, 0x06, 0x20, 0x11, 0x07, 0x81,
  0x19, 0x64, 0x20, 0x1f, 0x23, 0xca, 0x40, 0x3e, 0x26, 0x6c, 0xf0, 0x31,
  0x81, 0x83, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0xc0, 0x01, 0x49,
  0xc0, 0x83, 0x60, 0x5d, 0x10, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x80, 0x03, 0x93, 0x90, 0x87, 0xc1, 0x84, 0x20, 0x3e, 0xb6, 0x06, 0x41,
  0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x0e, 0x52, 0x42, 0x1e,
  0x82, 0xe1, 0x08, 0x24, 0x0c, 0x86, 0x6f, 0x38, 0x02, 0x11, 0x83, 0xe1,
  0xb3, 0x37, 0x18, 0xe2, 0x33, 0xdd, 0x10, 0x10, 0xc3, 0x74, 0x83, 0x50,
  0x0c, 0x26, 0x34, 0xf0, 0x31, 0xa1, 0x81, 0xcf, 0x88, 0xc1, 0x02, 0x80,
  0x20, 0x18, 0xd8, 0x81, 0x4b, 0xb0, 0x82, 0x10, 0x28, 0x42, 0xa0, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x1c, 0xc8, 0x04, 0x2b, 0x04, 0x46,
  0x04, 0xf2, 0x31, 0x42, 0x90, 0x8f, 0x0d, 0x8e, 0x7c, 0x86, 0x23, 0xae,
  0x36, 0x70, 0xbe, 0x59, 0x86, 0x60, 0x09, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0x00, 0x15, 0x58, 0x82, 0x16, 0xd2, 0x60, 0xc4, 0xa0, 0x01, 0x40,
  0x10, 0x0c, 0xf2, 0x80, 0x26, 0x68, 0x21, 0x18, 0x09, 0x32, 0x18, 0x83,
  0x5b, 0xb8, 0x85, 0x5b, 0xb8, 0x85, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x36,
  0xf0, 0x09, 0x5d, 0x48, 0x83, 0x94, 0x18, 0x4d, 0x08, 0x80, 0xe1, 0x86,
  0x20, 0x25, 0xc0, 0x60, 0x96, 0x41, 0x11, 0x82, 0x59, 0x82, 0x61, 0xa0,
  0x02, 0x18, 0x19, 0x84, 0x46, 0x84, 0x81, 0x8a, 0xe1, 0x5f, 0x10, 0x77,
  0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x80, 0x0d, 0xc6, 0xe2, 0x17,
  0xdc, 0x20, 0x25, 0x46, 0x13, 0x02, 0xc1, 0xa0, 0x3e, 0x90, 0x8f, 0x41,
  0x7e, 0x20, 0x1f, 0x83, 0xfe, 0x40, 0x3e, 0x36, 0xa0, 0x02, 0x7c, 0x6c,
  0x40, 0x05, 0xf8, 0xd8, 0x80, 0x0a, 0xf0, 0xb1, 0x2a, 0x90, 0x8f, 0x0d,
  0x95, 0x7c, 0x4c, 0x08, 0xe2, 0x63, 0xc6, 0x25, 0x1f, 0xd3, 0x0a, 0xf9,
  0x98, 0x10, 0xc4, 0xc7, 0x10, 0x4e, 0x3e, 0xa6, 0x70, 0xf2, 0x31, 0x21,
  0x88, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0xd8, 0xc1, 0x5b, 0xb4,
  0xc3, 0x41, 0x04, 0x07, 0x11, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01,
  0x1c, 0xcc, 0x45, 0x3b, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1, 0x90, 0x8f,
  0x0d, 0x85, 0x7c, 0x4c, 0x10, 0x03, 0xf9, 0x98, 0x40, 0x06, 0xf2, 0x31,
  0x21, 0x88, 0x8f, 0x11, 0x67, 0x20, 0x1f, 0x3b, 0xcc, 0x40, 0x3e, 0x26,
  0x04, 0xf1, 0xb1, 0x24, 0x0d, 0xe4, 0x63, 0xc9, 0x1a, 0xc8, 0xc7, 0x84,
  0x20, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xc0, 0x06, 0xa2, 0xe1,
  0x0f, 0xad, 0xb0, 0x16, 0xa3, 0x09, 0xc1, 0x50, 0x60, 0x90, 0x0f, 0x50,
  0x81, 0x00, 0x15, 0x0c, 0x53, 0xb1, 0x40, 0x50, 0xc5, 0x42, 0x41, 0x65,
  0x08, 0x52, 0x87, 0x20, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x80, 0x0a,
  0x7e, 0x61, 0x12, 0xbb, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x79,
  0x60, 0x1a, 0x26, 0x11, 0xd4, 0xc5, 0x20, 0xa4, 0x44, 0x4a, 0xa4, 0x44,
  0x4a, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x42,
  0x21, 0x8a, 0x54, 0xa0, 0xc0, 0x05, 0x83, 0x32, 0x03, 0x1f, 0xe4, 0x63,
  0x46, 0x3e, 0xc8, 0xc7, 0x0c, 0x7d, 0x90, 0x8f, 0x0d, 0xfa, 0x00, 0x1f,
  0x1b, 0xf6, 0x01, 0x3e, 0x36, 0xf0, 0x03, 0x7c, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x00, 0x0e, 0x6e, 0x63, 0x2f, 0x86, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x80, 0x03, 0xdc, 0xe0, 0x8b, 0x61, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0xe0, 0x20, 0x37, 0xfa, 0x62, 0x30, 0x61, 0x80, 0x8f, 0x05,
  0x02, 0x7c, 0xac, 0xd8, 0x07, 0xf9, 0x58, 0x50, 0xc8, 0xc7, 0x82, 0x42,
  0x3e, 0x16, 0x10, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x38,
  0x00, 0x0f, 0xd2, 0x08, 0x2c, 0x88, 0xe4, 0x33, 0x9a, 0x20, 0x06, 0xc0,
  0x05, 0x83, 0xb2, 0x60, 0x80, 0xcf, 0x05, 0x80, 0xa9, 0xe0, 0x26, 0xb8,
  0x84, 0xd8, 0xc0, 0x12, 0x02, 0xae, 0x00, 0x36, 0xa4, 0x82, 0xdb, 0xc0,
  0x0a, 0x04, 0xae, 0x80, 0x27, 0xa4, 0x02, 0xd6, 0xc0, 0x0a, 0x04, 0x1e,
  0x4d, 0x78, 0x03, 0xe1, 0x82, 0x41, 0xd5, 0x70, 0x16, 0x57, 0x01, 0xc1,
  0x15, 0xa0, 0x05, 0x56, 0x20, 0x70, 0x05, 0xba, 0x71, 0x15, 0x08, 0x5c,
  0x81, 0x6f, 0x60, 0x05, 0x6c, 0xb1, 0x17, 0x0c, 0xd6, 0x82, 0x99, 0x80,
  0x8f, 0x05, 0x8b, 0x7c, 0x2e, 0x00, 0xcc, 0x68, 0x42, 0x1f, 0x04, 0x25,
  0x04, 0x52, 0x2b, 0xe1, 0x07, 0x56, 0x2b, 0xf1, 0x07, 0x56, 0xa0, 0x10,
  0x48, 0x85, 0x42, 0x28, 0xc8, 0x05, 0x83, 0x2a, 0x47, 0x2f, 0xae, 0x82,
  0x87, 0x2b, 0xd8, 0x0b, 0xac, 0x40, 0xe0, 0x0a, 0xda, 0xe3, 0x2a, 0x10,
  0xb8, 0x82, 0xf8, 0xc0, 0x0a, 0xfe, 0x62, 0x2f, 0x18, 0xac, 0x05, 0x66,
  0x01, 0x1f, 0x0b, 0x16, 0xf9, 0x5c, 0x00, 0x98, 0x8a, 0xe2, 0x01, 0x2a,
  0x80, 0xa0, 0x82, 0x01, 0x2a, 0xb0, 0xaa, 0xac, 0x00, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x40, 0x15, 0x52, 0x44, 0x36, 0xd4, 0x62, 0xc4, 0x40,
  0x01, 0x40, 0x10, 0x0c, 0xf6, 0x20, 0x46, 0x4a, 0x23, 0x10, 0x42, 0x24,
  0x34, 0x46, 0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x6c, 0x08, 0x07, 0xf9, 0x18, 0xf1, 0x0b, 0xf2, 0xb1, 0xa2, 0x17,
  0xe4, 0x63, 0x45, 0x3a, 0xc8, 0xc7, 0x8c, 0x74, 0x90, 0x8f, 0x1d, 0xe9,
  0x20, 0x1f, 0x33, 0x06, 0xf8, 0x98, 0x31, 0xc0, 0xc7, 0x8c, 0x01, 0x3e,
  0xa6, 0xc0, 0x84, 0x7c, 0x6c, 0x81, 0x09, 0xf9, 0x18, 0x03, 0x13, 0xf2,
  0x31, 0x63, 0x80, 0x8f, 0x19, 0x03, 0x7c, 0xcc, 0x18, 0xe0, 0x33, 0x62,
  0xb0, 0x00, 0x20, 0x08, 0x06, 0x76, 0x60, 0x26, 0xe4, 0x31, 0x08, 0xc1,
  0x20, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x00, 0x07, 0x6a, 0x42,
  0x1e, 0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f,
  0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x48, 0x83, 0x38, 0x61, 0x8f, 0xbd,
  0xe8, 0x91, 0xd1, 0x84, 0x00, 0xb0, 0x9e, 0xa8, 0x0d, 0xf9, 0x58, 0x4f,
  0xd8, 0x86, 0x7c, 0xac, 0x27, 0x6e, 0x43, 0x3e, 0xa6, 0x13, 0x03, 0x7c,
  0x4c, 0x27, 0x06, 0xf8, 0x98, 0x4e, 0x0c, 0xf0, 0xd9, 0x9c, 0x81, 0x35,
  0xc2, 0x24, 0x4c, 0x86, 0x0d, 0x88, 0x00, 0x21, 0x80, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x60, 0x05, 0x35, 0xa1, 0x0f, 0xd4, 0x18, 0x31, 0xa0,
  0x0e, 0x10, 0x04, 0x83, 0x3e, 0x90, 0x13, 0xf3, 0x08, 0xca, 0xe3, 0x3d,
  0xc6, 0x64, 0x4c, 0xc6, 0xa4, 0x20, 0x86, 0xd7, 0x68, 0x98, 0x25, 0x71,
  0x0d, 0x12, 0x06, 0x64, 0x38, 0x22, 0x80, 0x0d, 0xe7, 0x9b, 0x65, 0x20,
  0x90, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xd8, 0x80, 0x4f, 0xf0,
  0xe3, 0x34, 0xd0, 0x64, 0x34, 0x21, 0x00, 0x86, 0x1b, 0x82, 0x33, 0x01,
  0x83, 0x59, 0x06, 0xa3, 0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20,
  0x0d, 0x40, 0x65, 0x3f, 0x54, 0xa3, 0x4c, 0x46, 0x13, 0x02, 0xc0, 0x8e,
  0x80, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0x06, 0xa3, 0xe2,
  0x1f, 0xad, 0xe1, 0x26, 0xa3, 0x09, 0x41, 0x60, 0xc3, 0x20, 0x1f, 0x0b,
  0xc2, 0x43, 0x3e, 0x16, 0x0c, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x03, 0x38, 0x28, 0x95, 0xf8, 0x08, 0x66, 0x09, 0x8c, 0x81, 0x8a, 0x41,
  0x28, 0xf8, 0x86, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x34, 0x50,
  0x95, 0x12, 0xa1, 0x0d, 0x3b, 0x19, 0x4d, 0x08, 0x06, 0x0b, 0x8f, 0x20,
  0x3e, 0x16, 0x10, 0xf2, 0xb1, 0xf1, 0x08, 0xe2, 0x33, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x6c, 0xe0, 0x2a, 0x2a, 0x92, 0x1b, 0x7b, 0x32, 0x9a,
  0x10, 0x04, 0xc3, 0x0d, 0x41, 0x9e, 0x80, 0xc1, 0x2c, 0x03, 0x72, 0x04,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x80, 0x0a, 0xa4, 0xc2, 0x22, 0xe3,
  0x31, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x79, 0xc0, 0x2a, 0x2c, 0x12,
  0xec, 0x09, 0x6f, 0xec, 0xc6, 0x8b, 0xbc, 0xc8, 0x8b, 0xbc, 0xc8, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x34,
  0x82, 0x11, 0xf2, 0x21, 0x1f, 0x23, 0xe4, 0x43, 0x3e, 0x26, 0x04, 0xf0,
  0xb1, 0x62, 0x3e, 0xe4, 0x63, 0x42, 0x00, 0x1f, 0x33, 0x20, 0xf9, 0x58,
  0x20, 0xc8, 0xc7, 0xe8, 0x23, 0x88, 0x8f, 0x49, 0x01, 0x7d, 0x66, 0x09,
  0x90, 0x81, 0x8e, 0x41, 0x38, 0xcc, 0xc0, 0x60, 0x9f, 0xc1, 0x82, 0xbf,
  0x80, 0x4f, 0x85, 0xc6, 0xab, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18,
  0xb0, 0xc1, 0xb8, 0xfc, 0x88, 0x7b, 0xb8, 0xca, 0x68, 0x42, 0x00, 0x0c,
  0x37, 0x0c, 0x01, 0x19, 0xcc, 0x32, 0x0c, 0x49, 0x30, 0x4b, 0xa0, 0x0c,
  0x54, 0x0c, 0xf6, 0x13, 0x28, 0xc9, 0x40, 0xc5, 0x80, 0x3f, 0x81, 0x2e,
  0x24, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xc0, 0x06, 0xe8, 0x42, 0x26,
  0xf3, 0x31, 0x2b, 0xa3, 0x09, 0x01, 0x70, 0xc1, 0xa0, 0xac, 0x08, 0xe8,
  0x33, 0x4b, 0xb0, 0x0c, 0x54, 0x0c, 0x8a, 0x22, 0x42, 0xc0, 0x40, 0xc5,
  0x40, 0x28, 0x28, 0x04, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x2c,
  0xf4, 0x4a, 0x9a, 0xec, 0xc7, 0x88, 0x81, 0x03, 0x80, 0x20, 0x18, 0x88,
  0x42, 0xb9, 0x80, 0x49, 0x90, 0x1f, 0xf8, 0xc1, 0x26, 0x82, 0x20, 0x08,
  0x35, 0x32, 0x1c, 0x31, 0x90, 0x88, 0xf3, 0xcd, 0x32, 0x34, 0x4c, 0x30,
  0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x69, 0x10, 0x2f, 0x6c, 0xb2, 0x1f,
  0xb6, 0x32, 0x9a, 0x10, 0x00, 0xb3, 0x04, 0xcd, 0x40, 0xc5, 0x20, 0x30,
  0xcc, 0x32, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xb0, 0x20, 0x2e, 0x6e,
  0x12, 0x22, 0x23, 0x06, 0x0e, 0x00, 0x82, 0x60, 0x20, 0x0a, 0xea, 0x52,
  0x26, 0x81, 0x7f, 0xf4, 0x47, 0x9c, 0x08, 0x82, 0x20, 0xe8, 0x08, 0x86,
  0x03, 0x01, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xc6, 0x19, 0x50, 0xf8,
  0x48, 0x6d, 0xd3, 0x16, 0x1b, 0xe0, 0x00, 0x4c, 0x80, 0x10, 0xcd, 0xc4,
  0x39, 0x44, 0xe1, 0xd3, 0xb5, 0x85, 0x06, 0x14, 0x3e, 0x52, 0xdb, 0xb6,
  0x95, 0x06, 0x14, 0x3e, 0x52, 0xdb, 0xb8, 0x95, 0x07, 0x14, 0x3e, 0x42,
  0xe3, 0xb5, 0xd5, 0x06, 0x14, 0x3e, 0x52, 0xdb, 0xfa, 0x0d, 0x18, 0xfe,
  0x12, 0xf9, 0xcf, 0x61, 0xb8, 0x01, 0x85, 0x8f, 0xd4, 0x76, 0x6f, 0xab,
  0x02, 0x85, 0x8f, 0xd0, 0x78, 0x6f, 0x90, 0x02, 0x85, 0x8f, 0xd0, 0xf8,
  0x6e, 0xf6, 0x02, 0xcc, 0x14, 0x22, 0x93, 0x4f, 0xfb, 0x8b, 0x20, 0x49,
  0x80, 0x5d, 0x06, 0x10, 0x9f, 0x16, 0x48, 0xa6, 0x19, 0x80, 0xb0, 0xc0,
  0x44, 0x45, 0xc0, 0x44, 0x98, 0x71, 0x40, 0xe1, 0x23, 0xf5, 0x6d, 0x9b,
  0xab, 0x40, 0xe1, 0x23, 0x74, 0x6e, 0xdb, 0x75, 0x40, 0xe1, 0x23, 0xf5,
  0x9d, 0x5b, 0xac, 0x40, 0xe1, 0x23, 0x74, 0x9e, 0x5b, 0x76, 0x40, 0xe1,
  0x23, 0xf5, 0xbd, 0x9f, 0x00, 0xe4, 0x2f, 0x91, 0xff, 0x1c, 0xfe, 0x13,
  0x11, 0x07, 0x01, 0x0c, 0x44, 0x64, 0xdb, 0x01, 0x4d, 0x4b, 0x5c, 0x13,
  0x15, 0x11, 0xa5, 0x03, 0x0c, 0xb5, 0x6d, 0xa9, 0x01, 0x4d, 0x4b, 0x5c,
  0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0xf5, 0x6d, 0x88, 0x01, 0x4d, 0x4b,
  0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x35, 0x6e, 0xe3, 0x01, 0x85,
  0x8f, 0xd4, 0x77, 0x6f, 0xb4, 0x02, 0x85, 0x8f, 0xd0, 0x39, 0x6f, 0xc4,
  0x01, 0xc7, 0x2a, 0x41, 0xd1, 0x54, 0xd3, 0x36, 0x1a, 0x70, 0xac, 0x12,
  0x14, 0x4d, 0x75, 0x6d, 0xb0, 0x01, 0x44, 0xe4, 0xd3, 0xb6, 0x99, 0x07,
  0x14, 0x3e, 0x52, 0xe3, 0xb6, 0xdd, 0x0a, 0x14, 0x3e, 0x42, 0xeb, 0xb5,
  0xb5, 0x07, 0x14, 0x3e, 0x52, 0xe3, 0xb9, 0xd9, 0x06, 0x14, 0x3e, 0x62,
  0xdb, 0xbb, 0x45, 0x0a, 0x14, 0x3e, 0x52, 0xe3, 0xbc, 0x05, 0x0b, 0x14,
  0x3e, 0x42, 0xeb, 0xbb, 0xf1, 0x0a, 0x14, 0x3e, 0x42, 0xeb, 0x38, 0x09,
  0x61, 0x14, 0x02, 0x7e, 0x86, 0xc2, 0xd8, 0xc6, 0xea, 0xd8, 0xc2, 0xe8,
  0xca, 0x82, 0x9e, 0x80, 0x80, 0xb2, 0x82, 0x9a, 0x82, 0x92, 0x82, 0x9a,
  0xac, 0x7e, 0x48, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4, 0x80, 0x92, 0x48,
  0x60, 0x62, 0x80, 0x80, 0xaa, 0xa4, 0xc2, 0xf2, 0x80, 0x80, 0xac, 0x7e,
  0x48, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4, 0x80, 0x9a, 0x48, 0x60, 0x64,
  0x80, 0x80, 0x80, 0xb4, 0x5c, 0xca, 0xf0, 0xd2, 0xe8, 0x2c, 0x32, 0x60,
  0xf0, 0x11, 0xda, 0x24, 0x03, 0x06, 0x1f, 0xa9, 0xcd, 0x34, 0x60, 0xf0,
  0x11, 0xdb, 0x72, 0x03, 0x0a, 0x1f, 0xb1, 0x6f, 0xda, 0x58, 0x05, 0x0a,
  0x1f, 0xa9, 0x73, 0xda, 0x88, 0x05, 0x0a, 0x1f, 0xa1, 0x77, 0xda, 0x8e,
  0x03, 0x0a, 0x1f, 0xb1, 0xef, 0xdb, 0xac, 0x05, 0x06, 0xef, 0x7a, 0x2c,
  0x5c, 0x60, 0x69, 0x89, 0x6b, 0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1, 0xd0,
  0x03, 0x88, 0x2f, 0x12, 0x76, 0x4b, 0x0f, 0x20, 0xbe, 0x48, 0xe0, 0x4d,
  0x3d, 0x80, 0xf8, 0x22, 0xa1, 0xb7, 0x5a, 0x81, 0xc2, 0x47, 0xea, 0xbc,
  0xb7, 0x57, 0x81, 0xc2, 0x47, 0xea, 0xfc, 0x36, 0x7e, 0x81, 0x06, 0x60,
  0x02, 0x84, 0x68, 0x26, 0xce, 0x21, 0x0a, 0xbf, 0x36, 0x59, 0x81, 0xc2,
  0x47, 0xea, 0x5c, 0xb7, 0xc2, 0x80, 0xa8, 0x43, 0xa4, 0x07, 0x98, 0x84,
  0x63, 0x05, 0x30, 0x49, 0x6c, 0x06, 0xe2, 0x32, 0xf2, 0x80, 0xc2, 0x47,
  0x6c, 0x9c, 0xb6, 0xf3, 0x80, 0xc2, 0x47, 0x6c, 0xfc, 0x36, 0x5c, 0x81,
  0xc2, 0x47, 0x6a, 0xdd, 0x36, 0xf7, 0x80, 0xc2, 0x47, 0x6c, 0x5c, 0xb7,
  0x5e, 0x81, 0xc2, 0x47, 0x6a, 0x3d, 0x37, 0x61, 0x81, 0xc2, 0x47, 0x6a,
  0x9d, 0xb7, 0x7d, 0x01, 0x63, 0x0a, 0x91, 0xc9, 0xaf, 0xcd, 0x30, 0x40,
  0xea, 0x10, 0xe9, 0x01, 0x26, 0xe1, 0x58, 0x01, 0x4c, 0x12, 0x9b, 0x81,
  0xb8, 0x72, 0xbb, 0x16, 0x88, 0x1c, 0x41, 0x58, 0x28, 0x09, 0x71, 0x1a,
  0xce, 0x21, 0x0a, 0x1f, 0xf1, 0x69, 0x3b, 0x15, 0x68, 0x56, 0xc0, 0xda,
  0xa8, 0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x06, 0x9b, 0x0c, 0x28, 0x7c, 0x84,
  0xae, 0x77, 0x6b, 0x15, 0x28, 0x7c, 0xc4, 0xce, 0x6b, 0xdb, 0x0c, 0x28,
  0x7c, 0x84, 0xae, 0x7b, 0x83, 0x15, 0x28, 0x7c, 0xc4, 0xce, 0x71, 0x2b,
  0x16, 0x28, 0x7c, 0xa4, 0xde, 0x6b, 0x9b, 0x15, 0x28, 0x7c, 0xc4, 0xce,
  0x77, 0xdb, 0x15, 0x28, 0x56, 0x09, 0x8a, 0x26, 0x03, 0x0d, 0x28, 0x7c,
  0x84, 0xb6, 0x6b, 0x23, 0x0d, 0x28, 0x7c, 0x84, 0xb6, 0x6f, 0xa3, 0x0d,
  0x28, 0x7c, 0x84, 0xb6, 0x73, 0xb3, 0x15, 0x28, 0x7c, 0xc4, 0xd6, 0x69,
  0xab, 0x0c, 0x28, 0x3e, 0x2d, 0x90, 0x70, 0xbb, 0x0d, 0x28, 0x7c, 0x84,
  0xb6, 0x79, 0x7b, 0x17, 0x78, 0x00, 0x26, 0x40, 0x88, 0x66, 0xe2, 0x1c,
  0xa2, 0xf0, 0x11, 0x9f, 0x3e, 0x85, 0xc5, 0xff, 0x85, 0x08, 0x99, 0x7e,
  0x62, 0x30, 0x08, 0xf3, 0x15, 0x28, 0x7c, 0xc4, 0xd6, 0x75, 0xcb, 0x15,
  0x28, 0x7c, 0xc4, 0xd6, 0x6f, 0x1b, 0x16, 0x28, 0x7c, 0xc4, 0xd6, 0x7b,
  0x8b, 0x0f, 0x18, 0xbe, 0x48, 0x30, 0xc2, 0x00, 0x42, 0x08, 0x6a, 0xdd,
  0x8a, 0x03, 0x0a, 0x1f, 0xa1, 0xef, 0xda, 0xac, 0x03, 0x0a, 0x1f, 0xa1,
  0x6f, 0xdc, 0x20, 0x03, 0x9c, 0x92, 0x30, 0x00, 0x01, 0xfb, 0x6a, 0xbd,
  0x75, 0xbe, 0xdb, 0x36, 0xec, 0x80, 0xc2, 0x47, 0xe8, 0x5b, 0x37, 0xf1,
  0x80, 0xc2, 0x47, 0xe8, 0x9b, 0x37, 0x63, 0x81, 0xc2, 0x47, 0xec, 0xdd,
  0x36, 0xca, 0x80, 0xc2, 0x47, 0xea, 0x9a, 0xbf, 0x04, 0xca, 0xff, 0x85,
  0x08, 0x99, 0x7e, 0x62, 0x30, 0x08, 0x7f, 0x71, 0x9c, 0x87, 0xb8, 0x90,
  0xc9, 0xea, 0x05, 0x26, 0x80, 0x09, 0x10, 0xa2, 0x99, 0x38, 0x87, 0x28,
  0x7c, 0xda, 0x5f, 0x04, 0x49, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x13, 0x04, 0x4b, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x04, 0x98, 0x01, 0x28,
  0x60, 0x81, 0xb2, 0x2b, 0xc2, 0x80, 0xf2, 0x1f, 0x28, 0x40, 0x81, 0x72,
  0x2b, 0x99, 0x32, 0x0c, 0x28, 0x51, 0x81, 0x1a, 0x14, 0x28, 0x5d, 0x81,
  0x1a, 0x28, 0x15, 0x32, 0x8d, 0x00, 0x94, 0x07, 0x0d, 0xc6, 0x08, 0x40,
  0x10, 0x04, 0xf1, 0x5f, 0x18, 0x23, 0x08, 0x49, 0x30, 0x04, 0xbd, 0x31,
  0x02, 0x10, 0x04, 0x41, 0x10, 0x14, 0xc6, 0x08, 0xde, 0x99, 0x34, 0xd1,
  0x6e, 0x8c, 0x60, 0x8f, 0xd5, 0x78, 0xff, 0x85, 0x31, 0x02, 0xd8, 0x67,
  0xe7, 0xf2, 0x1b, 0x23, 0xc8, 0xf5, 0xd2, 0x9d, 0xbf, 0x31, 0x02, 0x9c,
  0xbd, 0xcf, 0xdc, 0x1b, 0x23, 0x00, 0x41, 0x10, 0xc4, 0xbf, 0x11, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x33, 0x11, 0x1c, 0x20, 0x06, 0xa4, 0x40, 0xe8,
  0x60, 0x18, 0xa4, 0x0e, 0x8d, 0x41, 0xec, 0x90, 0x18, 0xe4, 0x0e, 0x89,
  0x41, 0xf0, 0x60, 0x18, 0x24, 0x0f, 0x81, 0x41, 0xec, 0xf0, 0x18, 0xe4,
  0x0e, 0x8f, 0x41, 0xec, 0x70, 0x19, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x60, 0x0a, 0xbb, 0x30, 0x06, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0xd0, 0x01, 0x39, 0x70, 0xd7, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xb0,
  0x41, 0x3a, 0x90, 0x81, 0xf0, 0x0a, 0xa3, 0x09, 0x81, 0x50, 0x81, 0x2c,
  0x5c, 0x11, 0xc1, 0x8c, 0x26, 0x10, 0x43, 0x09, 0xb5, 0x70, 0x15, 0x9c,
  0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x29, 0x94, 0xc3, 0x29,
  0x04, 0x43, 0x05, 0x43, 0x54, 0xc0, 0x0b, 0x57, 0xc8, 0x21, 0xc5, 0x04,
  0x51, 0xc1, 0x30, 0x45, 0x04, 0x52, 0x43, 0x10, 0x35, 0x88, 0xc3, 0x55,
  0xb0, 0x0a, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xa4, 0xf0, 0x0e,
  0xb1, 0x10, 0x40, 0x15, 0x0c, 0x51, 0x45, 0x30, 0x15, 0x08, 0x52, 0x46,
  0x10, 0x15, 0x20, 0x50, 0x84, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x20, 0x0b, 0xef, 0xd0, 0x07, 0x62, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08,
  0x06, 0xa0, 0x90, 0x0f, 0x7c, 0x10, 0xac, 0xc3, 0x20, 0xfc, 0xc1, 0x1f,
  0xfc, 0xc1, 0x1f, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x54, 0x80,
  0x07, 0x5a, 0x83, 0x03, 0x25, 0x64, 0x50, 0x04, 0x28, 0xe8, 0x70, 0x43,
  0x20, 0x0f, 0x60, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x6c, 0xa0,
  0x12, 0xa5, 0x30, 0x06, 0xf6, 0x30, 0x9a, 0x10, 0x08, 0xc3, 0x0d, 0x41,
  0x3d, 0x80, 0xc1, 0x2c, 0x83, 0x10, 0x04, 0x95, 0x7c, 0x50, 0xc1, 0x3e,
  0x68, 0x05, 0xfc, 0xc0, 0xa3, 0x09, 0xc6, 0x30, 0xdc, 0x20, 0x04, 0x61,
  0x70, 0x01, 0x20, 0xaa, 0x01, 0x89, 0x2b, 0x21, 0xd8, 0x59, 0x02, 0x61,
  0xa0, 0x02, 0x10, 0x02, 0x0f, 0x98, 0x65, 0x18, 0x90, 0x66, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0x5c, 0xc1, 0x24, 0x64, 0xc1, 0x0e, 0x46, 0x0c,
  0x1a, 0x00, 0x04, 0xc1, 0x00, 0x14, 0x5c, 0x22, 0x16, 0x02, 0x90, 0x88,
  0x20, 0x5a, 0xa0, 0x05, 0x5a, 0xa0, 0x85, 0xd1, 0x84, 0x00, 0xa8, 0x40,
  0x16, 0xf4, 0x82, 0x41, 0xd5, 0xf0, 0x0f, 0x58, 0x41, 0x2d, 0xe8, 0x05,
  0x83, 0x32, 0x42, 0x15, 0xe4, 0x63, 0xc2, 0x2a, 0xc8, 0xc7, 0x84, 0x56,
  0x80, 0x8f, 0x09, 0xae, 0x00, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x80, 0x03, 0xb0, 0x60, 0x09, 0xc1, 0x50, 0x21, 0x88, 0xcf, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0xc0, 0x81, 0x58, 0xb8, 0xc4, 0x60, 0x42, 0x10,
  0x1f, 0x8b, 0x85, 0x20, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x00,
  0x07, 0x65, 0xe1, 0x12, 0xc1, 0x70, 0x04, 0xc2, 0x0a, 0xc3, 0x37, 0x1c,
  0x81, 0xb4, 0xc2, 0xf0, 0x59, 0x2d, 0x0c, 0xf1, 0x99, 0x6e, 0x08, 0x88,
  0x61, 0xba, 0x41, 0x28, 0x06, 0x13, 0x1a, 0xf8, 0x98, 0xd0, 0xc0, 0x67,
  0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xec, 0x40, 0x2d, 0xcc, 0x41, 0x08,
  0x14, 0x21, 0x50, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x0e, 0xdc,
  0xc2, 0x1c, 0x02, 0x23, 0x02, 0xf9, 0x18, 0x21, 0xc8, 0xc7, 0x06, 0x47,
  0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x80, 0x0a, 0x67, 0x01, 0x0f,
  0xb2, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x79, 0xf0, 0x16, 0xef,
  0x10, 0xf8, 0x04, 0x18, 0xb8, 0x81, 0x3c, 0xc8, 0x83, 0x3c, 0xc8, 0xc3,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x81, 0x2b, 0xa4, 0x45, 0x3d, 0xe0, 0xc2, 0x88,
  0x41, 0x03, 0x80, 0x20, 0x18, 0x80, 0x42, 0x5c, 0xd0, 0x43, 0x30, 0x16,
  0x65, 0x30, 0x07, 0xf7, 0x70, 0x0f, 0xf7, 0x70, 0x0f, 0xa3, 0x09, 0x01,
  0x50, 0x41, 0x3d, 0xe8, 0x05, 0x83, 0xaa, 0x41, 0x2c, 0xb0, 0x02, 0x7c,
  0xd0, 0x0b, 0x06, 0x65, 0x44, 0x3b, 0xc8, 0xc7, 0x04, 0x77, 0x90, 0x8f,
  0x09, 0xf0, 0x00, 0x1f, 0x13, 0xe2, 0x01, 0x3e, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x00, 0x07, 0xa3, 0xf1, 0x16, 0x82, 0xad, 0x43, 0x10, 0x9f,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x80, 0x83, 0xd2, 0x88, 0x8b, 0xc1,
  0x84, 0x20, 0x3e, 0x46, 0x0f, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0x00, 0x0e, 0x50, 0x23, 0x2e, 0x82, 0xe1, 0x08, 0xe4, 0x1d, 0x86,
  0x6f, 0x38, 0x02, 0x81, 0x87, 0xe1, 0x33, 0x7c, 0x18, 0xe2, 0x33, 0xdd,
  0x10, 0x10, 0xc3, 0x74, 0x83, 0x50, 0x0c, 0x26, 0x34, 0xf0, 0x31, 0xa1,
  0x81, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0xd8, 0x41, 0x6b, 0xa4,
  0x84, 0x10, 0x28, 0x42, 0xa0, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01,
  0x1c, 0xc4, 0x46, 0x4a, 0x04, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90,
  0x06, 0xb5, 0xf1, 0x12, 0xed, 0x10, 0x1a, 0xa3, 0x09, 0x01, 0x60, 0x03,
  0x48, 0xc8, 0xc7, 0x82, 0x43, 0x3e, 0x26, 0x1c, 0xf2, 0xb1, 0x68, 0x24,
  0xe4, 0x63, 0xc1, 0x21, 0x1f, 0x23, 0xca, 0x00, 0x3e, 0x46, 0x94, 0x01,
  0x7c, 0x6c, 0x28, 0x03, 0xf8, 0x6c, 0xce, 0x10, 0x12, 0xa7, 0x71, 0x1a,
  0xc3, 0x06, 0x44, 0xa0, 0x10, 0xc0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0xb0, 0x02, 0x6c, 0xec, 0x04, 0x3f, 0x8c, 0x18, 0x50, 0x07, 0x08, 0x82,
  0x41, 0x1f, 0xe0, 0x86, 0x4c, 0x04, 0x38, 0x11, 0x13, 0xa9, 0x91, 0x1a,
  0xa9, 0x51, 0x10, 0x03, 0x49, 0xbc, 0x81, 0x1b, 0xb4, 0xc1, 0x32, 0x12,
  0x24, 0x0c, 0xc8, 0x70, 0x44, 0x50, 0x12, 0xce, 0x37, 0xcb, 0x40, 0x20,
  0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xb0, 0x81, 0x78, 0xf4, 0xc4,
  0x3e, 0xb8, 0xc6, 0x68, 0x42, 0x00, 0x0c, 0x37, 0x04, 0xad, 0x01, 0x06,
  0xb3, 0x0c, 0x46, 0x11, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x1a,
  0x98, 0x07, 0x58, 0xf8, 0xc3, 0x6a, 0x8c, 0x26, 0x04, 0x80, 0x1d, 0x01,
  0x7d, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0d, 0xd2, 0x63, 0x2c,
  0x42, 0x82, 0x36, 0x46, 0x13, 0x82, 0xc0, 0x86, 0x41, 0x3e, 0x16, 0xd0,
  0x84, 0x7c, 0x2c, 0x18, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x70, 0xb0, 0x1e, 0x3d, 0x11, 0xcc, 0x12, 0x18, 0x03, 0x15, 0x83, 0x50,
  0x98, 0x09, 0x31, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x69, 0x00, 0x1f,
  0x6a, 0x81, 0x12, 0xbc, 0x31, 0x9a, 0x10, 0x0c, 0x66, 0x13, 0x41, 0x7c,
  0x2c, 0x20, 0xe4, 0x63, 0x38, 0x11, 0xc4, 0x67, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xd8, 0x80, 0x3e, 0xde, 0xa2, 0x25, 0xc2, 0x63, 0x34, 0x21,
  0x08, 0x86, 0x1b, 0x82, 0xdf, 0x00, 0x83, 0x59, 0x06, 0xe4, 0x08, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x15, 0xd4, 0x63, 0x2e, 0x72, 0x62,
  0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0xf2, 0x40, 0x3e, 0xe4, 0x22, 0x08,
  0x8f, 0x71, 0x88, 0x87, 0xba, 0xa8, 0x8b, 0xba, 0xa8, 0x8b, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x68, 0x04,
  0x23, 0xca, 0x42, 0x3e, 0x46, 0x94, 0x85, 0x7c, 0x4c, 0x08, 0xe0, 0x63,
  0x85, 0x59, 0xc8, 0xc7, 0x84, 0x00, 0x3e, 0x66, 0x40, 0xf2, 0xb1, 0x40,
  0x90, 0x8f, 0xa5, 0x45, 0x10, 0x1f, 0x93, 0x02, 0xfa, 0xcc, 0x12, 0x20,
  0x03, 0x25, 0x03, 0xad, 0x08, 0xac, 0x30, 0xb0, 0x82, 0xc1, 0x0a, 0xc7,
  0x40, 0xc9, 0x80, 0x2e, 0x02, 0xae, 0x0c, 0x68, 0x60, 0x10, 0xc7, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0xc0, 0xc2, 0x7d, 0x90, 0xc6, 0x58, 0x8c,
  0x18, 0x38, 0x00, 0x08, 0x82, 0x81, 0x28, 0xfc, 0x87, 0x5f, 0x04, 0xf4,
  0x20, 0x12, 0xa6, 0x21, 0x08, 0x82, 0x70, 0x17, 0xc3, 0x11, 0x43, 0x5b,
  0x38, 0xdf, 0x2c, 0x83, 0x92, 0x04, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x90, 0x06, 0x2b, 0x52, 0x1a, 0x63, 0x01, 0x1f, 0xa3, 0x09, 0x01, 0x30,
  0x4b, 0xa0, 0x0c, 0x54, 0x0c, 0x42, 0xc2, 0x20, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x00, 0x0b, 0xfc, 0x91, 0x1a, 0x69, 0x31, 0x62, 0xe0, 0x00,
  0x20, 0x08, 0x06, 0xa2, 0x40, 0x22, 0xa3, 0x11, 0xe4, 0xc3, 0x49, 0xac,
  0x86, 0x20, 0x08, 0x02, 0x5f, 0x60, 0x38, 0x10, 0x81, 0x00, 0x00, 0x00,
  0x66, 0x1b, 0x90, 0xb0, 0xc0, 0x44, 0x45, 0xc0, 0x44, 0xf4, 0xf6, 0x67,
  0xb8, 0x26, 0xd2, 0xd4, 0xbc, 0xdd, 0x45, 0x1d, 0x22, 0x3d, 0xc0, 0x24,
  0x1c, 0x2b, 0x80, 0x49, 0x62, 0x33, 0x10, 0x97, 0xd9, 0x11, 0x42, 0x60,
  0xd7, 0x26, 0x1d, 0x50, 0xf8, 0x08, 0x8d, 0xd7, 0xf6, 0x18, 0x50, 0xf8,
  0x48, 0x6d, 0xdf, 0xa6, 0x1d, 0x50, 0xf8, 0x08, 0x8d, 0xdf, 0xf6, 0x1d,
  0x50, 0xf8, 0x08, 0x8d, 0xe7, 0x66, 0x19, 0x50, 0xf8, 0x48, 0x6d, 0xef,
  0x56, 0x1e, 0x50, 0xf8, 0x08, 0x8d, 0xef, 0x86, 0x1e, 0x50, 0xf8, 0x88,
  0x8d, 0xf7, 0x56, 0x29, 0x60, 0x4c, 0x21, 0x32, 0xf9, 0xb4, 0x59, 0x07,
  0x10, 0x9f, 0x16, 0x48, 0x36, 0x1b, 0x60, 0x7c, 0x5a, 0x20, 0xd5, 0xb4,
  0xc5, 0x06, 0x18, 0x9f, 0x16, 0x48, 0x75, 0x6d, 0xfd, 0x01, 0x91, 0x23,
  0x08, 0x0b, 0x25, 0x21, 0x4e, 0xc3, 0x39, 0x44, 0xe1, 0x23, 0x3e, 0x6d,
  0x9c, 0x01, 0x44, 0xe1, 0x2c, 0x83, 0x65, 0x07, 0x20, 0x2c, 0x30, 0x51,
  0x11, 0x30, 0x11, 0xe6, 0x1a, 0x50, 0xf8, 0x48, 0x7d, 0xd3, 0x66, 0x1e,
  0x50, 0xf8, 0x08, 0x9d, 0xd3, 0x06, 0x1b, 0x50, 0xf8, 0x48, 0x7d, 0xdb,
  0x86, 0x1b, 0x50, 0xf8, 0x48, 0x7d, 0xe3, 0x96, 0x1e, 0x50, 0xf8, 0x88,
  0x9d, 0xdb, 0xd6, 0x1b, 0x50, 0xf8, 0x48, 0x7d, 0xeb, 0xa6, 0x1e, 0x50,
  0xf8, 0x08, 0x9d, 0xdf, 0x16, 0x1c, 0x50, 0xf8, 0x48, 0x7d, 0xf3, 0xc6,
  0x1e, 0x50, 0xf8, 0x88, 0x9d, 0xe7, 0x46, 0x1c, 0xd0, 0xb4, 0xc4, 0x35,
  0x51, 0x11, 0x51, 0x3a, 0xc0, 0x50, 0xe7, 0x66, 0x1a, 0xd0, 0xb4, 0xc4,
  0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x50, 0xeb, 0x96, 0x1c, 0xd0, 0xb4,
  0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x50, 0xef, 0x96, 0x18, 0x40,
  0xb8, 0x26, 0xd2, 0x58, 0x64, 0x40, 0xd3, 0x12, 0xd7, 0x44, 0x45, 0x44,
  0xe9, 0x00, 0x43, 0xdd, 0x9b, 0x78, 0x40, 0xb1, 0x4a, 0x50, 0x34, 0xd9,
  0x6f, 0xc0, 0xb1, 0x4a, 0x50, 0x34, 0xd5, 0xb8, 0x39, 0x06, 0x14, 0x3e,
  0x42, 0xdb, 0xb6, 0x91, 0x06, 0x5c, 0x52, 0x24, 0xac, 0x00, 0x26, 0x36,
  0x03, 0x71, 0x7d, 0xd4, 0xb2, 0xac, 0x84, 0xe4, 0xd3, 0x3e, 0x42, 0x5b,
  0x65, 0x40, 0xe1, 0x23, 0xb4, 0xad, 0xdb, 0x74, 0x40, 0xe1, 0x23, 0x35,
  0x6e, 0x5b, 0x6b, 0x40, 0xe1, 0x23, 0xb4, 0xdd, 0xdb, 0x76, 0x40, 0xe1,
  0x23, 0x35, 0x8e, 0x1b, 0x75, 0x40, 0xf1, 0x69, 0x81, 0xc4, 0x1b, 0x78,
  0x40, 0xe1, 0x23, 0x35, 0xae, 0x5b, 0x74, 0x40, 0xe1, 0x23, 0x35, 0x4e,
  0x93, 0x10, 0x46, 0x21, 0xe0, 0x67, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d,
  0x8c, 0xae, 0x2c, 0xe8, 0x09, 0x08, 0x28, 0x2b, 0xa8, 0x29, 0x28, 0x29,
  0xa8, 0xc9, 0xea, 0x87, 0xc4, 0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0x28,
  0x89, 0x04, 0x26, 0x06, 0x08, 0xa8, 0x4a, 0x2a, 0x2c, 0x0f, 0x08, 0xc8,
  0xea, 0x87, 0xc4, 0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0xa8, 0x89, 0x04,
  0x46, 0x06, 0x08, 0x08, 0x48, 0xcb, 0xa5, 0x0c, 0x2f, 0x8d, 0xce, 0x84,
  0x03, 0x06, 0x1f, 0xb1, 0xed, 0x35, 0xa0, 0xf0, 0x11, 0xfa, 0xae, 0x8d,
  0x3f, 0x60, 0xf0, 0xae, 0xc7, 0x6e, 0x03, 0x0a, 0x1f, 0xa1, 0xef, 0xdb,
  0x78, 0x03, 0x0a, 0x1f, 0xa1, 0xef, 0xdc, 0x0e, 0x05, 0x96, 0x96, 0xb8,
  0x26, 0x2a, 0x22, 0x4a, 0x07, 0x18, 0x0c, 0x38, 0xa0, 0xf0, 0x11, 0xfa,
  0xde, 0x0d, 0x3a, 0xa0, 0xf0, 0x11, 0xfa, 0xee, 0xed, 0x3c, 0xa0, 0xf0,
  0x91, 0x3a, 0xaf, 0x6d, 0x3d, 0xa0, 0xf0, 0x91, 0x3a, 0xc7, 0xcd, 0x52,
  0xa0, 0x01, 0x98, 0x00, 0x21, 0x9a, 0x89, 0x73, 0x88, 0xc2, 0xa7, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x28, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x05, 0x00,
  0x82, 0x60, 0x20, 0x07, 0xa3, 0x10, 0x6c, 0xce, 0x40, 0xc0, 0x01, 0x1c,
  0x0c, 0x1b, 0x10, 0x81, 0x30, 0x00, 0x18, 0x0e, 0x04, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x56, 0xb5, 0xac, 0x00, 0xd6, 0x72, 0x54, 0x14,
  0x11, 0xcd, 0x64, 0x52, 0x4a, 0x04, 0x60, 0x29, 0x80, 0x2d, 0x0e, 0x30,
  0xd8, 0x14, 0x01, 0x4c, 0x53, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34, 0x18, 0x01, 0x00,
  0x9b, 0x33, 0x08, 0x6e, 0xe0, 0x06, 0xc3, 0x06, 0x44, 0x20, 0x0c, 0x00,
  0x86, 0x03, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x26, 0xa5, 0x44, 0x00,
  0x96, 0x02, 0xd8, 0xe2, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
